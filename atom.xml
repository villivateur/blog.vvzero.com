<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>VVBLOG</title>
  
  <subtitle>三帛的世界</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.vvzero.com/"/>
  <updated>2022-02-18T05:14:15.167Z</updated>
  <id>https://blog.vvzero.com/</id>
  
  <author>
    <name>Villivateur Von</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>苏州新冠疫情带来 2019 年 12 月的回忆</title>
    <link href="https://blog.vvzero.com/2022/02/18/thoughts-in-2022-2-suzhou-covid-19-epidemic/"/>
    <id>https://blog.vvzero.com/2022/02/18/thoughts-in-2022-2-suzhou-covid-19-epidemic/</id>
    <published>2022-02-18T04:29:29.000Z</published>
    <updated>2022-02-18T05:14:15.167Z</updated>
    
    <content type="html"><![CDATA[<p>苏州最近多地出现了新冠肺炎病人，我现在就在苏州。以前总是看到其他地方各种中高风险地区，各种全员核酸检测，现在我就身处其中。</p><p>很多人已经习惯了新闻里每天都会出现的疫情播报，习惯了每天戴口罩，但我总能记起 2019 年 12 月前后的一些琐碎细节，恍如隔世。</p><p>2019 年 12 月，我还在南航，大四上学期。这大概就是我“大学最幸福的时光”的最后一个多月吧，各种主要的困难课程都在大一大二结束了，大三又有大把的时间跟创新区的大神们学技术、吹牛逼，现在技术水平尚可，时间充裕，毕设就是小儿科，连校招都尘埃落定了，该干一番大事了。</p><p>大概 12 月 25 日左右，我在创新区度过了与往常一样幸福的一天后，晚上看到了“武汉出现新型冠状病毒”相关的新闻。当时我就有一点害怕，毕竟我当年也是生物课程的学霸，关于传染病相关的理论也略懂。只是不知道怎么办，想了想，于是去校门口药店买了一包医用口罩，黑色的，质量非常好，只是包装有点旧了，甚至落了灰尘。</p><p>第二天戴着口罩在路上走，倒也没有人侧目，就是自己感觉有点怪怪的，有点格格不入。到了导师实验室也就一个学长“哟，戴口罩干啥”，我嘿嘿傻笑。晚上从创新区回宿舍，遇到了陈学弟，问我咋了，我说武汉出现了新型肺炎，防范一下。陈学弟不以为意：“武汉离南京好远呢”，我：“逻辑距离其实挺近的，坐高铁几个小时而已”。</p><p>12 月 30 日左右，我陪玲玲坐校车去南航明故宫校区拿普通话考试证书。在校车上，当时当然不会有人戴口罩，我也没戴。我跟玲玲说了“肺炎”相关的问题，然后又在微信上问了高中同学王同学的意见（他当时在南医大学医），王同学：“小心点，这好像是新型冠状病毒造成的肺炎，去武汉的话得戴好口罩！”</p><p>玲玲和我好像都多了一丝忧愁，拿到证书后，我分了玲玲几个口罩。</p><p>2020 年 1 月中旬回家，刚好是全民大规模防疫的前夕。我坐大巴回家的，全车只有我一个人戴口罩，他们也并不知道接下来两三天会发生什么，当然不是过年的喜庆。</p><p>接下来的事情就众所周知了，只记得当时，我突然很反感与我共处一室的人咳嗽，我开始疯狂洗手，我再也不直接用手摸脸抠鼻……我还记得我变得很焦虑，在群里与大家吹水的话题由“Nginx 代理转发规则”变成了“新冠病毒特效药”。大年初三左右，同一个小区的姨妈来我家拜年，我也躲在自己房间里不见……</p><p>我曾跟玲玲开玩笑似的聊过：“细想起来，我们真的好惨好倒霉啊，大学刚要毕业，正是最有干劲的时候，结果新冠肺炎来了，全世界的情形因此急转而下，很多事情难度变得很大……”</p><p>没想到，现在已经是 2022 年 2 月了，四舍五入都快三年了。但我现在心态好得不行，城市周围就有病人，但我并不焦虑。只不过依旧像《生活大爆炸》里的 Sheldon 一样，特别爱卫生，周围有人有症状我都会离他远远的，依旧勤洗手，依旧不去摸脸……</p><p>我也依旧期待着，全世界彻底摆脱疫情阴霾的那一天。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;苏州最近多地出现了新冠肺炎病人，我现在就在苏州。以前总是看到其他地方各种中高风险地区，各种全员核酸检测，现在我就身处其中。&lt;/p&gt;
&lt;p&gt;很多人已经习惯了新闻里每天都会出现的疫情播报，习惯了每天戴口罩，但我总能记起 2019 年 12 月前后的一些琐碎细节，恍如隔世。&lt;/p
      
    
    </summary>
    
      <category term="LIVES" scheme="https://blog.vvzero.com/categories/LIVES/"/>
    
    
      <category term="苏州" scheme="https://blog.vvzero.com/tags/%E8%8B%8F%E5%B7%9E/"/>
    
      <category term="新冠肺炎" scheme="https://blog.vvzero.com/tags/%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E/"/>
    
  </entry>
  
  <entry>
    <title>随便聊聊最近在本站折腾的那些东西</title>
    <link href="https://blog.vvzero.com/2022/01/24/Casual-talk-of-current-site-management/"/>
    <id>https://blog.vvzero.com/2022/01/24/Casual-talk-of-current-site-management/</id>
    <published>2022-01-24T02:23:44.000Z</published>
    <updated>2022-01-24T08:12:37.998Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>重新加上了 Disqus 评论系统，翻译了一个树莓派引脚定义网站，换了企业邮箱服务商，部署了一个站点监控系统，开始搞 nextcloud 中文论坛……随便聊聊最近在本站折腾的那些东西。</p></blockquote><h2 id="Disqus-评论系统"><a href="#Disqus-评论系统" class="headerlink" title="Disqus 评论系统"></a>Disqus 评论系统</h2><p>本站博客一直用的是 hexo，评论系统一开始也是用的 Disqus，后来不知道为啥就把评论系统给删了（可能是因为被墙了没意思？还是因为换了主题不支持啥的）。评论系统删了以后，又脑抽用 flarum 搭建了一个论坛，然后每篇博客前面都加一个对应的论坛讨论地址……这个方案被 PM 学叔给喷了，因为谁会为了评论，再去注册一个你的论坛账户呢？所以前几天把论坛给删了（话说也只有瑞辅一个人评论过一次，哈哈）。</p><p>Disqus 评论系统可能是在 hexo 上最好用的评论系统了，谁让 hexo 自己本身就是一个静态页面呢。但问题是 Disqus 被墙了，我得提醒读者，本站是有评论系统的。很久以前看到奶冰的博客，也是用的 Disqus，他是自己加了一个按钮，提醒用户点击加载 Disqus 评论组件。于是时隔几年我把这个想法抄过来了。</p><p>一开始感觉做这个按钮好复杂啊，因为自己几乎没有前端开发的经验。但是随便翻了翻我用的这个 aircloud 主题，发现源码改起来还是挺容易的，就强行加了一个按钮（话说改的方法我也上传到我 fork 的这个仓库里面了，<a href="https://github.com/Villivateur/hexo-theme-aircloud">https://github.com/Villivateur/hexo-theme-aircloud</a>。</p><h2 id="博客主题的魔改"><a href="#博客主题的魔改" class="headerlink" title="博客主题的魔改"></a>博客主题的魔改</h2><p>除了改了评论系统，我也魔改了其他小东西。我有点洁癖嘛，而且自从上次 jsdelivr 被拔网线的事情之后，我觉得静态资源用其他的站点托管都不太稳定，于是把 aircloud 里面用到的 js 和 CSS 都下载并重新托管在了自己的服务器上。</p><p>aircloud 还提供了浏览量计数功能，一看也是加载了第三方的 JS，算了不要了，有点洁癖。</p><h2 id="树莓派引脚定义网站-pinout-vvzero-com"><a href="#树莓派引脚定义网站-pinout-vvzero-com" class="headerlink" title="树莓派引脚定义网站 pinout.vvzero.com"></a>树莓派引脚定义网站 pinout.vvzero.com</h2><p>很早就了解到过一个做得很棒的树莓派引脚定义查询网站 pinout.xyz，而且已经有人翻译成了法语、德语、土耳其语啥的。我一直有很强烈的翻译欲望，现在终于找到了一个适合翻译的（之前没人翻译过、数据量不大），于是就开始了。</p><p>按照原作者给的翻译指引翻译了几个页面，但是感觉不过瘾，于是把本不该翻译的也翻译了（比如页面左下角的树莓派小图，还有生成脚本里面的一些细节），看来是没法全部提交 PR 了。故又 fork 了一个纯中文版的仓库，地址 <a href="https://git.vvzero.com/villivateur/pinout.vvzero.com">https://git.vvzero.com/villivateur/pinout.vvzero.com</a> ，用于部署 <a href="https://pinout.vvzero.com/">https://pinout.vvzero.com</a> 。按照翻译指引的仓库 <a href="https://github.com/Villivateur/Pinout.xyz">https://github.com/Villivateur/Pinout.xyz</a> 只用来提交 PR。</p><h2 id="zoho-企业邮箱"><a href="#zoho-企业邮箱" class="headerlink" title="zoho 企业邮箱"></a>zoho 企业邮箱</h2><p>腾讯企业邮箱是越来越恶心了，强行给你绑企业微信，还各种限制，不用微信登陆就强制改密码，算了，终于忍不了弃用了。V 站网友推荐了 zoho 邮箱，试了下感觉不错，于是给自己和玲玲买了两个账户，国区的，一年一共 100，完全可以接受。</p><p>目前发现 zoho 邮箱有两个问题：</p><ol><li>spam 有点严格，zoho 自家发的邮件都会进去，哈哈</li><li>我在 archive.org 的注册邮件，zoho 收不到</li></ol><h2 id="站点监控部署"><a href="#站点监控部署" class="headerlink" title="站点监控部署"></a>站点监控部署</h2><p>也是看到奶冰的网站，有个站点监控的玩意，用了 uptimerobot 的服务，试了下挺好玩，于是也部署在了 <a href="https://status.vvzero.com/">https://status.vvzero.com</a></p><h2 id="nextcloud-中文论坛"><a href="#nextcloud-中文论坛" class="headerlink" title="nextcloud 中文论坛"></a>nextcloud 中文论坛</h2><p>算是闲得蛋疼吧，感觉没人做 nextcloud 中文论坛，但我用 nextcloud 确实很多，就“抢先”搞了，虽然目前没什么内容。<a href="https://www.nextcloudcn.com/">https://www.nextcloudcn.com</a> 这个域名还是我抢注的，之前一个人刚好到期。没备案，所以只能托管在香港，套个 cloudflare。</p><p>至于运营就看情怀了，希望明年还想续费这个域名……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;重新加上了 Disqus 评论系统，翻译了一个树莓派引脚定义网站，换了企业邮箱服务商，部署了一个站点监控系统，开始搞 nextcloud 中文论坛……随便聊聊最近在本站折腾的那些东西。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Disqu
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="email" scheme="https://blog.vvzero.com/tags/email/"/>
    
      <category term="nextcloud" scheme="https://blog.vvzero.com/tags/nextcloud/"/>
    
      <category term="树莓派" scheme="https://blog.vvzero.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="站点监控" scheme="https://blog.vvzero.com/tags/%E7%AB%99%E7%82%B9%E7%9B%91%E6%8E%A7/"/>
    
      <category term="评论系统" scheme="https://blog.vvzero.com/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>分享一下我的家庭网络布局</title>
    <link href="https://blog.vvzero.com/2021/11/04/Network-devices-at-my-home/"/>
    <id>https://blog.vvzero.com/2021/11/04/Network-devices-at-my-home/</id>
    <published>2021-11-04T13:47:31.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我的家庭网络拓扑图"><a href="#我的家庭网络拓扑图" class="headerlink" title="我的家庭网络拓扑图"></a>我的家庭网络拓扑图</h2><p><img src="https://img.vvzero.com/blog/Network-devices-at-my-home/1.jpg"></p><h3 id="数据流部分"><a href="#数据流部分" class="headerlink" title="数据流部分"></a>数据流部分</h3><ol><li>网络核心部分是 Nano Pi R2S 这个软路由，经过一年调教，已经能适应我这里的一切网络需求了。主要运行了 Wireguard、流量监控、网路唤醒等服务。因为我们小区只有百兆网，所以性能暂时够用。</li><li>几乎所有网络设备都通过中间这个交换机与软路由通讯，虽然不算什么好的交换机，但是同理，够用。</li><li>数据中心是用 intel NUC8 搭建的家庭服务器，主要部署了 emby、Nextcloud、qbittorrent 等服务，满足了家庭观影、数据存储等需求。</li><li>存储采用多个硬盘，目前放弃了阵列模式，家庭用的话还是单块盘来用性价比最高，经常冷备、热备就好。</li><li>家庭服务器通过 FRP 服务把 Nextcloud 服务映射到公网，方便在外看家庭数据。</li><li>主力机是一台 E3-1231 V3 的机器，为什么还在用好几年前的平台？因为满足我的需求了。</li><li>我把一台小米路由器当 AP 用了，目前可以满足所有智能家居、所有手机、平板的稳定联网。</li><li>智能家居方面，完全采用了小米的方案，好看就是王道。</li></ol><h3 id="功率电部分"><a href="#功率电部分" class="headerlink" title="功率电部分"></a>功率电部分</h3><ol><li>图中除了主力 PC、移动设备和智能家居，其他均部署在一个机柜内，所以两个插排就搞定了。</li><li>UPS 还是很有必要的，帮我至少挡住了两次意外停电。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我的家庭网络拓扑图&quot;&gt;&lt;a href=&quot;#我的家庭网络拓扑图&quot; class=&quot;headerlink&quot; title=&quot;我的家庭网络拓扑图&quot;&gt;&lt;/a&gt;我的家庭网络拓扑图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://img.vvzero.com/blog/Netw
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="智能家居" scheme="https://blog.vvzero.com/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
      <category term="运维" scheme="https://blog.vvzero.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Mapuino - 一个硬件极客风的 WEB 访客地图显示摆件</title>
    <link href="https://blog.vvzero.com/2021/09/27/Mapuino-a-cute-knickknack-for-web-access-monitor/"/>
    <id>https://blog.vvzero.com/2021/09/27/Mapuino-a-cute-knickknack-for-web-access-monitor/</id>
    <published>2021-09-27T13:46:59.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mapuino-是什么"><a href="#Mapuino-是什么" class="headerlink" title="Mapuino 是什么"></a>Mapuino 是什么</h2><p>Mapuino 是一个简单的摆件，或者叫“玩具”。你可以在自己的个人博客、主页或者任何可以插入个性代码的社交网站（如 V2EX）上添加一行 URL，然后就可以在 Mapuino 上观赏全国哪些地方的人正在访问你的网站。</p><p><img src="https://img.vvzero.com/blog/Mapuino-a-cute-knickknack-for-web-access-monitor/1.jpg"></p><h2 id="Mapuino-不是什么"><a href="#Mapuino-不是什么" class="headerlink" title="Mapuino 不是什么"></a>Mapuino 不是什么</h2><p>Mapuino 不是生产力工具，它功能单一，仅供娱乐。但它真的可以给你的生活带来一些小乐趣。</p><h2 id="Mapuino-的历史故事"><a href="#Mapuino-的历史故事" class="headerlink" title="Mapuino 的历史故事"></a>Mapuino 的历史故事</h2><p>2017 年秋学季，我上大二，有幸加入学校的学生 IT 创新创业区，并认识了 suruifu 同学，当时我所在的部门叫“物联网创新区”。圣诞前夜，suruifu 同学在创新区内给我分享了一个外国小哥的 youtube 视频。视频中，外国小哥做了一个圣诞树，神奇之处是，只要有人 ping 他的电脑 ip，圣诞树上就会随机亮起一个 LED。很多人一起 ping 的时候，圣诞树就会闪闪发光。</p><p>suruifu 同学感慨：“这才是物联网！”</p><p>而后，到了今年，一个月以前，我做了第一个小摆件 <a href="https://blog.vvzero.com/2021/08/31/Topuino-the-wonderful-Knickknack-for-server-monitoring/">Topuino</a>。</p><p>用同样的技术栈，我又做了 Mapuino。</p><h2 id="Mapuino-的工作模式"><a href="#Mapuino-的工作模式" class="headerlink" title="Mapuino 的工作模式"></a>Mapuino 的工作模式</h2><p>Mapuino 与 Topuino 类似，在配置之后，会连接 Wi-Fi 并从服务器获取数据，在每个周期内（比如 1 分钟），所有在上一个周期访问过你网站的用户，其所在省级行政区的 LED 将会亮起。</p><h2 id="Mapuino-的工作原理"><a href="#Mapuino-的工作原理" class="headerlink" title="Mapuino 的工作原理"></a>Mapuino 的工作原理</h2><p>硬件部分与 Topuino 非常类似，采用 ESP8266 作为 MCU，TM1638 作为 LED 驱动。</p><p>Mapuino 会以 1 分钟为周期向服务器发起请求，服务器返回上一个周期哪些地区有用户访问了指定 URL。此 URL 可以嵌入在任何网页中，比如通过 JS 发起请求，或者假装是一个 img 标签，或者也可以用各类站长测速工具直接 DDOS 这个 URL……</p><p>服务端直接解析访问此 URL 的 IP 所在地（目前使用了高德的 API），并临时存储。</p><p><img src="https://img.vvzero.com/blog/Mapuino-a-cute-knickknack-for-web-access-monitor/2.jpg"></p><h2 id="与-Topuino-相比的改进"><a href="#与-Topuino-相比的改进" class="headerlink" title="与 Topuino 相比的改进"></a>与 Topuino 相比的改进</h2><ol><li>体积更小，<del>可以白嫖部分 PCB 打样厂的免费额度</del>；</li><li>调整了下面两个固定孔的位置，可以直接拧上两个螺柱，方便放在桌上；</li><li>隐藏了 Wi-Fi 天线；</li><li>成本更低。</li></ol><h2 id="代码与开源"><a href="#代码与开源" class="headerlink" title="代码与开源"></a>代码与开源</h2><p>硬件端: <a href="https://github.com/Villivateur/Mapuino">https://github.com/Villivateur/Mapuino</a></p><p>服务端: <a href="https://github.com/Villivateur/MapuinoServer">https://github.com/Villivateur/MapuinoServer</a></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>我又有其他点子啦，下一个做啥呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Mapuino-是什么&quot;&gt;&lt;a href=&quot;#Mapuino-是什么&quot; class=&quot;headerlink&quot; title=&quot;Mapuino 是什么&quot;&gt;&lt;/a&gt;Mapuino 是什么&lt;/h2&gt;&lt;p&gt;Mapuino 是一个简单的摆件，或者叫“玩具”。你可以在自己的个人
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="Arduino" scheme="https://blog.vvzero.com/tags/Arduino/"/>
    
      <category term="ESP8266" scheme="https://blog.vvzero.com/tags/ESP8266/"/>
    
      <category term="IoT" scheme="https://blog.vvzero.com/tags/IoT/"/>
    
  </entry>
  
  <entry>
    <title>Topuino - 你愿意在办公桌上放一个监控服务器的小摆件吗？</title>
    <link href="https://blog.vvzero.com/2021/08/31/Topuino-the-wonderful-Knickknack-for-server-monitoring/"/>
    <id>https://blog.vvzero.com/2021/08/31/Topuino-the-wonderful-Knickknack-for-server-monitoring/</id>
    <published>2021-08-31T13:21:35.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我做了一个用来监控服务器的桌面小摆件</p></blockquote><p><img src="https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/1.png"></p><h2 id="什么是-Topuino"><a href="#什么是-Topuino" class="headerlink" title="什么是 Topuino"></a>什么是 Topuino</h2><p>Topuino 是我 DIY 的一个桌面小摆件，可以实现通用服务器或计算机的数据监控，包括 CPU 占用、RAM 占用、两个硬盘的可用空间、硬盘读写速度、网络 IO 速率。</p><h2 id="为什么叫-Topuino"><a href="#为什么叫-Topuino" class="headerlink" title="为什么叫 Topuino"></a>为什么叫 Topuino</h2><p>在 Linux 系列服务器上，我们通常使用 top 命令查看 CPU 内存占用，我最初的设想也是将 top 命令实物化，这就是 Topuino 中 Top 的由来。</p><p>在选型的时候，为了兼顾开发效率和成本，我选用了大名鼎鼎的 ESP8266 单片机，配合了 Arduino 开发框架，Arduino 则是 Topuino 中 uino 的由来。</p><h2 id="Topuino-有哪些亮点"><a href="#Topuino-有哪些亮点" class="headerlink" title="Topuino 有哪些亮点"></a>Topuino 有哪些亮点</h2><p>先看图解：</p><p><img src="https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/2.png"></p><ol><li>我觉得它挺好看，哑光黑的 PCB 底板富有科技感，红绿蓝三色 LED 层次分明，指示性强；</li><li>显示的参数满足大部分的需求，刷新率为 1 秒，CPU、内存、磁盘占用以百分比表示在柱状图上，磁盘、网络 IO 各以四位数码管显示，配合 KB、MB 单位显示，可以表示 0KB - 9999MB /s 的速率；</li><li>配置、操作方便。在需要监控的服务器上只需要跑一个 python 脚本即可；Topuino 首次上电后支持用手机或任何支持 Wi-Fi 的设备连接，并通过浏览器配置。若需要重新配置，通过按键即可恢复；</li><li>使用了通用的 USB-TypeC 接口（后期会做带电池版本）；</li><li>成本不高，谁都可以承担。</li></ol><p><img src="https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/3.jpg"></p><h2 id="Topuino-的工作原理"><a href="#Topuino-的工作原理" class="headerlink" title="Topuino 的工作原理"></a>Topuino 的工作原理</h2><ul><li>服务器部分很简单，主站使用了 Flask，维护一个数据库，保存着从站（被监控服务器）UUID 与运行参数的映射关系（实际上现在是用 python 的字典简单实现的）。主站接收从站的运行数据，并向 Topuino 回传数据；</li><li>服务器从站采用 python 的 psutil 库，获取所有的运行数据；</li><li>Topuino 硬件部分使用了 ESP-12F 作为 MCU，显示采用 LED 整列和数码管，显示驱动是 TM1638 芯片。</li></ul><p>附上原理图：</p><p><img src="https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/4.png"></p><p><img src="https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/5.png"></p><p><img src="https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/6.png"></p><p>PCB 打样交给专门的厂家，回来自己焊。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>你愿意在办公桌上放一个监控服务器的小摆件吗？至少，我做出来之后，很喜欢，就像看着一只猫一样。</p><p><img src="https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/7.png"></p><p>另：ESP8266 的代码初步开源在 <a href="https://github.com/Villivateur/Topuino">https://github.com/Villivateur/Topuino</a> ，供大家参考。服务器端代码因为太简单且写得太丑，以后再说吧~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我做了一个用来监控服务器的桌面小摆件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-mo
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="Arduino" scheme="https://blog.vvzero.com/tags/Arduino/"/>
    
      <category term="IoT" scheme="https://blog.vvzero.com/tags/IoT/"/>
    
      <category term="Topuino" scheme="https://blog.vvzero.com/tags/Topuino/"/>
    
  </entry>
  
  <entry>
    <title>对 PlatformIO 有点失望</title>
    <link href="https://blog.vvzero.com/2021/04/16/A-little-pitty-for-PlatformIO/"/>
    <id>https://blog.vvzero.com/2021/04/16/A-little-pitty-for-PlatformIO/</id>
    <published>2021-04-16T12:45:20.000Z</published>
    <updated>2022-01-17T08:39:56.514Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>PlatformIO 目前只是玩具，单片机开发还得用 Keil</p></blockquote><p>好久不碰单片机，现在想搞个项目，选型 STM32xxxxxx，想找一套“现代化”的 IDE，于是找到了 PlatformIO。</p><p>刚开始很新奇很激动，VSCode 开发环境很友好，各种单片机型号、库很丰富，而且 STM32 可以直接用 Arduino 开发，各种一键式部署。最主要的是商用免费，差点就选用了。</p><p>但是问题很快就出现了，Arduino 框架对于底层的封装太完美，我甚至不能方便地修改 SPI 或者 I2C 的引脚，而且 GPIO 读写速度也相较使用 CMSIS 慢很多，STM32duino 虽然仍然在发展，但是，我认为还处在“玩具”的阶段。</p><p>如果抛弃 Arduino 框架，去使用 CMSIS ，那也太不方便了，而且 STM32 标准库在 PlatformIO 里面目前居然只支持很少几款芯片（F10x 系列全系不支持）。如果我要用 FreeRTOS，FreeRTOS 官方目前也没有适配 PlatformIO。</p><p>最终还是回到 Keil，花钱的才是最好的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;PlatformIO 目前只是玩具，单片机开发还得用 Keil&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好久不碰单片机，现在想搞个项目，选型 STM32xxxxxx，想找一套“现代化”的 IDE，于是找到了 PlatformIO。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="Arduino" scheme="https://blog.vvzero.com/tags/Arduino/"/>
    
      <category term="PlatformIO" scheme="https://blog.vvzero.com/tags/PlatformIO/"/>
    
      <category term="STM32" scheme="https://blog.vvzero.com/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>我们订婚了 We are engaged!</title>
    <link href="https://blog.vvzero.com/2021/02/14/we-are-engaged/"/>
    <id>https://blog.vvzero.com/2021/02/14/we-are-engaged/</id>
    <published>2021-02-14T13:38:02.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<p>2021年2月14日，情人节，农历正月初三，玲玲与瑾瑾喜订良缘。</p><p>互联网是有记忆的，在此，我就以计算机为担保，依网络见证！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2021年2月14日，情人节，农历正月初三，玲玲与瑾瑾喜订良缘。&lt;/p&gt;
&lt;p&gt;互联网是有记忆的，在此，我就以计算机为担保，依网络见证！&lt;/p&gt;

      
    
    </summary>
    
      <category term="LIVES" scheme="https://blog.vvzero.com/categories/LIVES/"/>
    
    
      <category term="玲玲" scheme="https://blog.vvzero.com/tags/%E7%8E%B2%E7%8E%B2/"/>
    
      <category term="订婚" scheme="https://blog.vvzero.com/tags/%E8%AE%A2%E5%A9%9A/"/>
    
  </entry>
  
  <entry>
    <title>如何成为 CA，并签发自己的证书</title>
    <link href="https://blog.vvzero.com/2021/01/24/Become-a-CA-and-generate-self-signed-certificate/"/>
    <id>https://blog.vvzero.com/2021/01/24/Become-a-CA-and-generate-self-signed-certificate/</id>
    <published>2021-01-24T12:49:57.000Z</published>
    <updated>2022-01-17T08:39:56.514Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>要读懂此文章，你需要了解对称加密、非对称加密的基本概念，并了解证书签发的基本流程。</p></blockquote><h2 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h2><ol><li>一台 Linux 主机</li><li>openssl</li></ol><h2 id="创建-CA-的私钥"><a href="#创建-CA-的私钥" class="headerlink" title="创建 CA 的私钥"></a>创建 CA 的私钥</h2><p>很容易理解，CA 也有自己的公钥和私钥。</p><p><code>openssl genrsa -des3 -out CAPrivate.key 2048</code></p><p>这个命令会生成一个私钥 <code>CAPrivate.key</code>，并且必须要填写私钥的密码。可以将 2048 改成 4096。不要奇怪这里只有一个私钥，其实公钥也保存在这个文件里了。</p><h2 id="创建根证书"><a href="#创建根证书" class="headerlink" title="创建根证书"></a>创建根证书</h2><p><code>openssl req -x509 -new -nodes -key CAPrivate.key -sha256 -days 365 -out CAPrivate.pem</code></p><p>根证书，顾名思义，肯定是自签发的。这个证书待会需要安装到你的终端设备里面，不然靠这个根证书签发的其他证书不会被信任。</p><p>这个命令里面需要填写很多信息，按照实际填写就好。</p><p>至此，作为一个简单的 CA，所有的文件都已经齐全了。</p><h2 id="创建待签发证书的私钥"><a href="#创建待签发证书的私钥" class="headerlink" title="创建待签发证书的私钥"></a>创建待签发证书的私钥</h2><p>这个私钥与 CA 无关，是待签发的下一级证书。这一步和下一步可以在另一台机器上完成，然后把文件传给保存 CA 信息的机器就好。</p><p><code>openssl genrsa -out MyPrivate.key 2048</code></p><p>同样，可以把 2048 改成 4096。</p><h2 id="创建-CSR"><a href="#创建-CSR" class="headerlink" title="创建 CSR"></a>创建 CSR</h2><p>可以理解为一个待发送给 CA、为你签发证书的一个请求。</p><p><code>openssl req -new -key MyPrivate.key -out MyRequest.csr</code></p><p>同样，这里需要填写很多信息，需要注意的是 <code>Common Name</code> 这个项目，如果你的证书是给 https 用的，这里就填你的域名。</p><h2 id="使用-CA-的私钥签发证书"><a href="#使用-CA-的私钥签发证书" class="headerlink" title="使用 CA 的私钥签发证书"></a>使用 CA 的私钥签发证书</h2><p><code>openssl x509 -req -in MyRequest.csr -CA CAPrivate.pem -CAkey CAPrivate.key -CAcreateserial -out X509Certificate.crt -days 365 -sha256</code></p><h2 id="试一试刚刚签发的证书"><a href="#试一试刚刚签发的证书" class="headerlink" title="试一试刚刚签发的证书"></a>试一试刚刚签发的证书</h2><ol><li>在待测试终端设备上安装 CA 的根证书 <code>CAPricate.pem</code>，比如 Windows、Android，某些浏览器必须单独安装证书。</li><li>把 <code>MyPrivate.key</code> 和 <code>X509Certificate.crt</code> 作为 HTTPS 服务（比如 Nginx）的私钥和证书，写好配置文件。</li><li>在浏览器里面试试看，应该可以显示小锁，且没有安全警告。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;要读懂此文章，你需要了解对称加密、非对称加密的基本概念，并了解证书签发的基本流程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;工具准备&quot;&gt;&lt;a href=&quot;#工具准备&quot; class=&quot;headerlink&quot; title=&quot;工具准备&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="网络安全" scheme="https://blog.vvzero.com/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="证书" scheme="https://blog.vvzero.com/tags/%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>我终于知道了补码的意义</title>
    <link href="https://blog.vvzero.com/2020/11/18/May-be-I-know-why-use-complement/"/>
    <id>https://blog.vvzero.com/2020/11/18/May-be-I-know-why-use-complement/</id>
    <published>2020-11-18T11:49:55.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文供初学者学习，供大佬批判。</p></blockquote><h2 id="补码背景"><a href="#补码背景" class="headerlink" title="补码背景"></a>补码背景</h2><p>很久很久以前，当我参加 NOIP（信息学奥林匹克竞赛）的时候，老师是这么讲补码的：</p><blockquote><p>int 型数据的最高位是符号位，符号位为 0 就代表这是正数，为 1 就是负数。但是，+0 和 -0 理应是同一个数，但在二进制中却表示成了两个不同的数（以 8 位为例，二进制表示）： 00000000 和 10000000。所以，我们引入了补码，补码就是，对负数而言，符号位不变，其他位取反，然后再加 1。于是， -0 的补码就是 10000000 -&gt; 11111111 -&gt; 00000000 与 +0 一致了。</p></blockquote><h2 id="补码的意义"><a href="#补码的意义" class="headerlink" title="补码的意义"></a>补码的意义</h2><p>其实当时我就该意识到，仅仅为了 0 这一个数便创建了“补码”这个概念，未免太浪费了。我最近看了 <em>CS: APP</em> 这本书，才进一步理解了补码。</p><p>补码，就是为有符号整数而创建的概念。对于无符号整数，是不存在“补码”的概念的。我们先看一个无符号数 00100101，它是怎么转换成十进制的？加权求和，<code>0×2^7+0×2^6+1×2^5+0×2^4+0×2^3+1×2^2+0×2^1+1×2^0=37</code>；无符号数 10000011，<code>1×2^7+0×2^6+0×2^5+0×2^4+0×2^3+0×2^2+1×2^1+1×2^0=131</code>。</p><p>对于有符号数呢？假如我们不用补码，那么有符号数 10000011，就是 <code>-(0×2^6+0×2^5+0×2^4+0×2^3+0×2^2+1×2^1+1×2^0)=-3</code>。人这么算起来是挺舒服，但是计算机会很难受，凭什么我最高位的权值没了？只能做符号？</p><p>然后我们试试补码。10000011 的补码是 11111101，如何用补码求它的十进制呢？其实这跟无符号数是一样的，只不过，最高位的权值，不是 2^7，而是 -2^7。求值：<code>1×(-2^7)+1×2^6+1×2^5+1×2^4+1×2^3+1×2^2+0×2^1+1×2^0=-3</code>，是不是很神奇？</p><p>对于正数而言，就更简单了，与无符号数一致。</p><h2 id="补码再探"><a href="#补码再探" class="headerlink" title="补码再探"></a>补码再探</h2><p>计算机只能做加法（不是），所以，我们看看用补码做加法，有什么好处。</p><p>先计算 -13+10 吧，很简单的二进制竖式加法：</p><table><thead><tr><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>1</td></tr></tbody></table><p>11111101 即为 -3 的补码。</p><p>再算一个，-8+9：</p><table><thead><tr><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr></tbody></table><p>神奇吗？最高位的 0 不见了，变成正数 1 了。</p><h2 id="补码小结"><a href="#补码小结" class="headerlink" title="补码小结"></a>补码小结</h2><p>补码，就是计算机内部有符号数的存储方式，我们不要认为补码是由原码“转换”而来的，补码本来就代表了实际的数字，11111101 == -3，就这样。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文供初学者学习，供大佬批判。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;补码背景&quot;&gt;&lt;a href=&quot;#补码背景&quot; class=&quot;headerlink&quot; title=&quot;补码背景&quot;&gt;&lt;/a&gt;补码背景&lt;/h2&gt;&lt;p&gt;很久很久以前，当我参加 
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="补码" scheme="https://blog.vvzero.com/tags/%E8%A1%A5%E7%A0%81/"/>
    
      <category term="计算机原理" scheme="https://blog.vvzero.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>使用虚拟机绕过 Windows Samba 客户端端口限制</title>
    <link href="https://blog.vvzero.com/2020/04/28/use-virtual-machine-to-bypass-windows-samba-port-limit/"/>
    <id>https://blog.vvzero.com/2020/04/28/use-virtual-machine-to-bypass-windows-samba-port-limit/</id>
    <published>2020-04-28T05:39:48.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>迫于不能浪费宿舍联通宽带的公网 IP，我用树莓派搭建了一个 NAS，使用 Samba 提供访问。但是，由于运营商限制，入站和出站的 139、445 端口都被封禁（对！你不能访问其他机器的 445 端口！），这样做只能让同一个局域网的服务访问。我尝试修改了端口号，把本地的 445 端口映射到公网的其它端口，算是可以给大部分 Samba 客户端使用了（比如安卓手机）。但是，Windows 的 Samba 客户端，并不支持设置端口号（如果在文件管理器地址栏输入 <code>\\a.b.c.d:xxx</code> 将会被认为是 WebDAV 协议）。</p><p>网上某些教程说，在 Windows 本地设置端口转发，把访问本机 445 端口的流量转发至你的 Samba 服务器端口。但是，这样做需要关闭 Windows 自己的 Samba 服务器，会导致网络共享、网络打印机等很多功能无法使用，导致莫名其妙的问题，所以不推荐。</p><p>但是可以换个思路。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>既然不能使用本机（127.0.0.1）做转发，那么为什么不使用本地网络中其他的机器进行数据转发呢？一开始我想在本地网络中加一个树莓派之类的小主机，但觉得这样太累赘了。虚拟机也是独立的机器，我觉得一样有效。</p><p>所以，只要在虚拟机里面装一个反向代理应用（Nginx），把发往虚拟机 445 端口的流量转发到 Samba 服务器，然后使用 Windows Samba 客户端访问这个虚拟机，就等于访问 Samba 服务器。</p><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>这里，我使用了 Windows Hyper V，创建了 Ubuntu 20.04 Server 虚拟机（直接下载官方 ISO），然后使用默认交换机作为虚拟机的网络。</p><img src="https://img.vvzero.com/blog/ih/2020/04/28/2416a9e0b66ec.png" alt="Snipaste_2020-04-28_14-07-57.png" style="zoom:33%;" /><p>启动后，安装系统，然后除了更新镜像源、安装 Nginx，什么都不用做。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>装好 Nginx 后，修改配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>添加一个 stream 模块，大致像下面：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">stream</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">445</span>;</span><br><span class="line">        </span><br><span class="line">        // 你的 <span class="attribute">NAS</span> 地址</span><br><span class="line">        proxy_pass mynas.example.com:<span class="number">12345</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启 Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure><p>转发的模块就做好了。</p><p>然后，再在 Windows 中打开 <code>\\&lt;虚拟机的ip&gt;\&lt;samba 路径（可选）&gt;</code> 就完成了。虚拟机 ip 可以在虚拟机里面用 ifconfig 命令查看。</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>也许可以用 docker 实现，但我还没想好怎么搞。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;迫于不能浪费宿舍联通宽带的公网 IP，我用树莓派搭建了一个 NAS，使用 Samba 提供访问。但是，由于运营商限制，入站和出站的 139、
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="Windows" scheme="https://blog.vvzero.com/tags/Windows/"/>
    
      <category term="Samba" scheme="https://blog.vvzero.com/tags/Samba/"/>
    
  </entry>
  
  <entry>
    <title>使用阿里云 ECS 搭建廉价的高性能云桌面</title>
    <link href="https://blog.vvzero.com/2020/02/08/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/"/>
    <id>https://blog.vvzero.com/2020/02/08/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/</id>
    <published>2020-02-08T09:35:36.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>要想读懂本文，你需要：</p><ol><li>了解阿里云等云服务的基本 WEB 界面操作；</li><li>了解 Windows 操作系统的中阶操作；</li><li>了解基础的软件开发术语。</li></ol></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文面向的是需要使用高性能计算设备，但是身边只有低性能PC机的群体。最近由于 NCP 疫情，出不了门，返回不了工作地，想必不少人的高性能计算设备（好电脑）没带回家，但是，肯定也有人跟我一样，受不了笔记本电脑的龟速。</p><p>我的配置需求是，能够流畅运行安装多个插件的 VSCode、能够同时打开数十个 Firefox 标签页、能够快速完成 node 项目构建。但是我身边只有一台五年前的 intel NUC (i3-4010U, 4GB RAM)。</p><p>在详细了解了各大云服务商的云计算平台后，个人排除了华为云（弹性计算服务价格较高、云桌面售罄）、腾讯云（云计算服务类别过少）、天翼云（云桌面需要安装指定 APP 且性能不满足要求），决定使用阿里云的云计算服务。</p><h2 id="使用阿里云初步搭建云桌面"><a href="#使用阿里云初步搭建云桌面" class="headerlink" title="使用阿里云初步搭建云桌面"></a>使用阿里云初步搭建云桌面</h2><p>经过权衡，我决定使用阿里云 ESC “抢占式实例”付费模式下的“突发性能实例”。为什么这么选？</p><p>因为没钱……</p><p>开玩笑的。我觉得这是我需求下的合理选择方式。为什么选择“抢占式实例”？首先，我们复工的时间还是个未知数，而且可能随时就不想用这个云桌面了。“抢占式实例”是按量付费的一种，也就是，用多长时间给多少钱。并且，相对于按量付费，有相当大的折扣。<strong>“抢占式实例”的最大问题在于，这是竞价模式。也就是说，当别人出价比你高的时候，或者阿里云供给紧张而你又给钱给得不够的时候，它会自动帮你释放。我了解的是，在释放前5分钟，阿里云会有提醒。</strong>为了尽量避免实例被自动释放，我选择了“使用自动出价”，也就是说，系统会每小时自动判断当前时间该实例的价格，并选择一个高于市场均价的价格进行付费。<strong>但是，这并不是万无一失，阿里云在供给紧张的时候，仍然会将实例释放。</strong>所以，在处理重要数据时，应该随时备份。我的处理方法是，随时将代码提交到我的 Git 仓库。</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/ea3d50f39b198.png" alt="Snipaste_2020-02-09_17-32-20.png"></p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/df1fabf212984.png" alt="Snipaste_2020-02-09_17-34-24.png"></p><p>如果要保证不会被释放，建议使用包年包月制。</p><p>为什么使用“突发性能实例”？因为个人电脑与服务器不同。个人电脑不会时时刻刻占用大量 CPU，CPU使用率是离散化的，所以 CPU 的使用积分，我觉得是用不完，25% 的使用基线，完全够用。</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/d74c0622ec620.png" alt="Snipaste_2020-02-09_17-34-05.png"></p><p>哎，目前好像国内也只有阿里云能做出“抢占式实例”和“突发性能实例”。</p><p>其他的配置就简单了，区域选择靠近你的（不同地区的价格好像差别挺大），镜像选择 Windows Server，另外，SSD 是很关键的，我觉得现在已经没有多少人能忍受机械硬盘的龟速了。</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/6ae75caa75c6a.png" alt="Snipaste_2020-02-09_18-03-26.png"></p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/cbe75edc3c797.png" alt="Snipaste_2020-02-09_17-36-25.png"></p><p>在下一个页面配置网络，为了保证远程桌面流畅，按使用流量计费，带宽拉满！</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/2c112190ea447.png" alt="Snipaste_2020-02-09_17-45-57.png"></p><p>最终，我的配置如下：</p><ul><li>4核16GB，25% 平均CPU 计算性能；</li><li>100Mbps 按流量付费网络；</li><li>80GB SSD；</li><li>Windows Server 2019 数据中心版；</li></ul><p>这样的话，实例价格为 0.412 元每小时（我选的是上海区的，其他区的可能更便宜，在深夜、早上也会更便宜），流量费用为 0.8 元每 GB。算一算，一天大概要 10 元，一个月大概要 300 元，是不是还是有点贵？没关系，继续看。</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/ecfef72872df3.png" alt="Snipaste_2020-02-09_17-36-50.png"></p><h2 id="价格的进一步优化"><a href="#价格的进一步优化" class="headerlink" title="价格的进一步优化"></a>价格的进一步优化</h2><p>现在我已经启动了这个实例：</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/3ea24c1929367.png" alt="Snipaste_2020-02-09_18-21-04.png"></p><p>我还想更便宜。</p><h3 id="与基友合租一台机器"><a href="#与基友合租一台机器" class="headerlink" title="与基友合租一台机器"></a>与基友合租一台机器</h3><p>我想你一定不可能一天24小时都在用它，用它的时候也一定不会一直占满 CPU。关键是，我们这是 Windows Server，跟家庭版、专业版、企业版什么的都不一样，它支持多个用户同时登陆！所以，我觉得，如果有信任的人选，完全可以合租。</p><h3 id="关机时选择“停机不计费”"><a href="#关机时选择“停机不计费”" class="headerlink" title="关机时选择“停机不计费”"></a>关机时选择“停机不计费”</h3><p>阿里云真的是神奇的存在，在 ECS 管理界面，选择停机，竟然可以停机不收费！</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/28437c5fae934.png" alt="图片1.png"></p><p>实际上也不是完全不收费，硬盘和弹性公网 IP 仍然是收费的。但是，与停机后仍然保留CPU、内存相比，价格大幅降低。也就是说，我们在每天晚上，完全可以关机并选择不收费，可以节约一大笔。如果想要一直使用同一个 IP，可以选择绑定弹性公网 IP。</p><h3 id="依据个人需求选择实例规格"><a href="#依据个人需求选择实例规格" class="headerlink" title="依据个人需求选择实例规格"></a>依据个人需求选择实例规格</h3><p>我觉得，可能 8GB 内存已经够我用了，另外，青岛区的实例好像每小时能更便宜一毛钱……</p><h2 id="云桌面体验"><a href="#云桌面体验" class="headerlink" title="云桌面体验"></a>云桌面体验</h2><p>在体验之前，再确保一下：该实例网络安全组，需要放通 3389 端口（TCP 和 UDP 都要放通）。</p><p>打开本地的远程桌面客户端试试吧！</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/b4629c62b4373.png" alt="Snipaste_2020-02-09_18-38-25.png"></p><p>网络方面，我是江苏电信网络，连接上海区的 ECS，延迟很小，可以忽略，而且画质很清晰，暂时没有什么画面卡顿。至于下行网络，由于这是阿里云的专线，比家用运营商网络好太多，下载速度嗖嗖的，不管国内外。</p><p>计算性能方面，在我本地机器上，VSCode 的 Python 插件，进行一次文件错误扫描需要 5 秒左右，而这台云桌面，只要 1 秒。</p><p>操作系统方面，Windows Server 比 Windows PC 简洁很多，没有乱七八糟的服务，但也没有缺少日常开发所需的重要组件。可能会有点不一样，但是如果出问题，一般能很快解决。比如我在安装 Python 时出错，Google 一下便知要直接以管理员身份打开。</p><p>以下截图自我的云桌面。</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/d3b52ba297968.png" alt="Screenshot _1_.png"></p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/e9ae18b879037.png" alt="Screenshot _3_.png"></p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/9f2c0741b0057.png" alt="Screenshot _4_.png"></p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/8109324fabb58.png" alt="Screenshot _2_.png"></p><h3 id="提高体验的可选项"><a href="#提高体验的可选项" class="headerlink" title="提高体验的可选项"></a>提高体验的可选项</h3><ol><li>关闭 Windows 的过渡动画，这在远程桌面上会导致卡顿，且会消耗大量的流量费；</li><li>安全起见，重新创建一个管理员用户并禁用 Administrator 用户；</li><li>用好各种云同步功能，比如 Git 仓库、浏览器云同步、云盘等。</li></ol><h2 id="实测价格"><a href="#实测价格" class="headerlink" title="实测价格"></a>实测价格</h2><p>我正常使用了一天，晚上停机不收费，消费如下：</p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/176c67e7015fa.png" alt="Snipaste_2020-02-09_18-54-30.png"></p><p><img src="https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/140f26bd1d962.png" alt="Snipaste_2020-02-09_18-55-07.png"></p><p>可见，我一天大致消费5元。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>确实不是很贵，可行性也很高。假如有模型渲染需求，甚至可以绑定个显卡（</p><p>抢占式实例也不是很可怕吧？我的实例目前没被回收。</p><p>另外，有人想跟我合租吗？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;要想读懂本文，你需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;了解阿里云等云服务的基本 WEB 界面操作；&lt;/li&gt;
&lt;li&gt;了解 Windows 操作系统的中阶操作；&lt;/li&gt;
&lt;li&gt;了解基础的软件开发术语。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="Windows" scheme="https://blog.vvzero.com/tags/Windows/"/>
    
      <category term="阿里云" scheme="https://blog.vvzero.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="云桌面" scheme="https://blog.vvzero.com/tags/%E4%BA%91%E6%A1%8C%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>为 Windows PowerShell 设置 User Alias （命令别名）</title>
    <link href="https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/"/>
    <id>https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/</id>
    <published>2019-07-22T11:56:20.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>直接看步骤的话，在最下方。</p></blockquote><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Windows Terminal 虽然还处于预览阶段，但是也出来很长一段时间了。它的历史使命，也许就是让原生 Windows 也能有一个像样的命令行环境。以前我一直在用 Cmder，但是 Cmder 的启动速度确实不敢恭维，而 Windows Terminal 启动确实很快。相比 Cmder， Windows Terminal 还缺少很多功能，不过以后应该很快也会补上。</p><img src="https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef29b3f1.png" style="zoom:50%;" /><p>我想尝试使用 Windows Termimal 进行开发。Windows Terminal 默认可以使用 <code>PowerShell</code>、<code>cmd</code>、<code>wsl bash</code>作为脚本工具。既然是在 Windows 环境下嘛，还是得尊敬一下 Windows PoweShell 的。初次使用，我觉得 PowerShell 跟 Cmder 用起来，最不方便的一点就是，我在 Cmder 里面设了很多的 Alias，也就是通过修改 <code>config/user_aliases.cmd</code> 写一串 <code>&lt;alia&gt;=&lt;xxx&gt; &lt;xxx&gt;</code> 来实现的。</p><img src="https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef29ad52.png" style="zoom:50%;" /><p>但是，PowerShell 如何实现命令的别名设置呢？</p><h2 id="探索过程及原理概述"><a href="#探索过程及原理概述" class="headerlink" title="探索过程及原理概述"></a>探索过程及原理概述</h2><p>如果搜索关键词 <code>windows powershell set user alias</code>，通常谷歌会给出<a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/set-alias?view=powershell-6">微软官方文档</a>，但是这个文档只是告诉我们如何在脚本里面设置临时的别名，如果要设置永久别名，该怎么办？实际上，“别名”这种东西，也就是 <code>alias</code>，几乎所有的脚本语言，都没有所谓的“永久别名”(Permanent alias)，我们使用 Linux bash 、Cmder 之类的脚本工具，打开终端时，系统会默认执行一个脚本文件（ bash 是用户目录下的 <code>.bashrc</code>，Cmder 是 <code>config/user_aliases.cmd</code> ），而这样的脚本文件里，就包含了别名的定义。这也是为什么，我们在 Linux 类系统中，修改 <code>.bashrc</code> 后，必须要重新登出登录、或者 <code>source .bashrc</code> 的原因了。</p><p>所以，我们只要修改 Windows Powershell 启动时执行的文件就行了。很多论坛里面说，默认执行的脚本是 <code>$Home\Documents\profile.ps1</code> ，也就是 <code>C:\Users\你的用户名\Documents\profile.ps1</code> ，但是这并不正确，最好的方式是，先启动 PowerShell ，再执行 <code>echo $profile</code>，这样得到的文件路径，才是 PowerShell 的默认执行文件路径。</p><p><img src="https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef29d447.png"></p><p>然后，创建这个文件就好啦。</p><p>在文件里面，写上别名设置的语句。再一次注意，假如你的别名指代的命令含有空格，就不可以使用 <code>New-Alias</code> 命令，因为它不能带空格，即使你把指代的命令用引号括起来也没用。那怎么办呢？继续谷歌，原来，正确姿势是用 <code>function</code> ，也就是，我们把自己要定义的指令，定义为一个函数，就行啦。</p><img src="https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef339443.png" style="zoom: 67%;" /><p>保存文件，重新启动 PowerShell 以后，不出意外，应该会报一个 <code>File xxxxxxx\Microsoft.PowerShell_profile.ps1 cannot be loaded because running scripts is disabled on this system.</code> 根据<a href="https://tecadmin.net/powershell-running-scripts-is-disabled-system/">此链接</a>，出现这种情况，是因为 Windows 系统为了防止恶意脚本自动执行，故默认不允许自动运行脚本。所以，在确定自己有能力把控的情况下，__以管理员身份__，在 PowerShell 中执行 <code>Set-ExecutionPolicy RemoteSigned </code>，即可。</p><p>再次重启 PowerShell，应该可以发现，自定义别名已经生效了。</p><h2 id="步骤整理"><a href="#步骤整理" class="headerlink" title="步骤整理"></a>步骤整理</h2><p>如果你想为自己的 Windows PowerShell 设置永久的命令别名 (Alias)，可以遵循以下步骤：</p><ol><li><p>打开 PowerShell ，运行 <code>echo $profile</code>，会输出一个文件路径。创建这个文件。</p></li><li><p>打开刚创建的文件，按以下格式设置多条别名：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 别名</span> &#123; 需要替代的命令，可以包含空格 &#125;</span><br></pre></td></tr></table></figure></li><li><p>以管理员身份打开 PowerShell，执行 <code>Set-ExecutionPolicy RemoteSigned</code>。</p></li><li><p>重新启动 PowerShell ，应该已经完成了。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;直接看步骤的话，在最下方。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;Windows Terminal 虽然还处于
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="Windows" scheme="https://blog.vvzero.com/tags/Windows/"/>
    
      <category term="PowerShell" scheme="https://blog.vvzero.com/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>20190523 随想</title>
    <link href="https://blog.vvzero.com/2019/05/23/thinking-in-20190523/"/>
    <id>https://blog.vvzero.com/2019/05/23/thinking-in-20190523/</id>
    <published>2019-05-23T13:10:30.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<p>四年之前，我高二的时候，一天傍晚放学，我跟当时教我化学的6老师（代称），开玩笑式地起了争执。6老师人很好，我们都跟他称兄道弟的。起因是，6老师向我们秀他新买的球鞋，很酷，是某个日本名牌。当时的我笑道：“日货啊，不能穿啊！”（当时的学生中间，这样的思想氛围还比较浓）。</p><p>6老师立刻就反驳了：“为什么不能穿？”“东西好用，为什么不买？”当时我还有一些现在看来可笑的话，都被6老师“讽刺”了一番。我仍不服气，要争辩，6老师对我说：“很多你看到的事情，并不一定是真的……是被修饰过的……”</p><p>我大致听懂了他的意思，但进一步问：“既然各种历史、事情都会被修饰，那么我们怎么才能知晓真实的情况呢？毕竟，不管哪一方说出的话，都有可能因为要符合其利益而将其修饰。”</p><p>6老师说：“要思考，学会思考！”</p><p>……</p><p>我当时不以为然，思考？怎么思考嘛！</p><p>后来我慢慢知道了，直到现在，我都很认可6老师，我觉得他很对。</p><p>不管是什么，都会被人修饰，只有自然科学不能被修饰。就像，不管是谁，也不能让人相信 1+1=3，这是数学。物理、化学等其他自然科学的原理，乃至经济学原理，都不能被修饰。</p><p>也许思考，就是要从自然科学立足吧？</p><p>就比如从数学逻辑里延申——任何事情都是有逻辑的，都应有前因后果。当一件事发生时，也许周围人都会讲述“这件事发生了”，可却鲜有人追溯，这件事为什么发生？当全社会都在为这件事痴狂，乃至要将这件事作为“原因”，采取行动（产生新的“结果”）时，还是没有多少人去关注这件事的根本原因、历史原因、直接原因之间的关系。然后，绝大多数人都被鼓动起来了，就像四年前的我，去笑6老师……</p><p>观察身边的各种变化，各种自然环境社会环境的变化，各种让人开心或难受或鄙夷的事，去思考，“为什么会这样？”</p><p>也许这就是所谓“理性”？</p><p>我不知道几百年前欧洲启蒙运动提倡的“理性”是否就是为了解决这样的问题。</p><p>“要思考，学会思考！”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;四年之前，我高二的时候，一天傍晚放学，我跟当时教我化学的6老师（代称），开玩笑式地起了争执。6老师人很好，我们都跟他称兄道弟的。起因是，6老师向我们秀他新买的球鞋，很酷，是某个日本名牌。当时的我笑道：“日货啊，不能穿啊！”（当时的学生中间，这样的思想氛围还比较浓）。&lt;/p&gt;
      
    
    </summary>
    
      <category term="LIVES" scheme="https://blog.vvzero.com/categories/LIVES/"/>
    
    
      <category term="高中" scheme="https://blog.vvzero.com/tags/%E9%AB%98%E4%B8%AD/"/>
    
      <category term="随想" scheme="https://blog.vvzero.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>免费使用 nuaa.portal 上网</title>
    <link href="https://blog.vvzero.com/2019/01/13/Use-the-Internet-via-nuaa-portal-for-free/"/>
    <id>https://blog.vvzero.com/2019/01/13/Use-the-Internet-via-nuaa-portal-for-free/</id>
    <published>2019-01-13T13:49:55.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>学校赐予我的 nuaa.portal 账号在一个月之前就到期了，这一个月内，虽然对我的生活没有太大的影响，但是还是感受到了某些不便（总觉得某些东西有了更好，没有却不能拉倒）。前些天跟创新区内的同学讨论了本校的ipv6部署情况，突然就有兴致来折腾一下。</p><p>没错，免费上网还是有可能的。</p><h2 id="前提概要"><a href="#前提概要" class="headerlink" title="前提概要"></a>前提概要</h2><ul><li>学校的 nuaa.portal 公共无线网，Windows 电脑只要连接上，就能获取一个 ipv4 内网地址和一个 ipv6 地址。如果没有在指定 Web 页面上认证，则无法使用 ipv4 连接互联网。但是可以通过 ipv6 联网。</li><li>学校默认不分配 ipv6 的 DNS 服务器。</li><li>学校教学办公区有线宽带，经直接拨号，同样可以获得一个 ipv4 内网地址和一个 ipv6 地址，均可以访问互联网。</li></ul><h2 id="一步步的尝试"><a href="#一步步的尝试" class="headerlink" title="一步步的尝试"></a>一步步的尝试</h2><h3 id="直接用-ipv6-上提供-ipv6-服务的网站"><a href="#直接用-ipv6-上提供-ipv6-服务的网站" class="headerlink" title="直接用 ipv6 上提供 ipv6 服务的网站"></a>直接用 ipv6 上提供 ipv6 服务的网站</h3><p>既然可以从 nuaa.portal 获取可以访问互联网的 ipv6 地址，那么最简单的思路，就是直接使用这条通道。但是，由于学校没有 ipv6 的 DNS（认证后，如果访问 ipv6 站点，其实仍然是使用 ipv4 的 DNS 服务器），故必须配置 ipv6 的 DNS。这一点很简单，直接修改 DNS 服务器即可：</p><p><img src="https://img.vvzero.com/blog/Use-the-Internet-via-nuaa-portal-for-free/2.png"></p><p>这里推荐两个 ipv6 的 DNS 服务器，一个是 Google 家的，一个是清华大学 TUNA 协会的：</p><ul><li><code>2001:4860:4860::8888</code></li><li><code>2001:da8::666</code></li></ul><p>然后，实测就可以访问提供 ipv6 服务的网站啦！</p><p>比如：</p><ul><li>google.com.hk</li><li><a href="http://www.youtube.com/">www.youtube.com</a></li><li>ipv6.baidu.com</li><li>ipv6.mirrors.ustc.edu.cn</li></ul><h3 id="使用-ipv6-代理服务器进行无限制的互联网访问"><a href="#使用-ipv6-代理服务器进行无限制的互联网访问" class="headerlink" title="使用 ipv6 代理服务器进行无限制的互联网访问"></a>使用 ipv6 代理服务器进行无限制的互联网访问</h3><p>上一条方法虽然简单，但是只能访问提供 ipv6 的网站，然而现在国内乃至国际上大多数网站并没有提供 ipv6 服务，至少，你目前还不能登微信。</p><p>但是，如果有一个同时具有有 ipv6 和 ipv4 的代理服务器，不就一切都解决了吗？把本地的所有流量都通过 ipv6 转发至代理服务器，然后就可以访问任意站点了！</p><p>这里，我借用了 Shadowsocks，配置了一台有 ipv6 和 ipv4 的服务器，然后本地开启全局代理，实际就可以访问任意站点了。</p><p>使用这个方法，本地 DNS 甚至都不需要配置。</p><h3 id="终极（硬核）蹭网方案"><a href="#终极（硬核）蹭网方案" class="headerlink" title="终极（硬核）蹭网方案"></a>终极（硬核）蹭网方案</h3><p>还记得一开始我说过，教学办公区也能获得 ipv6 地址吗？</p><p>对，我就是想用远程桌面！</p><p><img src="https://img.vvzero.com/blog/Use-the-Internet-via-nuaa-portal-for-free/1.jpg"></p><p>我在学校创新区日常开着一台机器，拨号联网，（性能还不错）。</p><p>emmm，其实这个方法真的很硬核很有效，而且，由于 nuaa.portal 和教学办公区实际属于同一个大的内网环境，学校的路由器还不错，实测 ping 延迟只有 2ms，完全满足了日常电脑使用（除了不能使用显卡玩游戏什么的）。微软家的远程桌面还是很强大的！</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>我其实还是想再来一年的免费 nuaa.portal 账号的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;学校赐予我的 nuaa.portal 账号在一个月之前就到期了，这一个月内，虽然对我的生活没有太大的影响，但是还是感受到了某些不便（总觉得某
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="NUAA" scheme="https://blog.vvzero.com/tags/NUAA/"/>
    
      <category term="ipv6" scheme="https://blog.vvzero.com/tags/ipv6/"/>
    
  </entry>
  
  <entry>
    <title>长令记事：暑期读书分享</title>
    <link href="https://blog.vvzero.com/2018/12/03/channy-s-summer-holiday-reading/"/>
    <id>https://blog.vvzero.com/2018/12/03/channy-s-summer-holiday-reading/</id>
    <published>2018-12-03T11:50:07.000Z</published>
    <updated>2022-01-17T08:39:56.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现在还谈暑假？"><a href="#现在还谈暑假？" class="headerlink" title="现在还谈暑假？"></a>现在还谈暑假？</h2><p>是的吧，主要是玲玲的暑期读书分享前几天才发出来嘛~</p><p>我常常说，我的知识深度不行，但是知识广度还可以，但有的时候，被问起文学、现代文化等领域的时候，总是很惭愧，因为我实在没有读过几本书。要是现在有人问我“你最喜欢的一本文学小说是什么”，我恐怕脑中首先闪过的还是让人贻笑大方的《西游记》等。</p><p>好在玲玲完全填补了我的空缺……</p><h2 id="长令的暑期读书分享"><a href="#长令的暑期读书分享" class="headerlink" title="长令的暑期读书分享"></a>长令的暑期读书分享</h2><p>我想了想，还是不要把她发在公众号的文章copy&amp;paste了，我的排版也不好看。就直接上链接吧：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODQ4OTcyOQ==&mid=2247483830&idx=1&sn=ff12dec368c05d5ce8d14286cda9316a&chksm=fddab4d8caad3dce3c0d2b65d2042fb8160ac9f507895dce907106db240d175ddbd02fe5a394&mpshare=1&scene=1&srcid=12033TBv55Hra7Uoozvqe8AL#rd">暑期读书分享（上）</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODQ4OTcyOQ==&mid=2247483836&idx=1&sn=8bb8d5aa143d0cf3eed20c17b4b84d98&chksm=fddab4d2caad3dc439156cd41a2281e9a825e441d3a4fb368a069ac99aec298baa03a1d1d48e&mpshare=1&scene=1&srcid=12034PasL8Rzdu5maek0CvVm#rd">暑期读书分享（下）</a></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><img src="https://source.vvzero.com/channy_wechat_official_account.jpg" alt="&quot;长令记事&quot;公众号二维码"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;现在还谈暑假？&quot;&gt;&lt;a href=&quot;#现在还谈暑假？&quot; class=&quot;headerlink&quot; title=&quot;现在还谈暑假？&quot;&gt;&lt;/a&gt;现在还谈暑假？&lt;/h2&gt;&lt;p&gt;是的吧，主要是玲玲的暑期读书分享前几天才发出来嘛~&lt;/p&gt;
&lt;p&gt;我常常说，我的知识深度不行，但是知
      
    
    </summary>
    
      <category term="CHANNY" scheme="https://blog.vvzero.com/categories/CHANNY/"/>
    
    
      <category term="长令记事" scheme="https://blog.vvzero.com/tags/%E9%95%BF%E4%BB%A4%E8%AE%B0%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>使用Nginx、nextcloud以及h5ai搭建下载平台</title>
    <link href="https://blog.vvzero.com/2018/11/22/build-download-platform-with-nginx-nextcloud-and-h5ai/"/>
    <id>https://blog.vvzero.com/2018/11/22/build-download-platform-with-nginx-nextcloud-and-h5ai/</id>
    <published>2018-11-22T00:46:18.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>读懂这篇文章，你需要：</strong></p><ol><li>有过一定的Nginx或类似产品的维护经验。</li><li>使用过nextcloud或类似的私有网盘系统。如果没有，可以通过阅读下方的文档了解。</li><li>了解并使用过至少一个云服务供应商的CDN服务。</li></ol></blockquote><blockquote><p><strong>相关文档：</strong></p><p><a href="http://nginx.org/">Nginx</a></p><p><a href="https://nextcloud.com/">nextcloud</a></p><p><a href="https://www.alibabacloud.com/zh/product/cdn">阿里云CDN</a></p><p><a href="https://larsjung.de/h5ai/">h5ai</a></p><p><strong>部署后的站点展示：</strong></p><p><a href="https://downloads.vvzero.com/">VVDownloads</a></p></blockquote><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>原先的下载站真的硬核到难以直视。由于我原先直接通过在Hexo上面添加链接以提供下载。这样不仅看起来丑陋，而且维护很不方便。</p><p>前一段时间接触到了h5ai这个好东西，之前也一直在维护自己的nextcloud，于是乎，想要改造下载站的欲望一发不可收拾。</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><ol><li>可以使用已有的CDN服务对所提供的下载内容进行加速；</li><li>下载内容的维护应当很方便，并且可以在不同的终端进行；</li><li>下载页面应当保持美观。</li></ol><h2 id="关键思路"><a href="#关键思路" class="headerlink" title="关键思路"></a>关键思路</h2><p>把nextcloud的数据存储路径设置为h5ai的根目录。</p><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><h3 id="初次尝试"><a href="#初次尝试" class="headerlink" title="初次尝试"></a>初次尝试</h3><p>我一开始尝试使用CDN对nextcloud直接加速，但是之后发现，这是一件极其愚蠢的事。因为nextcloud使用的是动态页面，对这样的页面进行加速可谓是难上加难。即使我只对公开分享的页面进行加速也不行。实测：使用CDN，哪怕全站都设置成立即回源，也会出现无法上传文件的情况。</p><h3 id="搭建nextcloud"><a href="#搭建nextcloud" class="headerlink" title="搭建nextcloud"></a>搭建nextcloud</h3><p>这一点我不再赘述，因为资料很多，或者直接点击我上面的链接看官方文档。</p><h3 id="配置h5ai"><a href="#配置h5ai" class="headerlink" title="配置h5ai"></a>配置h5ai</h3><p>h5ai这一web index展示系统的部署相当简单，只要将下载的_h5ai目录放在所需要展示的目录下即可，这个目录可以是你的nextcloud个人文件存储根目录（一般为<code>&lt;path to nextcloud&gt;/data/&lt;your user name&gt;/files</code>），也可以是其一个子目录：</p><img src="https://img.vvzero.com/blog/build-download-platform-with-nginx-nextcloud-and-h5ai/1.JPG" style="zoom:50%;" /><h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><p>按照以下的套路来即可，注意index后面要加上<code>/_h5ai/public/index.php</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span> downloads.vvzero.com;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">ssl_certificate</span> ???; <span class="comment">#填写证书地址</span></span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> ???; <span class="comment">#填写证书地址</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">root</span> ???;</span><br><span class="line">        <span class="attribute">index</span> index.html index.php /_h5ai/public/index.php; <span class="comment"># 关键</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">add_header</span> Strict-Transport-Security <span class="string">&#x27;max-age=31536000; includeSubDomains; preload&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">                <span class="attribute">try_files</span> $uri $uri/ =<span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 由于h5ai需要php，所以请安装php-fpm</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">                <span class="attribute">include</span> snippets/fastcgi-php.conf;</span><br><span class="line">                <span class="attribute">fastcgi_pass</span> unix:/run/php/php7.1-fpm.sock;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span> downloads.vvzero.com;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^(.*)</span> https://downloads.vvzero.com<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置CDN"><a href="#配置CDN" class="headerlink" title="配置CDN"></a>配置CDN</h3><p>这里以阿里云为例</p><ul><li><p>业务类型暂时先选“图片小文件”，因为自己分享的图片比较多。</p></li><li><p>缓存过期时间：默认所有直接回源（emmm我实在没想知道哪些跟动态页面有关），权值为1；然后<code>jpg, png, bmp, zip, rar, 7z, exe, msi, doc, docx, ppt, pptx, xls, xlsx, pdf, apk, rmvb, rm, avi, mov, mp3, mp4, flac, wav, tar, gz, iso, bin, js, css, txt, svg, ico, psd, md</code>这些，是我整理的一部分常用文件扩展名，设置成30天缓存，权值为10。</p></li><li><p>开启https并强制跳转</p></li><li><p>开启HTTP2</p></li><li><p>配置一下cname</p></li><li><p>ok</p></li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>现在看着舒服多了。</p><p><a href="https://downloads.vvzero.com/">VVDownloads</a></p><p><img src="https://img.vvzero.com/blog/build-download-platform-with-nginx-nextcloud-and-h5ai/2.JPG"></p><p>然后还发现了，其实，这样的话，我可以在我对nextcloud上开一个公共账户，这样就可以让我的小伙伴们，使用我这套系统，假装有一个CDN啦！毕竟备案还是一件麻烦的事情呢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;读懂这篇文章，你需要：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有过一定的Nginx或类似产品的维护经验。&lt;/li&gt;
&lt;li&gt;使用过nextcloud或类似的私有网盘系统。如果没有，可以通过阅读下方的文档了解。&lt;/li&gt;
&lt;li
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="Nginx" scheme="https://blog.vvzero.com/tags/Nginx/"/>
    
      <category term="nextcloud" scheme="https://blog.vvzero.com/tags/nextcloud/"/>
    
      <category term="h5ai" scheme="https://blog.vvzero.com/tags/h5ai/"/>
    
  </entry>
  
  <entry>
    <title>像我这样的人</title>
    <link href="https://blog.vvzero.com/2018/10/04/people-like-me/"/>
    <id>https://blog.vvzero.com/2018/10/04/people-like-me/</id>
    <published>2018-10-04T12:55:47.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者：长歌如令</p></blockquote><blockquote><p>标题与毛不易的歌曲重名，于是去听了一下毛不易的这首歌，挺悲伤。</p><p>但是我不是一个悲伤的人。</p></blockquote><h2 id="一、性格"><a href="#一、性格" class="headerlink" title="一、性格"></a>一、性格</h2><p>其实还是偏内向，但是又有话痨属性，所以我有时会自言自语，跟朋友在一起的时候也会说个不停。</p><h2 id="二、-爱好"><a href="#二、-爱好" class="headerlink" title="二、 爱好"></a>二、 爱好</h2><p>这个真不是一个词就能概括的，我最喜欢的是有空闲的时间去做自己想做的事情，至于我想做的事情是什么，要根据当天的心情，可能只是躺着玩手机，刷视频，可能是看书，可能是戴着耳机出去走走，也可能是出去买菜做饭，然后自己全部吃完。当然这些都是我在一个人的时候爱做的事情，其实我也挺喜欢一个人呆着的，不要问我怎样快乐的独处，因为独处本身对我来说就是快乐的。</p><h2 id="三、理想"><a href="#三、理想" class="headerlink" title="三、理想"></a>三、理想</h2><p>能经济独立，有闲钱可以出去旅游。</p><h2 id="四、特长"><a href="#四、特长" class="headerlink" title="四、特长"></a>四、特长</h2><p>说真的，没有……</p><p>可能刚接触我的人会觉得我很奇怪，比如有时会自言自语，然后笑点也很低，可能会突然就笑起来（这样写是不是会觉得我有点可怕），但是我觉得我还是挺好相处的吧。</p><p>我觉得我是典型的做事三分钟热度，做事的动力是冲动，想到什么就会立刻去做什么。不管别人怎么看，只要我觉得是对的就会去做，比如我高三的时候坚持写日记，在别人刷题的时候，我在写日记，别人睡觉的时候，我在看书，我只是比较坚持自己想做的事情吧，其实像我这样的人应该也挺多的，之前会觉得别人无趣，但想想也许别人会觉得我很无趣，几乎别人喜欢的事情我都无感，不玩游戏，不追剧，不看小说，不追星，不管什么事情都不会特别喜欢，不会狂热。好像是挺无趣的，可是有趣千人千色，我觉得有趣就行。</p><h2 id="五、最后"><a href="#五、最后" class="headerlink" title="五、最后"></a>五、最后</h2><p>像我这样平凡的人，却也会自命不凡，实际上没什么不同，或者说每一个都是与众不同的，（我也不知道我在说些什么），anyway，我就是这样的人。</p><p><strong>我想，大家都是像我这样吧，矛盾而又自在地活着，也许偶尔会自命不凡，但是深刻地知道没什么不凡，像我这样平凡的人。</strong></p><p><img src="https://img.vvzero.com/blog/people-like-me/1.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;作者：长歌如令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;标题与毛不易的歌曲重名，于是去听了一下毛不易的这首歌，挺悲伤。&lt;/p&gt;
&lt;p&gt;但是我不是一个悲伤的人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一、性格
      
    
    </summary>
    
      <category term="CHANNY" scheme="https://blog.vvzero.com/categories/CHANNY/"/>
    
    
      <category term="长令记事" scheme="https://blog.vvzero.com/tags/%E9%95%BF%E4%BB%A4%E8%AE%B0%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>简易云监控服务器的搭建</title>
    <link href="https://blog.vvzero.com/2018/09/22/simple-hosts-monitor-system/"/>
    <id>https://blog.vvzero.com/2018/09/22/simple-hosts-monitor-system/</id>
    <published>2018-09-22T13:19:58.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我有很多台主机，公网、内网的都有，形式各异。有的时候，因为他人误操作、停电、被攻击，或者系统崩溃等事故，会导致主机无法正常运转。往常，我并不能在第一时间得知消息并及时采取措施。所以，我希望能够有一套系统来监控我的主机是否正常。</p><p>市面上已经有这样的系统，但是我想了想觉得要实现我的需求并不是很困难，所以就决定自己做一套这样的系统。</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>在指定被监控的主机(slave)无法向云监控服务器(master)发送请求时，使用短信通知用户处理。</p><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><ul><li>slave每隔1分钟向master发送指定格式请求，参数包括<code>name</code>和<code>token</code>，<code>name</code>用于表明自己的身份（主机名），且只当<code>token</code>正确时，master才接受请求。</li><li>master在接收到请求后，会将数据文件<code>data.json</code>中<code>name</code>键所对应的值赋为当前的timestamp（如果<code>name</code>键不存在则新建一个）。</li><li>master上每隔1分钟检查一次<code>data.json</code>中每一个<code>name</code>的键值，并比较当前timestamp与各键值的差值。当某<code>name</code>差值大于300（超过5分钟未更新）则调用短信发送的API，提醒用户该主机出现问题。</li></ul><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><h3 id="master中接收请求并修改数据文件的php脚本"><a href="#master中接收请求并修改数据文件的php脚本" class="headerlink" title="master中接收请求并修改数据文件的php脚本"></a>master中接收请求并修改数据文件的php脚本</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$_GET</span>[<span class="string">&quot;token&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$name</span>==<span class="string">&quot;&quot;</span> || <span class="variable">$token</span>!=<span class="string">&quot;example_token&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Error&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = file_get_contents(<span class="string">&quot;data.json&quot;</span>);</span><br><span class="line"><span class="variable">$data</span> = json_decode(<span class="variable">$value</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span>[<span class="variable">$name</span>]=time();</span><br><span class="line"></span><br><span class="line">file_put_contents(<span class="string">&quot;data.json&quot;</span>,json_encode(<span class="variable">$data</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Get&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="master中检查数据文件并发送短信的python脚本"><a href="#master中检查数据文件并发送短信的python脚本" class="headerlink" title="master中检查数据文件并发送短信的python脚本"></a>master中检查数据文件并发送短信的python脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每分钟运行一次，可在crontab中配置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> qcloudsms_py <span class="keyword">import</span> SmsSingleSender</span><br><span class="line"><span class="keyword">from</span> qcloudsms_py.httpclient <span class="keyword">import</span> HTTPError</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 腾讯云发短信的脚本，具体规则可参阅官方网站</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendSMS</span>(<span class="params"><span class="built_in">id</span></span>):</span></span><br><span class="line">    appid = <span class="number">1400000000</span></span><br><span class="line">    appkey = <span class="string">&quot;exampleappkey&quot;</span></span><br><span class="line">    phone_numbers = [<span class="string">&quot;18000000000&quot;</span>]</span><br><span class="line">    template_id = <span class="number">190000</span></span><br><span class="line">    sms_sign = <span class="string">&quot;vvzero&quot;</span></span><br><span class="line"></span><br><span class="line">    ssender = SmsSingleSender(appid, appkey)</span><br><span class="line">    params = [<span class="built_in">id</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = ssender.send_with_param(<span class="number">86</span>, phone_numbers[<span class="number">0</span>],</span><br><span class="line">        template_id, params, sign=sms_sign, extend=<span class="string">&quot;&quot;</span>, ext=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> HTTPError <span class="keyword">as</span> e:</span><br><span class="line">        logFile.write(<span class="built_in">str</span>(e)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logFile.write(<span class="built_in">str</span>(e)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    logFile.write(<span class="built_in">str</span>(result)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logFile = <span class="built_in">open</span>(<span class="string">&quot;hostsMonitor.log&quot;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">logFile.write(<span class="string">&quot;\n&quot;</span>+<span class="built_in">str</span>(datetime.datetime.now())+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    inputFile = <span class="built_in">open</span>(<span class="string">&quot;/var/www/iot/checkAlive/data.json&quot;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    logFile.write(<span class="built_in">str</span>(e)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    data = json.load(inputFile)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    logFile.write(<span class="built_in">str</span>(e)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    inputFile.close()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    logFile.write(<span class="built_in">str</span>(e)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">int</span>(time.time()) - <span class="built_in">int</span>(data[host]) &gt;= <span class="number">300</span>) <span class="keyword">and</span> (<span class="built_in">int</span>(time.time()) - <span class="built_in">int</span>(data[host]) &lt;= <span class="number">360</span>): <span class="comment"># 超过5分钟没有心跳包就发短信</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sendSMS(host)</span><br><span class="line">            logFile.write(<span class="string">&quot;Problem found in &quot;</span>+host+<span class="string">&quot;. SMS has been sent.\n&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            logFile.write(<span class="built_in">str</span>(e)+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">logFile.close()</span><br></pre></td></tr></table></figure><h3 id="slave中的crontab配置，其他定时任务同理"><a href="#slave中的crontab配置，其他定时任务同理" class="headerlink" title="slave中的crontab配置，其他定时任务同理"></a>slave中的crontab配置，其他定时任务同理</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * curl -X GET <span class="string">&#x27;https://monitor.example.com/?name=hostname&amp;token=example_token&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="实际效果"><a href="#实际效果" class="headerlink" title="实际效果"></a>实际效果</h2><p>这几天将这套系统运行了一下，没有什么问题。并且在我路由器掉线的时候及时提醒了我。</p><p><img src="https://img.vvzero.com/blog/simple-hosts-monitor-system/1.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我有很多台主机，公网、内网的都有，形式各异。有的时候，因为他人误操作、停电、被攻击，或者系统崩溃等事故，会导致主机无法正常运转。往常，我并不
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="php" scheme="https://blog.vvzero.com/tags/php/"/>
    
      <category term="python" scheme="https://blog.vvzero.com/tags/python/"/>
    
      <category term="云监控" scheme="https://blog.vvzero.com/tags/%E4%BA%91%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>我的2018暑假</title>
    <link href="https://blog.vvzero.com/2018/09/01/summary-for-this-summer-vocation-2018/"/>
    <id>https://blog.vvzero.com/2018/09/01/summary-for-this-summer-vocation-2018/</id>
    <published>2018-09-01T02:48:43.000Z</published>
    <updated>2022-01-17T08:39:56.513Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>暑假开始之前，我信誓旦旦地跟玲玲说，我这个暑假要赚一万块钱。结果，现在看来，一分钱也没赚到，倒是“赔”进去了不少钱。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>开学一周的此时，回顾一下之前两个月，也不算太晚。</p><h2 id="暑假概况"><a href="#暑假概况" class="headerlink" title="暑假概况"></a>暑假概况</h2><p>__时间：__要是从最后一门考试结束到第一次上课计算的话，应该是2018年7月5日至2018年9月4日，共61天。</p><p>__地点：__这是我第一次在假期里面“几乎不回家”。大部分时间是在南京航空航天大学将军路校区一号楼里面摸鱼，中途回家一个星期*2，在第二次回家期间，陪爸妈去扬州玩了一天，又到无锡，陪表弟过了一宿。</p><h2 id="大事小事"><a href="#大事小事" class="headerlink" title="大事小事"></a>大事小事</h2><h3 id="1-做了一个宿舍电费查询的小项目"><a href="#1-做了一个宿舍电费查询的小项目" class="headerlink" title="1. 做了一个宿舍电费查询的小项目"></a>1. 做了一个宿舍电费查询的小项目</h3><p>优秀的苏瑞辅同学，上学期在跟我共事的时候，曾跟我提过他想要做一个电费查询的项目，具体就是识别用户输入，向学校电费查询官网模拟请求，然后把电费数据抠出来，返回给用户。因为了解自己宿舍的空调电费余量、防止夜间突然断电，也算是刚需。何况电费查询网站必须要校园内网环境，而且查询页面并不是很友好，所以，这样的项目能够给同学们带来便利，应该具有挺高的实用价值。</p><p>但是，上学期由于种种原因，特别是查询网站的宿舍归类过于复杂，苏瑞辅并没有完成真正完成项目开发。我接过了他的想法，并在他提供的微信后端支持下，继续开发，目前完成了21-22栋、35-37栋的空调电费查询，并且后期将会跟据同学们的需求继续开发。</p><p>在这一次的项目开发过程中，我收获颇丰：</p><ol><li>__了解__了后端开发的基本概念；</li><li>__了解__了微信公众号开发的基本原理；</li><li>__知晓__了python的正则表达式用法、requests库的简单应用；</li><li>给自己的微信公众号涨了一点粉。</li></ol><h3 id="2-制作了一个恋爱打卡的小站点"><a href="#2-制作了一个恋爱打卡的小站点" class="headerlink" title="2. 制作了一个恋爱打卡的小站点"></a>2. 制作了一个恋爱打卡的小站点</h3><p>优秀的苏瑞辅同学，在暑期喜得一女友。我受不了他成天在我耳边念叨他的女票，于是自己也想办法秀自己一把。我和我的玲玲以前都是用“情侣空间”APP天天打卡，但是这个APP事实上挺臃肿，我们只需要“打卡”“记录恋爱天数”这两个功能，所以，不如就自己做一个。</p><p>我自学了前端的一些基本知识，欣赏了周围几个大佬的个人站点，强化了后端的一些概念，在10天左右的学习+实践后，我成功做了一个满足了以上两个需求的网页。玲玲也挺喜欢的，我们早就卸载了“情侣空间”APP，现在都在我做的页面上打卡。</p><p>在本次项目开发过程中，我：</p><ol><li>__了解__了前端开发的基本概念；</li><li>__学会了简单应用__bootstrap框架；</li></ol><h3 id="3-申请了很多云服务器"><a href="#3-申请了很多云服务器" class="headerlink" title="3. 申请了很多云服务器"></a>3. 申请了很多云服务器</h3><p>我也许有被迫害妄想症，总怕自己与世界的联系会断开。所以，我在周围大佬们的推荐下，尝试了很多的云主机提供商的服务。很多都有一年的免费，就算收费也挺便宜，何况很多时候都有学生优惠。</p><p>所以，我在阿里云、腾讯云、AWS、vultr等各大供应商，薅了一波羊毛，获得了屈指难数的云服务器和公网IP。总算给自己带来了一点安全感。</p><p>当然，这样的行为还是被周围的大佬们嘲笑了，其实吧，也真的没这个必要。</p><h3 id="4-搭建了自己的即时通讯平台和个人网盘"><a href="#4-搭建了自己的即时通讯平台和个人网盘" class="headerlink" title="4. 搭建了自己的即时通讯平台和个人网盘"></a>4. 搭建了自己的即时通讯平台和个人网盘</h3><p>同上，被迫害妄想症，总想什么都有自己的。</p><p>所以，咨询了赵祯真学长，他推荐我使用RocketChat这一款开源的即时通讯平台；咨询了优秀的苏瑞辅同学，他推荐我使用NextCloud这一款开源网盘系统。</p><p>我经过两三天的配置，基本完成了这两个系统的搭建，还好能用。我委屈了一下玲玲（毕竟我没有用户，只能找她），让我们每天互发日记的时候，都要在我搭建的通讯平台传输，她居然欣然同意了。我很感动，我唯一的用户。</p><h3 id="5-又一次感受了扬州的美"><a href="#5-又一次感受了扬州的美" class="headerlink" title="5. 又一次感受了扬州的美"></a>5. 又一次感受了扬州的美</h3><p>应该是我第三次去扬州了，扬州真的是个天堂。我去的地方不多，但是能让我真正感动的城市，只有扬州一个，每一次去都是一样的感觉。</p><p>扬州没有地铁，但是公交的便利程度丝毫不亚于地铁，如履平地。</p><p>瘦西湖景区是我见过的最舒心的景区，没有之一。</p><p>扬州人，让我感觉，说话好像都带着瘦西湖的水，很温和。</p><p>哎，回来之后就爱上了《扬州姑娘》这首歌。</p><h3 id="6-接触了一个上市公司"><a href="#6-接触了一个上市公司" class="headerlink" title="6. 接触了一个上市公司"></a>6. 接触了一个上市公司</h3><p>我在学生IT创新创业区里担任物联网区部长一职。这个暑假，老师让我们和一个校企合作的公司打打交道。我是秉着赚钱的目的去的，奈何自己的水平太菜，并不能给此公司带来价值，最终也就不了了之。</p><p>跟他们的技术总监（荷兰人）有过两次接触，一次是他们要做一个小API，我当时正在学习后端PHP，就顺手练习了一下，帮他们做了；第二次他要帮忙做一个摄像头盲区计算及最优解确定的问题，我实在是算法不精，无法胜任。</p><p>不过，至少也练习了英语口语。</p><h2 id="暑假里，那些人那些事"><a href="#暑假里，那些人那些事" class="headerlink" title="暑假里，那些人那些事"></a>暑假里，那些人那些事</h2><p>__我的玲玲：__真名张玲，是我的女朋友。这一个暑假，我们没有吵过架。而且，度过了第一个在一起的七夕。</p><p>__优秀的苏瑞辅同学：__谢谢他给我技术上和思维上的指导。以及，祝他和他的单单愉快！</p><p>__父母：__衣食父母。他们每年要在我这里投资4w+，这是风险最高的天使投资。</p><p>__张世博同学：__一位在暑假里参加电赛的大佬，他在的日子跟他玩得很愉快。以后如果我想赚钱的话，应该还是会找他的。</p><p>__赵祯真学长：__在创新区里认识的一位大佬。暑假前期和后期，他就坐在我旁边，给了我很多技术上的指导。另外，谢谢他的显示器。</p><p>__创新区的老师们：__假期的一切硬件资源都是学校提供的，老师们给了我很多的支持。</p><p>__工程训练中心的葛旺老师：__刚放暑假的时候，我和张世博帮他搬迁工盟的实验室。另外，得老师厚爱，现在担任工盟的主负责人。</p><p>__公寓管理中心的郑老师：__谢谢他给我查电费项目的支持，并帮我在公寓楼内宣传。</p><p>__表弟朱国盛：__很久不见了，上次去无锡，也就一天时间。不过，他陪我吃鸡的几个小时，真的好刺激。</p><p>__刘建廷老师、兄弟顾浩东、兄弟张子逸：__暑假里见过的高中哥们，也就他们仨了。听老刘讲了很久的人生经验，还被请去喝茶，妙。</p><p><strong>暑假里，还接触过很多人，就不一一赘述了。所有人都在影响着我，也许我也会有自己的影响力吧。</strong></p><h2 id="今天是"><a href="#今天是" class="headerlink" title="今天是"></a>今天是</h2><p>2018年9月8日。</p><p>开学一周。</p><blockquote><p>也许我真的一分钱都没赚到，赔进去了很多，但是，我想我这个暑假学到的，见识到的，遇到的，也许不止1w+吧？</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;暑假开始之前，我信誓旦旦地跟玲玲说，我这个暑假要赚一万块钱。结果，现在看来，一分钱也没赚到，倒是“赔”进去了不少钱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="LIVES" scheme="https://blog.vvzero.com/categories/LIVES/"/>
    
    
      <category term="心得" scheme="https://blog.vvzero.com/tags/%E5%BF%83%E5%BE%97/"/>
    
      <category term="暑假" scheme="https://blog.vvzero.com/tags/%E6%9A%91%E5%81%87/"/>
    
  </entry>
  
  <entry>
    <title>近日浅尝网络开发的一点心得</title>
    <link href="https://blog.vvzero.com/2018/07/26/experience-gained-as-a-developer-these-day/"/>
    <id>https://blog.vvzero.com/2018/07/26/experience-gained-as-a-developer-these-day/</id>
    <published>2018-07-26T11:55:16.000Z</published>
    <updated>2022-01-17T08:39:56.514Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我不是CS科班的学生，此次也并没有接触完整的、系统的网络编程开发。在题目中用“网络开发”显得有点大，但是我也很难用一个词概括我做了什么，就用这个词代替吧。</p></blockquote><h2 id="我做了什么"><a href="#我做了什么" class="headerlink" title="我做了什么"></a>我做了什么</h2><ol><li>写了一个抠网页的脚本。我用python模拟访问电费查询网站，把电费数据抠了出来。</li><li>做了一个微信公众号的后端。在<a href="https://www.suruifu.com/">苏瑞辅大佬</a>的指导下，使用php完成了一个微信公众号后端的开发，可实现调用python脚本以及自动转发微信回复至个人邮箱。</li></ol><h2 id="几点心得"><a href="#几点心得" class="headerlink" title="几点心得"></a>几点心得</h2><p><em>CS大佬们就不要看了，我是讲给网络编程初学者以及非科班爱好者的[/滑稽]</em></p><h3 id="1-学会查找你想要的资料"><a href="#1-学会查找你想要的资料" class="headerlink" title="1. 学会查找你想要的资料"></a>1. 学会查找你想要的资料</h3><p>这是我觉得最重要的能力，没有之一。一个人所能记住的知识是有限的，哪怕只去学一种语言，也不可能放肆地说自己“精通”。但是，网络是无限的。比如，某个不常用函数的定义，我们完全没有必要记住。只要能用好各类搜索引擎，快速准确地找到它，就够了。另外，我觉得，能够自己获取的信息，就尽量不要问别人，这是礼仪。</p><p>我从来没有接触过php，但是我经历了以下的步骤：</p><ol><li>搜索“php快速入门”，花15分钟了解基本语法，例如，变量名前要加’$’</li><li>大佬给了我一个类库（此处向苏瑞辅致♂敬），我大体看了下语言结构</li><li>跟据自己的需求，在php官网查找相应函数调用方式</li><li>Debug的时候遇到错误提示，Google一下，一般在StackOverflow上就能找到对应解决方案</li></ol><p>所以，我可能根本没有入门php，但是我已经可以完成一些简单的后端操作了。</p><h3 id="2-英文水平很重要"><a href="#2-英文水平很重要" class="headerlink" title="2. 英文水平很重要"></a>2. 英文水平很重要</h3><p>这是接着第1点的。</p><p>毕竟，国内的计算机水平距离国际先进水平还有相当大的差距，汉化的资料总有不足。要想获取一手的开发资料，英文水平当然很重要。</p><h3 id="3-万物皆I-O"><a href="#3-万物皆I-O" class="headerlink" title="3. 万物皆I/O"></a>3. 万物皆I/O</h3><p>（此处再次向苏瑞辅致♂敬，就用原话了。）</p><p>这是一种思维方式，只可意会不可言传。</p><p>举些例子：</p><ol><li>调用函数，都是按类型传参（Input），然后获取一个返回值（Output）</li><li>我们浏览网页，都是先使用HTTP GET或POST一个请求（Input），然后就可以看到服务器传回的网页（Output）</li><li>硬件开发中，假如我要使用一个频率-电压转换集成块，一定是输入一个频率（Input），然后获得一个电压值（Output）</li></ol><h3 id="4-有一个大佬带着能让你避开很多坑"><a href="#4-有一个大佬带着能让你避开很多坑" class="headerlink" title="4. 有一个大佬带着能让你避开很多坑"></a>4. 有一个大佬带着能让你避开很多坑</h3><p>大佬一定是比你聪明的，或者比你起步早的，他能看到的，你不一定能看到。大佬也许会不停地嘲讽你，但是听着就好了，毕竟能学到东西，特别是能学到学习方法，这就够了。</p><p>当然，有一个能互相学习的大佬，那更是万幸。</p><p>此处又一次向苏瑞辅致♂敬。[/手动滑稽]</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>好啦，没什么好总结的，这几天挺开心。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我不是CS科班的学生，此次也并没有接触完整的、系统的网络编程开发。在题目中用“网络开发”显得有点大，但是我也很难用一个词概括我做了什么，就用这个词代替吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;我做了什么&quot;&gt;&lt;a href=&quot;#我做了
      
    
    </summary>
    
      <category term="TECHNOLOGY" scheme="https://blog.vvzero.com/categories/TECHNOLOGY/"/>
    
    
      <category term="rvfu98" scheme="https://blog.vvzero.com/tags/rvfu98/"/>
    
      <category term="php" scheme="https://blog.vvzero.com/tags/php/"/>
    
      <category term="心得" scheme="https://blog.vvzero.com/tags/%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
</feed>
