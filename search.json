[{"title":"我两周就写了三行代码 - ARM Cortex A9 中断与浮点数运算、FPU 问题","url":"/2022/03/08/arm-cortex-a9-interrupt-with-fpu/","content":"\n## 问题出现\n\n公司产品采用了 Xilinx Zynq 7z010 芯片，用于运动控制以及网络通讯。两周前，测试过程中发现网络通信会小概率出错，TCP 收到的数据 CRC 校验失败，无法稳定复现。\n\n设备平台概述：\n1. CPU: Cortex-A9 双核\n2. RAM: 1GB DDR3\n3. 操作系统: FreeRTOS\n4. 网络协议栈: lwip211\n\n## 定位过程\n\n### 怀疑应用层数据处理问题\n\nTCP 是二进制数据流，每个包的长度不固定，应用层也许会写错。于是我修改了应用层的处理方案，手动构造了定长的数据包，虽然会导致 TCP 流量大幅上涨，但是逻辑看起来更清晰。\n\n然而，修改后，似乎由于流量变大了，原来小概率出现的错误，现在大概率会出现！这也给 Debug 带来了有利的一面。\n\n### 怀疑网络通讯链路电磁干扰问题\n\n但是这个怀疑方向很快就被否定了，因为我用了 TCP 协议，理论上只可能超时，不可能出错。\n\n### 怀疑 lwip 接口调用问题\n\nlwip 有多个 TCP API，之前用的 Socket API，我尝试换成了 RAW API，但是问题依旧。\n\n在调试的过程中，我尝试在网络链路的每一层数据打印出来，惊奇地发现，在数据链路层，数据是正确的！然而 lwip 的代码冗杂且数 MB 数据中才会出现几个错误位，于是我暂时没有考虑一层层分析代码。\n\n### 怀疑与其他线程之间存在干扰，或者存在数组越界访问\n\n这样 Debug 就很简单了。我关闭了所有其他的线程，不出所料，Bug 消失了。\n\n一点点放开线程，发现是一个**运动控制的硬中断**造成的 Bug。\n\n然后再“二分法”排除代码，结果排除到最后，仅仅是一行代码：\n\n```c\n// b, c 也为 long long\nlong long a = (long long)((double)b * (double)c);\n```\n\n这让我大跌眼镜，因为实验证明，把这句话删了，TCP 通讯就正常了。\n\n### 怀疑是浮点运算的问题\n\n更加让我迷惑的是，把上述语句改下，同样也没问题了：\n\n```c\nlong long a = b * c;\n```\n\n进一步定位：我在另一个线程中添加了浮点运算，并把这个有影响的中断关闭，TCP 通讯同样出问题了。\n\n就此，几乎可以确定是浮点数运算造成的问题了。\n\n\n### 问题小结\n\n一句话描述问题：在中断或某个线程中进行浮点数操作，会导致另一个 TCP 通讯线程数据出错。\n\n说实话，我当时也没法理解其中的联系。\n\n只不过我们用的芯片自带双精度 FPU（浮点运算单元），也许是 FPU 的问题？\n\n## 解决过程\n\n### 查找资料\n\n关键词 `lwip tcp receive wrong data`，`zynq float process corrupt memory` 等关键词，都没有找到有价值的解决方案。\n\n### 求助 Xilinx 技术支持\n\n果然用微信联系的技术支持不靠谱，上午说帮忙复现，下午就没信了。\n\n### 求助朋友圈资深开发者\n\n只可惜他们都是互联网界的大佬，只有我在嵌入式开发领域摸爬滚打，他山之玉难以攻石。\n\n### 求助 V2EX 网友\n\n发了帖子 [在这里](https://v2ex.com/t/838643)。\n\nV 站网友给了非常有价值的线索：\n\n1. 网友 A 称他们使用同样的平台出现过类似的问题。他们的解决方案是，进行浮点数操作之前，关闭所有的中断；\n2. 网友 B 分析可能 `正在计算浮点数的时候，刚好发生了 systick 线程切换，但是线程切换过程中，没有保存 /恢复浮点寄存器`；\n3. 网友 C 更是找到了相关文章：\n> “Some GCC libraries optimise memory copy and memory set (and possibly other) functions by making use of the wide floating point registers. Therefore, by default, any task that uses functions such as memcpy(), memcmp() or memset(), or uses a FreeRTOS API function such as xQueueSend() which itself uses memcpy(), will inadvertently corrupt the floating point registers.”\n\n真可谓一针见血，**TCP 协议栈中大量使用了 memcpy，而 memcpy 又使用了 FPU 的寄存器，极有可能在 TCP 处理数据的过程中，另一个中断来了，进行了浮点运算并修改了 FPU 的寄存器，以致 TCP 数据出错。**\n\n同样根据网友的指点，看了这篇文章 [Using FreeRTOS on ARM Cortex-A9 Embedded Processors](https://www.freertos.org/Using-FreeRTOS-on-Cortex-A-Embedded-Processors.html)，原来 FreeRTOS 自身已经考虑了 FPU 与上下文切换相关的问题，只是要我们将 `configUSE_TASK_FPU_SUPPORT` 这个宏定义为 2 即可。\n\n## 问题解决\n\n花了些时间进行 FPU 寄存器相关的搜索，依照 [这篇文章](https://stackoverflow.com/questions/38667425/how-to-push-and-pop-floating-point-registers-to-the-stack-on-armv7-32-bit) ，对 FPU 的寄存器做了相关处理，总结起来就三行代码：\n\n### 第一行代码\n\n在中断响应函数开头添加以下代码：\n\n```c\n__asm(\"VPUSH {d0-d15}\"); // FPU 寄存器入栈\n```\n\n### 第二行代码\n\n在中断响应函数末尾添加以下代码：\n\n```c\n__asm(\"VPOP {d0-d15}\"); // FPU 寄存器出栈\n```\n\n### 第三行代码\n\nFreeRTOS 启用 FPU 支持相关宏：\n\n```c\n#define configUSE_TASK_FPU_SUPPORT 2\n```\n\n至此，问题解决。\n","tags":["ARM","FPU"],"categories":["TECHNOLOGY"]},{"title":"苏州新冠疫情带来 2019 年 12 月的回忆","url":"/2022/02/18/thoughts-in-2022-2-suzhou-covid-19-epidemic/","content":"\n苏州最近多地出现了新冠肺炎病人，我现在就在苏州。以前总是看到其他地方各种中高风险地区，各种全员核酸检测，现在我就身处其中。\n\n很多人已经习惯了新闻里每天都会出现的疫情播报，习惯了每天戴口罩，但我总能记起 2019 年 12 月前后的一些琐碎细节，恍如隔世。\n\n2019 年 12 月，我还在南航，大四上学期。这大概就是我“大学最幸福的时光”的最后一个多月吧，各种主要的困难课程都在大一大二结束了，大三又有大把的时间跟创新区的大神们学技术、吹牛逼，现在技术水平尚可，时间充裕，毕设就是小儿科，连校招都尘埃落定了，该干一番大事了。\n\n大概 12 月 25 日左右，我在创新区度过了与往常一样幸福的一天后，晚上看到了“武汉出现新型冠状病毒”相关的新闻。当时我就有一点害怕，毕竟我当年也是生物课程的学霸，关于传染病相关的理论也略懂。只是不知道怎么办，想了想，于是去校门口药店买了一包医用口罩，黑色的，质量非常好，只是包装有点旧了，甚至落了灰尘。\n\n第二天戴着口罩在路上走，倒也没有人侧目，就是自己感觉有点怪怪的，有点格格不入。到了导师实验室也就一个学长“哟，戴口罩干啥”，我嘿嘿傻笑。晚上从创新区回宿舍，遇到了陈学弟，问我咋了，我说武汉出现了新型肺炎，防范一下。陈学弟不以为意：“武汉离南京好远呢”，我：“逻辑距离其实挺近的，坐高铁几个小时而已”。\n\n12 月 30 日左右，我陪玲玲坐校车去南航明故宫校区拿普通话考试证书。在校车上，当时当然不会有人戴口罩，我也没戴。我跟玲玲说了“肺炎”相关的问题，然后又在微信上问了高中同学王同学的意见（他当时在南医大学医），王同学：“小心点，这好像是新型冠状病毒造成的肺炎，去武汉的话得戴好口罩！”\n\n玲玲和我好像都多了一丝忧愁，拿到证书后，我分了玲玲几个口罩。\n\n2020 年 1 月中旬回家，刚好是全民大规模防疫的前夕。我坐大巴回家的，全车只有我一个人戴口罩，他们也并不知道接下来两三天会发生什么，当然不是过年的喜庆。\n\n接下来的事情就众所周知了，只记得当时，我突然很反感与我共处一室的人咳嗽，我开始疯狂洗手，我再也不直接用手摸脸抠鼻……我还记得我变得很焦虑，在群里与大家吹水的话题由“Nginx 代理转发规则”变成了“新冠病毒特效药”。大年初三左右，同一个小区的姨妈来我家拜年，我也躲在自己房间里不见……\n\n我曾跟玲玲开玩笑似的聊过：“细想起来，我们真的好惨好倒霉啊，大学刚要毕业，正是最有干劲的时候，结果新冠肺炎来了，全世界的情形因此急转而下，很多事情难度变得很大……”\n\n没想到，现在已经是 2022 年 2 月了，四舍五入都快三年了。但我现在心态好得不行，城市周围就有病人，但我并不焦虑。只不过依旧像《生活大爆炸》里的 Sheldon 一样，特别爱卫生，周围有人有症状我都会离他远远的，依旧勤洗手，依旧不去摸脸……\n\n我也依旧期待着，全世界彻底摆脱疫情阴霾的那一天。\n","tags":["苏州","新冠肺炎"],"categories":["LIVES"]},{"title":"随便聊聊最近在本站折腾的那些东西","url":"/2022/01/24/Casual-talk-of-current-site-management/","content":"\n> 重新加上了 Disqus 评论系统，翻译了一个树莓派引脚定义网站，换了企业邮箱服务商，部署了一个站点监控系统，开始搞 nextcloud 中文论坛……随便聊聊最近在本站折腾的那些东西。\n\n## Disqus 评论系统\n\n本站博客一直用的是 hexo，评论系统一开始也是用的 Disqus，后来不知道为啥就把评论系统给删了（可能是因为被墙了没意思？还是因为换了主题不支持啥的）。评论系统删了以后，又脑抽用 flarum 搭建了一个论坛，然后每篇博客前面都加一个对应的论坛讨论地址……这个方案被 PM 学叔给喷了，因为谁会为了评论，再去注册一个你的论坛账户呢？所以前几天把论坛给删了（话说也只有瑞辅一个人评论过一次，哈哈）。\n\nDisqus 评论系统可能是在 hexo 上最好用的评论系统了，谁让 hexo 自己本身就是一个静态页面呢。但问题是 Disqus 被墙了，我得提醒读者，本站是有评论系统的。很久以前看到奶冰的博客，也是用的 Disqus，他是自己加了一个按钮，提醒用户点击加载 Disqus 评论组件。于是时隔几年我把这个想法抄过来了。\n\n一开始感觉做这个按钮好复杂啊，因为自己几乎没有前端开发的经验。但是随便翻了翻我用的这个 aircloud 主题，发现源码改起来还是挺容易的，就强行加了一个按钮（话说改的方法我也上传到我 fork 的这个仓库里面了，<https://github.com/Villivateur/hexo-theme-aircloud>。\n\n## 博客主题的魔改\n\n除了改了评论系统，我也魔改了其他小东西。我有点洁癖嘛，而且自从上次 jsdelivr 被拔网线的事情之后，我觉得静态资源用其他的站点托管都不太稳定，于是把 aircloud 里面用到的 js 和 CSS 都下载并重新托管在了自己的服务器上。\n\naircloud 还提供了浏览量计数功能，一看也是加载了第三方的 JS，算了不要了，有点洁癖。\n\n## 树莓派引脚定义网站 pinout.vvzero.com\n\n很早就了解到过一个做得很棒的树莓派引脚定义查询网站 pinout.xyz，而且已经有人翻译成了法语、德语、土耳其语啥的。我一直有很强烈的翻译欲望，现在终于找到了一个适合翻译的（之前没人翻译过、数据量不大），于是就开始了。\n\n按照原作者给的翻译指引翻译了几个页面，但是感觉不过瘾，于是把本不该翻译的也翻译了（比如页面左下角的树莓派小图，还有生成脚本里面的一些细节），看来是没法全部提交 PR 了。故又 fork 了一个纯中文版的仓库，地址 <https://git.vvzero.com/villivateur/pinout.vvzero.com> ，用于部署 <https://pinout.vvzero.com> 。按照翻译指引的仓库 <https://github.com/Villivateur/Pinout.xyz> 只用来提交 PR。\n\n## zoho 企业邮箱\n\n腾讯企业邮箱是越来越恶心了，强行给你绑企业微信，还各种限制，不用微信登陆就强制改密码，算了，终于忍不了弃用了。V 站网友推荐了 zoho 邮箱，试了下感觉不错，于是给自己和玲玲买了两个账户，国区的，一年一共 100，完全可以接受。\n\n目前发现 zoho 邮箱有两个问题：\n1. spam 有点严格，zoho 自家发的邮件都会进去，哈哈\n2. 我在 archive.org 的注册邮件，zoho 收不到\n\n## 站点监控部署\n\n也是看到奶冰的网站，有个站点监控的玩意，用了 uptimerobot 的服务，试了下挺好玩，于是也部署在了 <https://status.vvzero.com>\n\n## nextcloud 中文论坛\n\n算是闲得蛋疼吧，感觉没人做 nextcloud 中文论坛，但我用 nextcloud 确实很多，就“抢先”搞了，虽然目前没什么内容。<https://www.nextcloudcn.com> 这个域名还是我抢注的，之前一个人刚好到期。没备案，所以只能托管在香港，套个 cloudflare。\n\n至于运营就看情怀了，希望明年还想续费这个域名……\n","tags":["email","nextcloud","树莓派","站点监控","评论系统"],"categories":["TECHNOLOGY"]},{"title":"分享一下我的家庭网络布局","url":"/2021/11/04/Network-devices-at-my-home/","content":"\n\n## 我的家庭网络拓扑图\n\n![](https://img.vvzero.com/blog/Network-devices-at-my-home/1.jpg)\n\n### 数据流部分\n\n1. 网络核心部分是 Nano Pi R2S 这个软路由，经过一年调教，已经能适应我这里的一切网络需求了。主要运行了 Wireguard、流量监控、网路唤醒等服务。因为我们小区只有百兆网，所以性能暂时够用。\n2. 几乎所有网络设备都通过中间这个交换机与软路由通讯，虽然不算什么好的交换机，但是同理，够用。\n3. 数据中心是用 intel NUC8 搭建的家庭服务器，主要部署了 emby、Nextcloud、qbittorrent 等服务，满足了家庭观影、数据存储等需求。\n4. 存储采用多个硬盘，目前放弃了阵列模式，家庭用的话还是单块盘来用性价比最高，经常冷备、热备就好。\n5. 家庭服务器通过 FRP 服务把 Nextcloud 服务映射到公网，方便在外看家庭数据。\n6. 主力机是一台 E3-1231 V3 的机器，为什么还在用好几年前的平台？因为满足我的需求了。\n7. 我把一台小米路由器当 AP 用了，目前可以满足所有智能家居、所有手机、平板的稳定联网。\n8. 智能家居方面，完全采用了小米的方案，好看就是王道。\n\n### 功率电部分\n\n1. 图中除了主力 PC、移动设备和智能家居，其他均部署在一个机柜内，所以两个插排就搞定了。\n2. UPS 还是很有必要的，帮我至少挡住了两次意外停电。\n","tags":["智能家居","运维"],"categories":["TECHNOLOGY"]},{"title":"Mapuino - 一个硬件极客风的 WEB 访客地图显示摆件","url":"/2021/09/27/Mapuino-a-cute-knickknack-for-web-access-monitor/","content":"\n\n## Mapuino 是什么\n\nMapuino 是一个简单的摆件，或者叫“玩具”。你可以在自己的个人博客、主页或者任何可以插入个性代码的社交网站（如 V2EX）上添加一行 URL，然后就可以在 Mapuino 上观赏全国哪些地方的人正在访问你的网站。\n\n![](https://img.vvzero.com/blog/Mapuino-a-cute-knickknack-for-web-access-monitor/1.jpg)\n\n## Mapuino 不是什么\n\nMapuino 不是生产力工具，它功能单一，仅供娱乐。但它真的可以给你的生活带来一些小乐趣。\n\n## Mapuino 的历史故事\n\n2017 年秋学季，我上大二，有幸加入学校的学生 IT 创新创业区，并认识了 suruifu 同学，当时我所在的部门叫“物联网创新区”。圣诞前夜，suruifu 同学在创新区内给我分享了一个外国小哥的 youtube 视频。视频中，外国小哥做了一个圣诞树，神奇之处是，只要有人 ping 他的电脑 ip，圣诞树上就会随机亮起一个 LED。很多人一起 ping 的时候，圣诞树就会闪闪发光。\n\nsuruifu 同学感慨：“这才是物联网！”\n\n而后，到了今年，一个月以前，我做了第一个小摆件 [Topuino](https://blog.vvzero.com/2021/08/31/Topuino-the-wonderful-Knickknack-for-server-monitoring/)。\n\n用同样的技术栈，我又做了 Mapuino。\n\n## Mapuino 的工作模式\n\nMapuino 与 Topuino 类似，在配置之后，会连接 Wi-Fi 并从服务器获取数据，在每个周期内（比如 1 分钟），所有在上一个周期访问过你网站的用户，其所在省级行政区的 LED 将会亮起。\n\n## Mapuino 的工作原理\n\n硬件部分与 Topuino 非常类似，采用 ESP8266 作为 MCU，TM1638 作为 LED 驱动。\n\nMapuino 会以 1 分钟为周期向服务器发起请求，服务器返回上一个周期哪些地区有用户访问了指定 URL。此 URL 可以嵌入在任何网页中，比如通过 JS 发起请求，或者假装是一个 img 标签，或者也可以用各类站长测速工具直接 DDOS 这个 URL......\n\n服务端直接解析访问此 URL 的 IP 所在地（目前使用了高德的 API），并临时存储。\n\n![](https://img.vvzero.com/blog/Mapuino-a-cute-knickknack-for-web-access-monitor/2.jpg)\n\n## 与 Topuino 相比的改进\n\n1. 体积更小，~~可以白嫖部分 PCB 打样厂的免费额度~~；\n2. 调整了下面两个固定孔的位置，可以直接拧上两个螺柱，方便放在桌上；\n3. 隐藏了 Wi-Fi 天线；\n4. 成本更低。\n\n## 代码与开源\n\n硬件端: <https://github.com/Villivateur/Mapuino>\n\n服务端: <https://github.com/Villivateur/MapuinoServer>\n\n## 结语\n\n我又有其他点子啦，下一个做啥呢？\n","tags":["Arduino","ESP8266","IoT"],"categories":["TECHNOLOGY"]},{"title":"Topuino - 你愿意在办公桌上放一个监控服务器的小摆件吗？","url":"/2021/08/31/Topuino-the-wonderful-Knickknack-for-server-monitoring/","content":"\n\n> 我做了一个用来监控服务器的桌面小摆件\n\n![](https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/1.png)\n\n## 什么是 Topuino\n\nTopuino 是我 DIY 的一个桌面小摆件，可以实现通用服务器或计算机的数据监控，包括 CPU 占用、RAM 占用、两个硬盘的可用空间、硬盘读写速度、网络 IO 速率。\n\n## 为什么叫 Topuino\n\n在 Linux 系列服务器上，我们通常使用 top 命令查看 CPU 内存占用，我最初的设想也是将 top 命令实物化，这就是 Topuino 中 Top 的由来。\n\n在选型的时候，为了兼顾开发效率和成本，我选用了大名鼎鼎的 ESP8266 单片机，配合了 Arduino 开发框架，Arduino 则是 Topuino 中 uino 的由来。\n\n## Topuino 有哪些亮点\n\n先看图解：\n\n![](https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/2.png)\n\n1. 我觉得它挺好看，哑光黑的 PCB 底板富有科技感，红绿蓝三色 LED 层次分明，指示性强；\n2. 显示的参数满足大部分的需求，刷新率为 1 秒，CPU、内存、磁盘占用以百分比表示在柱状图上，磁盘、网络 IO 各以四位数码管显示，配合 KB、MB 单位显示，可以表示 0KB - 9999MB /s 的速率；\n3. 配置、操作方便。在需要监控的服务器上只需要跑一个 python 脚本即可；Topuino 首次上电后支持用手机或任何支持 Wi-Fi 的设备连接，并通过浏览器配置。若需要重新配置，通过按键即可恢复；\n4. 使用了通用的 USB-TypeC 接口（后期会做带电池版本）；\n5. 成本不高，谁都可以承担。\n\n![](https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/3.jpg)\n\n## Topuino 的工作原理\n\n- 服务器部分很简单，主站使用了 Flask，维护一个数据库，保存着从站（被监控服务器）UUID 与运行参数的映射关系（实际上现在是用 python 的字典简单实现的）。主站接收从站的运行数据，并向 Topuino 回传数据；\n- 服务器从站采用 python 的 psutil 库，获取所有的运行数据；\n- Topuino 硬件部分使用了 ESP-12F 作为 MCU，显示采用 LED 整列和数码管，显示驱动是 TM1638 芯片。\n\n附上原理图：\n\n![](https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/4.png)\n\n![](https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/5.png)\n\n![](https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/6.png)\n\nPCB 打样交给专门的厂家，回来自己焊。\n\n## 结语\n\n你愿意在办公桌上放一个监控服务器的小摆件吗？至少，我做出来之后，很喜欢，就像看着一只猫一样。\n\n![](https://img.vvzero.com/blog/Topuino-the-wonderful-Knickknack-for-server-monitoring/7.png)\n\n另：ESP8266 的代码初步开源在 <https://github.com/Villivateur/Topuino> ，供大家参考。服务器端代码因为太简单且写得太丑，以后再说吧~~\n","tags":["Arduino","IoT","Topuino"],"categories":["TECHNOLOGY"]},{"title":"对 PlatformIO 有点失望","url":"/2021/04/16/A-little-pitty-for-PlatformIO/","content":"\n\n> PlatformIO 目前只是玩具，单片机开发还得用 Keil\n\n好久不碰单片机，现在想搞个项目，选型 STM32xxxxxx，想找一套“现代化”的 IDE，于是找到了 PlatformIO。\n\n刚开始很新奇很激动，VSCode 开发环境很友好，各种单片机型号、库很丰富，而且 STM32 可以直接用 Arduino 开发，各种一键式部署。最主要的是商用免费，差点就选用了。\n\n但是问题很快就出现了，Arduino 框架对于底层的封装太完美，我甚至不能方便地修改 SPI 或者 I2C 的引脚，而且 GPIO 读写速度也相较使用 CMSIS 慢很多，STM32duino 虽然仍然在发展，但是，我认为还处在“玩具”的阶段。\n\n如果抛弃 Arduino 框架，去使用 CMSIS ，那也太不方便了，而且 STM32 标准库在 PlatformIO 里面目前居然只支持很少几款芯片（F10x 系列全系不支持）。如果我要用 FreeRTOS，FreeRTOS 官方目前也没有适配 PlatformIO。\n\n最终还是回到 Keil，花钱的才是最好的。\n","tags":["Arduino","PlatformIO","STM32"],"categories":["TECHNOLOGY"]},{"title":"我们订婚了 We are engaged!","url":"/2021/02/14/we-are-engaged/","content":"\n\n\n2021年2月14日，情人节，农历正月初三，玲玲与瑾瑾喜订良缘。\n\n互联网是有记忆的，在此，我就以计算机为担保，依网络见证！\n\n","tags":["玲玲","订婚"],"categories":["LIVES"]},{"title":"如何成为 CA，并签发自己的证书","url":"/2021/01/24/Become-a-CA-and-generate-self-signed-certificate/","content":"\n\n\n> 要读懂此文章，你需要了解对称加密、非对称加密的基本概念，并了解证书签发的基本流程。\n\n## 工具准备\n\n1. 一台 Linux 主机\n2. openssl\n\n## 创建 CA 的私钥\n\n很容易理解，CA 也有自己的公钥和私钥。\n\n`openssl genrsa -des3 -out CAPrivate.key 2048`\n\n这个命令会生成一个私钥 `CAPrivate.key`，并且必须要填写私钥的密码。可以将 2048 改成 4096。不要奇怪这里只有一个私钥，其实公钥也保存在这个文件里了。\n\n## 创建根证书\n\n`openssl req -x509 -new -nodes -key CAPrivate.key -sha256 -days 365 -out CAPrivate.pem`\n\n根证书，顾名思义，肯定是自签发的。这个证书待会需要安装到你的终端设备里面，不然靠这个根证书签发的其他证书不会被信任。\n\n这个命令里面需要填写很多信息，按照实际填写就好。\n\n至此，作为一个简单的 CA，所有的文件都已经齐全了。\n\n## 创建待签发证书的私钥\n\n这个私钥与 CA 无关，是待签发的下一级证书。这一步和下一步可以在另一台机器上完成，然后把文件传给保存 CA 信息的机器就好。\n\n`openssl genrsa -out MyPrivate.key 2048`\n\n同样，可以把 2048 改成 4096。\n\n## 创建 CSR\n\n可以理解为一个待发送给 CA、为你签发证书的一个请求。\n\n`openssl req -new -key MyPrivate.key -out MyRequest.csr`\n\n同样，这里需要填写很多信息，需要注意的是 `Common Name` 这个项目，如果你的证书是给 https 用的，这里就填你的域名。\n\n## 使用 CA 的私钥签发证书\n\n`openssl x509 -req -in MyRequest.csr -CA CAPrivate.pem -CAkey CAPrivate.key -CAcreateserial -out X509Certificate.crt -days 365 -sha256`\n\n## 试一试刚刚签发的证书\n\n1. 在待测试终端设备上安装 CA 的根证书 `CAPricate.pem`，比如 Windows、Android，某些浏览器必须单独安装证书。\n2. 把 `MyPrivate.key` 和 `X509Certificate.crt` 作为 HTTPS 服务（比如 Nginx）的私钥和证书，写好配置文件。\n3. 在浏览器里面试试看，应该可以显示小锁，且没有安全警告。\n\n","tags":["网络安全","证书"],"categories":["TECHNOLOGY"]},{"title":"我终于知道了补码的意义","url":"/2020/11/18/May-be-I-know-why-use-complement/","content":"\n\n\n> 本文供初学者学习，供大佬批判。\n\n## 补码背景\n\n很久很久以前，当我参加 NOIP（信息学奥林匹克竞赛）的时候，老师是这么讲补码的：\n\n> int 型数据的最高位是符号位，符号位为 0 就代表这是正数，为 1 就是负数。但是，+0 和 -0 理应是同一个数，但在二进制中却表示成了两个不同的数（以 8 位为例，二进制表示）： 00000000 和 10000000。所以，我们引入了补码，补码就是，对负数而言，符号位不变，其他位取反，然后再加 1。于是， -0 的补码就是 10000000 -> 11111111 -> 00000000 与 +0 一致了。\n\n## 补码的意义\n\n其实当时我就该意识到，仅仅为了 0 这一个数便创建了“补码”这个概念，未免太浪费了。我最近看了 _CS: APP_ 这本书，才进一步理解了补码。\n\n补码，就是为有符号整数而创建的概念。对于无符号整数，是不存在“补码”的概念的。我们先看一个无符号数 00100101，它是怎么转换成十进制的？加权求和，`0×2^7+0×2^6+1×2^5+0×2^4+0×2^3+1×2^2+0×2^1+1×2^0=37`；无符号数 10000011，`1×2^7+0×2^6+0×2^5+0×2^4+0×2^3+0×2^2+1×2^1+1×2^0=131`。\n\n对于有符号数呢？假如我们不用补码，那么有符号数 10000011，就是 `-(0×2^6+0×2^5+0×2^4+0×2^3+0×2^2+1×2^1+1×2^0)=-3`。人这么算起来是挺舒服，但是计算机会很难受，凭什么我最高位的权值没了？只能做符号？\n\n然后我们试试补码。10000011 的补码是 11111101，如何用补码求它的十进制呢？其实这跟无符号数是一样的，只不过，最高位的权值，不是 2^7，而是 -2^7。求值：`1×(-2^7)+1×2^6+1×2^5+1×2^4+1×2^3+1×2^2+0×2^1+1×2^0=-3`，是不是很神奇？\n\n对于正数而言，就更简单了，与无符号数一致。\n\n## 补码再探\n\n计算机只能做加法（不是），所以，我们看看用补码做加法，有什么好处。\n\n先计算 -13+10 吧，很简单的二进制竖式加法：\n\n| 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |\n|---|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 1 | 0 | 0 | 1 | 1 |\n| 0 | 0 | 0 | 0 | 1 | 0 | 1 | 0 |\n| 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 |\n\n11111101 即为 -3 的补码。\n\n再算一个，-8+9：\n\n| 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |\n|---|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 1 | 1 | 0 | 0 | 0 |\n| 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n\n神奇吗？最高位的 0 不见了，变成正数 1 了。\n\n## 补码小结\n\n补码，就是计算机内部有符号数的存储方式，我们不要认为补码是由原码“转换”而来的，补码本来就代表了实际的数字，11111101 == -3，就这样。\n","tags":["补码","计算机原理"],"categories":["TECHNOLOGY"]},{"title":"使用虚拟机绕过 Windows Samba 客户端端口限制","url":"/2020/04/28/use-virtual-machine-to-bypass-windows-samba-port-limit/","content":"\n\n\n## 背景\n\n迫于不能浪费宿舍联通宽带的公网 IP，我用树莓派搭建了一个 NAS，使用 Samba 提供访问。但是，由于运营商限制，入站和出站的 139、445 端口都被封禁（对！你不能访问其他机器的 445 端口！），这样做只能让同一个局域网的服务访问。我尝试修改了端口号，把本地的 445 端口映射到公网的其它端口，算是可以给大部分 Samba 客户端使用了（比如安卓手机）。但是，Windows 的 Samba 客户端，并不支持设置端口号（如果在文件管理器地址栏输入 `\\\\a.b.c.d:xxx` 将会被认为是 WebDAV 协议）。\n\n网上某些教程说，在 Windows 本地设置端口转发，把访问本机 445 端口的流量转发至你的 Samba 服务器端口。但是，这样做需要关闭 Windows 自己的 Samba 服务器，会导致网络共享、网络打印机等很多功能无法使用，导致莫名其妙的问题，所以不推荐。\n\n但是可以换个思路。\n\n## 原理\n\n既然不能使用本机（127.0.0.1）做转发，那么为什么不使用本地网络中其他的机器进行数据转发呢？一开始我想在本地网络中加一个树莓派之类的小主机，但觉得这样太累赘了。虚拟机也是独立的机器，我觉得一样有效。\n\n所以，只要在虚拟机里面装一个反向代理应用（Nginx），把发往虚拟机 445 端口的流量转发到 Samba 服务器，然后使用 Windows Samba 客户端访问这个虚拟机，就等于访问 Samba 服务器。\n\n## 实践\n\n这里，我使用了 Windows Hyper V，创建了 Ubuntu 20.04 Server 虚拟机（直接下载官方 ISO），然后使用默认交换机作为虚拟机的网络。\n\n<img src=\"https://img.vvzero.com/blog/ih/2020/04/28/2416a9e0b66ec.png\" alt=\"Snipaste_2020-04-28_14-07-57.png\" style=\"zoom:33%;\" />\n\n启动后，安装系统，然后除了更新镜像源、安装 Nginx，什么都不用做。\n\n```bash\nsudo apt update\nsudo apt install nginx\n```\n\n装好 Nginx 后，修改配置文件：\n\n```\nvim /etc/nginx/nginx.conf\n```\n\n添加一个 stream 模块，大致像下面：\n\n```nginx\nhttp {\n    ......\n}\n\nstream {\n    server {\n        listen 445;\n        \n        // 你的 NAS 地址\n        proxy_pass mynas.example.com:12345;\n    }\n}\n```\n\n然后重启 Nginx：\n\n```bash\nsudo nginx -s reload\n```\n\n转发的模块就做好了。\n\n然后，再在 Windows 中打开 `\\\\<虚拟机的ip>\\<samba 路径（可选）>` 就完成了。虚拟机 ip 可以在虚拟机里面用 ifconfig 命令查看。\n\n## 后续\n\n也许可以用 docker 实现，但我还没想好怎么搞。","tags":["Windows","Samba"],"categories":["TECHNOLOGY"]},{"title":"使用阿里云 ECS 搭建廉价的高性能云桌面","url":"/2020/02/08/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/","content":"\n\n> 要想读懂本文，你需要：\n> 1. 了解阿里云等云服务的基本 WEB 界面操作；\n> 2. 了解 Windows 操作系统的中阶操作；\n> 3. 了解基础的软件开发术语。\n\n## 前言\n\n本文面向的是需要使用高性能计算设备，但是身边只有低性能PC机的群体。最近由于 NCP 疫情，出不了门，返回不了工作地，想必不少人的高性能计算设备（好电脑）没带回家，但是，肯定也有人跟我一样，受不了笔记本电脑的龟速。\n\n我的配置需求是，能够流畅运行安装多个插件的 VSCode、能够同时打开数十个 Firefox 标签页、能够快速完成 node 项目构建。但是我身边只有一台五年前的 intel NUC (i3-4010U, 4GB RAM)。\n\n在详细了解了各大云服务商的云计算平台后，个人排除了华为云（弹性计算服务价格较高、云桌面售罄）、腾讯云（云计算服务类别过少）、天翼云（云桌面需要安装指定 APP 且性能不满足要求），决定使用阿里云的云计算服务。\n\n## 使用阿里云初步搭建云桌面\n\n经过权衡，我决定使用阿里云 ESC “抢占式实例”付费模式下的“突发性能实例”。为什么这么选？\n\n因为没钱……\n\n开玩笑的。我觉得这是我需求下的合理选择方式。为什么选择“抢占式实例”？首先，我们复工的时间还是个未知数，而且可能随时就不想用这个云桌面了。“抢占式实例”是按量付费的一种，也就是，用多长时间给多少钱。并且，相对于按量付费，有相当大的折扣。**“抢占式实例”的最大问题在于，这是竞价模式。也就是说，当别人出价比你高的时候，或者阿里云供给紧张而你又给钱给得不够的时候，它会自动帮你释放。我了解的是，在释放前5分钟，阿里云会有提醒。**为了尽量避免实例被自动释放，我选择了“使用自动出价”，也就是说，系统会每小时自动判断当前时间该实例的价格，并选择一个高于市场均价的价格进行付费。**但是，这并不是万无一失，阿里云在供给紧张的时候，仍然会将实例释放。**所以，在处理重要数据时，应该随时备份。我的处理方法是，随时将代码提交到我的 Git 仓库。\n\n![Snipaste_2020-02-09_17-32-20.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/ea3d50f39b198.png)\n\n![Snipaste_2020-02-09_17-34-24.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/df1fabf212984.png)\n\n如果要保证不会被释放，建议使用包年包月制。\n\n为什么使用“突发性能实例”？因为个人电脑与服务器不同。个人电脑不会时时刻刻占用大量 CPU，CPU使用率是离散化的，所以 CPU 的使用积分，我觉得是用不完，25% 的使用基线，完全够用。\n\n![Snipaste_2020-02-09_17-34-05.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/d74c0622ec620.png)\n\n哎，目前好像国内也只有阿里云能做出“抢占式实例”和“突发性能实例”。\n\n其他的配置就简单了，区域选择靠近你的（不同地区的价格好像差别挺大），镜像选择 Windows Server，另外，SSD 是很关键的，我觉得现在已经没有多少人能忍受机械硬盘的龟速了。\n\n![Snipaste_2020-02-09_18-03-26.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/6ae75caa75c6a.png)\n\n![Snipaste_2020-02-09_17-36-25.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/cbe75edc3c797.png)\n\n在下一个页面配置网络，为了保证远程桌面流畅，按使用流量计费，带宽拉满！\n\n![Snipaste_2020-02-09_17-45-57.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/2c112190ea447.png)\n\n最终，我的配置如下：\n\n- 4核16GB，25% 平均CPU 计算性能；\n- 100Mbps 按流量付费网络；\n- 80GB SSD；\n- Windows Server 2019 数据中心版；\n\n这样的话，实例价格为 0.412 元每小时（我选的是上海区的，其他区的可能更便宜，在深夜、早上也会更便宜），流量费用为 0.8 元每 GB。算一算，一天大概要 10 元，一个月大概要 300 元，是不是还是有点贵？没关系，继续看。\n\n![Snipaste_2020-02-09_17-36-50.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/ecfef72872df3.png)\n\n## 价格的进一步优化\n\n现在我已经启动了这个实例：\n\n![Snipaste_2020-02-09_18-21-04.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/3ea24c1929367.png)\n\n我还想更便宜。\n\n### 与基友合租一台机器\n\n我想你一定不可能一天24小时都在用它，用它的时候也一定不会一直占满 CPU。关键是，我们这是 Windows Server，跟家庭版、专业版、企业版什么的都不一样，它支持多个用户同时登陆！所以，我觉得，如果有信任的人选，完全可以合租。\n\n### 关机时选择“停机不计费”\n\n阿里云真的是神奇的存在，在 ECS 管理界面，选择停机，竟然可以停机不收费！\n\n![图片1.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/28437c5fae934.png)\n\n实际上也不是完全不收费，硬盘和弹性公网 IP 仍然是收费的。但是，与停机后仍然保留CPU、内存相比，价格大幅降低。也就是说，我们在每天晚上，完全可以关机并选择不收费，可以节约一大笔。如果想要一直使用同一个 IP，可以选择绑定弹性公网 IP。\n\n### 依据个人需求选择实例规格\n\n我觉得，可能 8GB 内存已经够我用了，另外，青岛区的实例好像每小时能更便宜一毛钱……\n\n## 云桌面体验\n\n在体验之前，再确保一下：该实例网络安全组，需要放通 3389 端口（TCP 和 UDP 都要放通）。\n\n打开本地的远程桌面客户端试试吧！\n\n![Snipaste_2020-02-09_18-38-25.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/b4629c62b4373.png)\n\n网络方面，我是江苏电信网络，连接上海区的 ECS，延迟很小，可以忽略，而且画质很清晰，暂时没有什么画面卡顿。至于下行网络，由于这是阿里云的专线，比家用运营商网络好太多，下载速度嗖嗖的，不管国内外。\n\n计算性能方面，在我本地机器上，VSCode 的 Python 插件，进行一次文件错误扫描需要 5 秒左右，而这台云桌面，只要 1 秒。\n\n操作系统方面，Windows Server 比 Windows PC 简洁很多，没有乱七八糟的服务，但也没有缺少日常开发所需的重要组件。可能会有点不一样，但是如果出问题，一般能很快解决。比如我在安装 Python 时出错，Google 一下便知要直接以管理员身份打开。\n\n以下截图自我的云桌面。\n\n![Screenshot _1_.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/d3b52ba297968.png)\n\n![Screenshot _3_.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/e9ae18b879037.png)\n\n![Screenshot _4_.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/9f2c0741b0057.png)\n\n![Screenshot _2_.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/8109324fabb58.png)\n\n\n\n### 提高体验的可选项\n\n1. 关闭 Windows 的过渡动画，这在远程桌面上会导致卡顿，且会消耗大量的流量费；\n2. 安全起见，重新创建一个管理员用户并禁用 Administrator 用户；\n3. 用好各种云同步功能，比如 Git 仓库、浏览器云同步、云盘等。\n\n## 实测价格\n\n我正常使用了一天，晚上停机不收费，消费如下：\n\n![Snipaste_2020-02-09_18-54-30.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/176c67e7015fa.png)\n\n![Snipaste_2020-02-09_18-55-07.png](https://img.vvzero.com/blog/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/140f26bd1d962.png)\n\n可见，我一天大致消费5元。\n\n## 后记\n\n确实不是很贵，可行性也很高。假如有模型渲染需求，甚至可以绑定个显卡（\n\n抢占式实例也不是很可怕吧？我的实例目前没被回收。\n\n另外，有人想跟我合租吗？","tags":["Windows","阿里云","云桌面"],"categories":["TECHNOLOGY"]},{"title":"为 Windows PowerShell 设置 User Alias （命令别名）","url":"/2019/07/22/set-user-alias-for-windows-PowerShell/","content":"\n\n> 直接看步骤的话，在最下方。\n\n## 背景\n\nWindows Terminal 虽然还处于预览阶段，但是也出来很长一段时间了。它的历史使命，也许就是让原生 Windows 也能有一个像样的命令行环境。以前我一直在用 Cmder，但是 Cmder 的启动速度确实不敢恭维，而 Windows Terminal 启动确实很快。相比 Cmder， Windows Terminal 还缺少很多功能，不过以后应该很快也会补上。\n\n<img src=\"https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef29b3f1.png\" style=\"zoom:50%;\" />\n\n我想尝试使用 Windows Termimal 进行开发。Windows Terminal 默认可以使用 `PowerShell`、`cmd`、`wsl bash`作为脚本工具。既然是在 Windows 环境下嘛，还是得尊敬一下 Windows PoweShell 的。初次使用，我觉得 PowerShell 跟 Cmder 用起来，最不方便的一点就是，我在 Cmder 里面设了很多的 Alias，也就是通过修改 `config/user_aliases.cmd` 写一串 `<alia>=<xxx> <xxx>` 来实现的。\n\n<img src=\"https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef29ad52.png\" style=\"zoom:50%;\" />\n\n但是，PowerShell 如何实现命令的别名设置呢？\n\n## 探索过程及原理概述\n\n如果搜索关键词 `windows powershell set user alias`，通常谷歌会给出[微软官方文档](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/set-alias?view=powershell-6)，但是这个文档只是告诉我们如何在脚本里面设置临时的别名，如果要设置永久别名，该怎么办？实际上，“别名”这种东西，也就是 `alias`，几乎所有的脚本语言，都没有所谓的“永久别名”(Permanent alias)，我们使用 Linux bash 、Cmder 之类的脚本工具，打开终端时，系统会默认执行一个脚本文件（ bash 是用户目录下的 `.bashrc`，Cmder 是 `config/user_aliases.cmd` ），而这样的脚本文件里，就包含了别名的定义。这也是为什么，我们在 Linux 类系统中，修改 `.bashrc` 后，必须要重新登出登录、或者 `source .bashrc` 的原因了。\n\n所以，我们只要修改 Windows Powershell 启动时执行的文件就行了。很多论坛里面说，默认执行的脚本是 `$Home\\Documents\\profile.ps1` ，也就是 `C:\\Users\\你的用户名\\Documents\\profile.ps1` ，但是这并不正确，最好的方式是，先启动 PowerShell ，再执行 `echo $profile`，这样得到的文件路径，才是 PowerShell 的默认执行文件路径。\n\n![](https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef29d447.png)\n\n然后，创建这个文件就好啦。\n\n在文件里面，写上别名设置的语句。再一次注意，假如你的别名指代的命令含有空格，就不可以使用 `New-Alias` 命令，因为它不能带空格，即使你把指代的命令用引号括起来也没用。那怎么办呢？继续谷歌，原来，正确姿势是用 `function` ，也就是，我们把自己要定义的指令，定义为一个函数，就行啦。\n\n<img src=\"https://img.vvzero.com/blog/set-user-alias-for-windows-PowerShell/5d35bef339443.png\" style=\"zoom: 67%;\" />\n\n保存文件，重新启动 PowerShell 以后，不出意外，应该会报一个 `File xxxxxxx\\Microsoft.PowerShell_profile.ps1 cannot be loaded because running scripts is disabled on this system.` 根据[此链接](https://tecadmin.net/powershell-running-scripts-is-disabled-system/)，出现这种情况，是因为 Windows 系统为了防止恶意脚本自动执行，故默认不允许自动运行脚本。所以，在确定自己有能力把控的情况下，__以管理员身份__，在 PowerShell 中执行 `Set-ExecutionPolicy RemoteSigned `，即可。\n\n再次重启 PowerShell，应该可以发现，自定义别名已经生效了。\n\n## 步骤整理\n\n如果你想为自己的 Windows PowerShell 设置永久的命令别名 (Alias)，可以遵循以下步骤：\n\n1. 打开 PowerShell ，运行 `echo $profile`，会输出一个文件路径。创建这个文件。\n\n2. 打开刚创建的文件，按以下格式设置多条别名：\n\n   ```powershell\n   function 别名 { 需要替代的命令，可以包含空格 }\n   ```\n\n3. 以管理员身份打开 PowerShell，执行 `Set-ExecutionPolicy RemoteSigned`。\n\n4. 重新启动 PowerShell ，应该已经完成了。","tags":["Windows","PowerShell"],"categories":["TECHNOLOGY"]},{"title":"20190523 随想","url":"/2019/05/23/thinking-in-20190523/","content":"\n\n\n四年之前，我高二的时候，一天傍晚放学，我跟当时教我化学的6老师（代称），开玩笑式地起了争执。6老师人很好，我们都跟他称兄道弟的。起因是，6老师向我们秀他新买的球鞋，很酷，是某个日本名牌。当时的我笑道：“日货啊，不能穿啊！”（当时的学生中间，这样的思想氛围还比较浓）。\n\n6老师立刻就反驳了：“为什么不能穿？”“东西好用，为什么不买？”当时我还有一些现在看来可笑的话，都被6老师“讽刺”了一番。我仍不服气，要争辩，6老师对我说：“很多你看到的事情，并不一定是真的……是被修饰过的……”\n\n我大致听懂了他的意思，但进一步问：“既然各种历史、事情都会被修饰，那么我们怎么才能知晓真实的情况呢？毕竟，不管哪一方说出的话，都有可能因为要符合其利益而将其修饰。”\n\n6老师说：“要思考，学会思考！”\n\n……\n\n我当时不以为然，思考？怎么思考嘛！\n\n后来我慢慢知道了，直到现在，我都很认可6老师，我觉得他很对。\n\n不管是什么，都会被人修饰，只有自然科学不能被修饰。就像，不管是谁，也不能让人相信 1+1=3，这是数学。物理、化学等其他自然科学的原理，乃至经济学原理，都不能被修饰。\n\n也许思考，就是要从自然科学立足吧？\n\n就比如从数学逻辑里延申——任何事情都是有逻辑的，都应有前因后果。当一件事发生时，也许周围人都会讲述“这件事发生了”，可却鲜有人追溯，这件事为什么发生？当全社会都在为这件事痴狂，乃至要将这件事作为“原因”，采取行动（产生新的“结果”）时，还是没有多少人去关注这件事的根本原因、历史原因、直接原因之间的关系。然后，绝大多数人都被鼓动起来了，就像四年前的我，去笑6老师……\n\n观察身边的各种变化，各种自然环境社会环境的变化，各种让人开心或难受或鄙夷的事，去思考，“为什么会这样？”\n\n也许这就是所谓“理性”？\n\n我不知道几百年前欧洲启蒙运动提倡的“理性”是否就是为了解决这样的问题。\n\n“要思考，学会思考！”\n","tags":["高中","随想"],"categories":["LIVES"]},{"title":"免费使用 nuaa.portal 上网","url":"/2019/01/13/Use-the-Internet-via-nuaa-portal-for-free/","content":"\n\n## 背景\n\n学校赐予我的 nuaa.portal 账号在一个月之前就到期了，这一个月内，虽然对我的生活没有太大的影响，但是还是感受到了某些不便（总觉得某些东西有了更好，没有却不能拉倒）。前些天跟创新区内的同学讨论了本校的ipv6部署情况，突然就有兴致来折腾一下。\n\n没错，免费上网还是有可能的。\n\n## 前提概要\n\n- 学校的 nuaa.portal 公共无线网，Windows 电脑只要连接上，就能获取一个 ipv4 内网地址和一个 ipv6 地址。如果没有在指定 Web 页面上认证，则无法使用 ipv4 连接互联网。但是可以通过 ipv6 联网。\n- 学校默认不分配 ipv6 的 DNS 服务器。\n- 学校教学办公区有线宽带，经直接拨号，同样可以获得一个 ipv4 内网地址和一个 ipv6 地址，均可以访问互联网。\n\n## 一步步的尝试\n\n### 直接用 ipv6 上提供 ipv6 服务的网站\n\n既然可以从 nuaa.portal 获取可以访问互联网的 ipv6 地址，那么最简单的思路，就是直接使用这条通道。但是，由于学校没有 ipv6 的 DNS（认证后，如果访问 ipv6 站点，其实仍然是使用 ipv4 的 DNS 服务器），故必须配置 ipv6 的 DNS。这一点很简单，直接修改 DNS 服务器即可：\n\n![](https://img.vvzero.com/blog/Use-the-Internet-via-nuaa-portal-for-free/2.png)\n\n这里推荐两个 ipv6 的 DNS 服务器，一个是 Google 家的，一个是清华大学 TUNA 协会的：\n\n- `2001:4860:4860::8888`\n- `2001:da8::666`\n\n然后，实测就可以访问提供 ipv6 服务的网站啦！\n\n比如：\n\n- google.com.hk\n- www.youtube.com\n- ipv6.baidu.com\n- ipv6.mirrors.ustc.edu.cn\n\n### 使用 ipv6 代理服务器进行无限制的互联网访问\n\n上一条方法虽然简单，但是只能访问提供 ipv6 的网站，然而现在国内乃至国际上大多数网站并没有提供 ipv6 服务，至少，你目前还不能登微信。\n\n但是，如果有一个同时具有有 ipv6 和 ipv4 的代理服务器，不就一切都解决了吗？把本地的所有流量都通过 ipv6 转发至代理服务器，然后就可以访问任意站点了！\n\n这里，我借用了 Shadowsocks，配置了一台有 ipv6 和 ipv4 的服务器，然后本地开启全局代理，实际就可以访问任意站点了。\n\n使用这个方法，本地 DNS 甚至都不需要配置。\n\n### 终极（硬核）蹭网方案\n\n还记得一开始我说过，教学办公区也能获得 ipv6 地址吗？\n\n对，我就是想用远程桌面！\n\n![](https://img.vvzero.com/blog/Use-the-Internet-via-nuaa-portal-for-free/1.jpg)\n\n我在学校创新区日常开着一台机器，拨号联网，（性能还不错）。\n\nemmm，其实这个方法真的很硬核很有效，而且，由于 nuaa.portal 和教学办公区实际属于同一个大的内网环境，学校的路由器还不错，实测 ping 延迟只有 2ms，完全满足了日常电脑使用（除了不能使用显卡玩游戏什么的）。微软家的远程桌面还是很强大的！\n\n## 最后\n\n我其实还是想再来一年的免费 nuaa.portal 账号的。","tags":["NUAA","ipv6"],"categories":["TECHNOLOGY"]},{"title":"长令记事：暑期读书分享","url":"/2018/12/03/channy-s-summer-holiday-reading/","content":"\n\n\n## 现在还谈暑假？\n\n是的吧，主要是玲玲的暑期读书分享前几天才发出来嘛~\n\n我常常说，我的知识深度不行，但是知识广度还可以，但有的时候，被问起文学、现代文化等领域的时候，总是很惭愧，因为我实在没有读过几本书。要是现在有人问我“你最喜欢的一本文学小说是什么”，我恐怕脑中首先闪过的还是让人贻笑大方的《西游记》等。\n\n好在玲玲完全填补了我的空缺……\n\n## 长令的暑期读书分享\n\n我想了想，还是不要把她发在公众号的文章copy&paste了，我的排版也不好看。就直接上链接吧：\n\n[暑期读书分享（上）](https://mp.weixin.qq.com/s?__biz=MzU4ODQ4OTcyOQ==&mid=2247483830&idx=1&sn=ff12dec368c05d5ce8d14286cda9316a&chksm=fddab4d8caad3dce3c0d2b65d2042fb8160ac9f507895dce907106db240d175ddbd02fe5a394&mpshare=1&scene=1&srcid=12033TBv55Hra7Uoozvqe8AL#rd)\n\n[暑期读书分享（下）](https://mp.weixin.qq.com/s?__biz=MzU4ODQ4OTcyOQ==&mid=2247483836&idx=1&sn=8bb8d5aa143d0cf3eed20c17b4b84d98&chksm=fddab4d2caad3dc439156cd41a2281e9a825e441d3a4fb368a069ac99aec298baa03a1d1d48e&mpshare=1&scene=1&srcid=12034PasL8Rzdu5maek0CvVm#rd)\n\n## 公众号\n\n![\"长令记事\"公众号二维码](https://source.vvzero.com/channy_wechat_official_account.jpg)","tags":["长令记事"],"categories":["CHANNY"]},{"title":"使用Nginx、nextcloud以及h5ai搭建下载平台","url":"/2018/11/22/build-download-platform-with-nginx-nextcloud-and-h5ai/","content":"\n\n> __读懂这篇文章，你需要：__\n>\n> 1. 有过一定的Nginx或类似产品的维护经验。\n> 2. 使用过nextcloud或类似的私有网盘系统。如果没有，可以通过阅读下方的文档了解。\n> 3. 了解并使用过至少一个云服务供应商的CDN服务。\n\n> __相关文档：__\n>\n> [Nginx](http://nginx.org/)\n>\n> [nextcloud](https://nextcloud.com/)\n>\n> [阿里云CDN](https://www.alibabacloud.com/zh/product/cdn)\n>\n> [h5ai](https://larsjung.de/h5ai/)\n>\n> __部署后的站点展示：__\n>\n> [VVDownloads](https://downloads.vvzero.com)\n\n## 背景\n\n原先的下载站真的硬核到难以直视。由于我原先直接通过在Hexo上面添加链接以提供下载。这样不仅看起来丑陋，而且维护很不方便。\n\n前一段时间接触到了h5ai这个好东西，之前也一直在维护自己的nextcloud，于是乎，想要改造下载站的欲望一发不可收拾。\n\n## 需求分析\n\n1. 可以使用已有的CDN服务对所提供的下载内容进行加速；\n2. 下载内容的维护应当很方便，并且可以在不同的终端进行；\n3. 下载页面应当保持美观。\n\n## 关键思路\n\n把nextcloud的数据存储路径设置为h5ai的根目录。\n\n## 具体操作\n\n### 初次尝试\n\n我一开始尝试使用CDN对nextcloud直接加速，但是之后发现，这是一件极其愚蠢的事。因为nextcloud使用的是动态页面，对这样的页面进行加速可谓是难上加难。即使我只对公开分享的页面进行加速也不行。实测：使用CDN，哪怕全站都设置成立即回源，也会出现无法上传文件的情况。\n\n### 搭建nextcloud\n\n这一点我不再赘述，因为资料很多，或者直接点击我上面的链接看官方文档。\n\n### 配置h5ai\n\nh5ai这一web index展示系统的部署相当简单，只要将下载的_h5ai目录放在所需要展示的目录下即可，这个目录可以是你的nextcloud个人文件存储根目录（一般为`<path to nextcloud>/data/<your user name>/files`），也可以是其一个子目录：\n\n<img src=\"https://img.vvzero.com/blog/build-download-platform-with-nginx-nextcloud-and-h5ai/1.JPG\" style=\"zoom:50%;\" />\n\n### 配置Nginx\n\n按照以下的套路来即可，注意index后面要加上`/_h5ai/public/index.php`\n\n```nginx\nserver {\n        listen 443 ssl http2;\n\n        server_name downloads.vvzero.com;\n\n        ssl on;\n        ssl_certificate ???; #填写证书地址\n        ssl_certificate_key ???; #填写证书地址\n\n        root ???;\n        index index.html index.php /_h5ai/public/index.php; # 关键\n\n        add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n    \n    \t# 由于h5ai需要php，所以请安装php-fpm\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/run/php/php7.1-fpm.sock;\n        }\n}\n\nserver {\n        listen 80;\n\n        server_name downloads.vvzero.com;\n\n        rewrite ^(.*) https://downloads.vvzero.com$1 permanent;\n}\n```\n\n### 配置CDN\n\n这里以阿里云为例\n\n- 业务类型暂时先选“图片小文件”，因为自己分享的图片比较多。\n\n- 缓存过期时间：默认所有直接回源（emmm我实在没想知道哪些跟动态页面有关），权值为1；然后`jpg, png, bmp, zip, rar, 7z, exe, msi, doc, docx, ppt, pptx, xls, xlsx, pdf, apk, rmvb, rm, avi, mov, mp3, mp4, flac, wav, tar, gz, iso, bin, js, css, txt, svg, ico, psd, md`这些，是我整理的一部分常用文件扩展名，设置成30天缓存，权值为10。\n- 开启https并强制跳转\n- 开启HTTP2\n- 配置一下cname\n- ok\n\n## 后记\n\n现在看着舒服多了。\n\n[VVDownloads](https://downloads.vvzero.com)\n\n![](https://img.vvzero.com/blog/build-download-platform-with-nginx-nextcloud-and-h5ai/2.JPG)\n\n然后还发现了，其实，这样的话，我可以在我对nextcloud上开一个公共账户，这样就可以让我的小伙伴们，使用我这套系统，假装有一个CDN啦！毕竟备案还是一件麻烦的事情呢。\n","tags":["Nginx","nextcloud","h5ai"],"categories":["TECHNOLOGY"]},{"title":"像我这样的人","url":"/2018/10/04/people-like-me/","content":"\n\n\n> 作者：长歌如令\n\n> 标题与毛不易的歌曲重名，于是去听了一下毛不易的这首歌，挺悲伤。\n>\n> 但是我不是一个悲伤的人。\n\n## 一、性格\n\n其实还是偏内向，但是又有话痨属性，所以我有时会自言自语，跟朋友在一起的时候也会说个不停。\n\n## 二、 爱好\n\n这个真不是一个词就能概括的，我最喜欢的是有空闲的时间去做自己想做的事情，至于我想做的事情是什么，要根据当天的心情，可能只是躺着玩手机，刷视频，可能是看书，可能是戴着耳机出去走走，也可能是出去买菜做饭，然后自己全部吃完。当然这些都是我在一个人的时候爱做的事情，其实我也挺喜欢一个人呆着的，不要问我怎样快乐的独处，因为独处本身对我来说就是快乐的。\n\n## 三、理想\n\n能经济独立，有闲钱可以出去旅游。\n\n## 四、特长\n\n说真的，没有……\n\n可能刚接触我的人会觉得我很奇怪，比如有时会自言自语，然后笑点也很低，可能会突然就笑起来（这样写是不是会觉得我有点可怕），但是我觉得我还是挺好相处的吧。\n\n我觉得我是典型的做事三分钟热度，做事的动力是冲动，想到什么就会立刻去做什么。不管别人怎么看，只要我觉得是对的就会去做，比如我高三的时候坚持写日记，在别人刷题的时候，我在写日记，别人睡觉的时候，我在看书，我只是比较坚持自己想做的事情吧，其实像我这样的人应该也挺多的，之前会觉得别人无趣，但想想也许别人会觉得我很无趣，几乎别人喜欢的事情我都无感，不玩游戏，不追剧，不看小说，不追星，不管什么事情都不会特别喜欢，不会狂热。好像是挺无趣的，可是有趣千人千色，我觉得有趣就行。\n\n## 五、最后\n\n像我这样平凡的人，却也会自命不凡，实际上没什么不同，或者说每一个都是与众不同的，（我也不知道我在说些什么），anyway，我就是这样的人。\n\n**我想，大家都是像我这样吧，矛盾而又自在地活着，也许偶尔会自命不凡，但是深刻地知道没什么不凡，像我这样平凡的人。**\n\n![](https://img.vvzero.com/blog/people-like-me/1.png)","tags":["长令记事"],"categories":["CHANNY"]},{"title":"简易云监控服务器的搭建","url":"/2018/09/22/simple-hosts-monitor-system/","content":"\n\n\n## 背景\n\n我有很多台主机，公网、内网的都有，形式各异。有的时候，因为他人误操作、停电、被攻击，或者系统崩溃等事故，会导致主机无法正常运转。往常，我并不能在第一时间得知消息并及时采取措施。所以，我希望能够有一套系统来监控我的主机是否正常。\n\n市面上已经有这样的系统，但是我想了想觉得要实现我的需求并不是很困难，所以就决定自己做一套这样的系统。\n\n## 需求分析\n\n在指定被监控的主机(slave)无法向云监控服务器(master)发送请求时，使用短信通知用户处理。\n\n## 基本原理\n\n- slave每隔1分钟向master发送指定格式请求，参数包括`name`和`token`，`name`用于表明自己的身份（主机名），且只当`token`正确时，master才接受请求。\n- master在接收到请求后，会将数据文件`data.json`中`name`键所对应的值赋为当前的timestamp（如果`name`键不存在则新建一个）。\n- master上每隔1分钟检查一次`data.json`中每一个`name`的键值，并比较当前timestamp与各键值的差值。当某`name`差值大于300（超过5分钟未更新）则调用短信发送的API，提醒用户该主机出现问题。\n\n## 代码示例\n\n### master中接收请求并修改数据文件的php脚本\n\n```php\n<?php\n$name = $_GET[\"name\"];\n$token = $_GET[\"token\"];\n\nif ($name==\"\" || $token!=\"example_token\")\n{\n    echo \"Error\";\n    exit(1);\n}\n\n$value = file_get_contents(\"data.json\");\n$data = json_decode($value,true);\n\n$data[$name]=time();\n\nfile_put_contents(\"data.json\",json_encode($data));\n\necho \"Get\";\n```\n\n### master中检查数据文件并发送短信的python脚本\n\n```python\n#! /usr/bin/python3\n\n# 每分钟运行一次，可在crontab中配置\n\nimport json\nimport time\nfrom qcloudsms_py import SmsSingleSender\nfrom qcloudsms_py.httpclient import HTTPError\nimport datetime\n\n# 腾讯云发短信的脚本，具体规则可参阅官方网站\ndef sendSMS(id):\n    appid = 1400000000\n    appkey = \"exampleappkey\"\n    phone_numbers = [\"18000000000\"]\n    template_id = 190000\n    sms_sign = \"vvzero\"\n\n    ssender = SmsSingleSender(appid, appkey)\n    params = [id]\n\n    try:\n        result = ssender.send_with_param(86, phone_numbers[0],\n        template_id, params, sign=sms_sign, extend=\"\", ext=\"\")\n    except HTTPError as e:\n        logFile.write(str(e)+\"\\n\")\n    except Exception as e:\n        logFile.write(str(e)+\"\\n\")\n\n    logFile.write(str(result)+\"\\n\")\n\n\n\nlogFile = open(\"hostsMonitor.log\",'a')\nlogFile.write(\"\\n\"+str(datetime.datetime.now())+\"\\n\")\n\ntry:\n    inputFile = open(\"/var/www/iot/checkAlive/data.json\",'r')\nexcept Exception as e:\n    logFile.write(str(e)+\"\\n\")\n\ntry:\n    data = json.load(inputFile)\nexcept Exception as e:\n    logFile.write(str(e)+\"\\n\")\n\ntry:\n    inputFile.close()\nexcept Exception as e:\n    logFile.write(str(e)+\"\\n\")\n\nfor host in data:\n    if (int(time.time()) - int(data[host]) >= 300) and (int(time.time()) - int(data[host]) <= 360): # 超过5分钟没有心跳包就发短信\n        try:\n            sendSMS(host)\n            logFile.write(\"Problem found in \"+host+\". SMS has been sent.\\n\")\n        except Exception as e:\n            logFile.write(str(e)+\"\\n\")\n\nlogFile.close()\n```\n\n### slave中的crontab配置，其他定时任务同理\n\n```sh\n*/1 * * * * curl -X GET 'https://monitor.example.com/?name=hostname&token=example_token'\n```\n\n## 实际效果\n\n这几天将这套系统运行了一下，没有什么问题。并且在我路由器掉线的时候及时提醒了我。\n\n![](https://img.vvzero.com/blog/simple-hosts-monitor-system/1.jpg)","tags":["php","python","云监控"],"categories":["TECHNOLOGY"]},{"title":"我的2018暑假","url":"/2018/09/01/summary-for-this-summer-vocation-2018/","content":"\n\n\n> 暑假开始之前，我信誓旦旦地跟玲玲说，我这个暑假要赚一万块钱。结果，现在看来，一分钱也没赚到，倒是“赔”进去了不少钱。\n\n## 前言\n\n开学一周的此时，回顾一下之前两个月，也不算太晚。\n\n## 暑假概况\n\n__时间：__要是从最后一门考试结束到第一次上课计算的话，应该是2018年7月5日至2018年9月4日，共61天。\n\n__地点：__这是我第一次在假期里面“几乎不回家”。大部分时间是在南京航空航天大学将军路校区一号楼里面摸鱼，中途回家一个星期*2，在第二次回家期间，陪爸妈去扬州玩了一天，又到无锡，陪表弟过了一宿。\n\n##  大事小事\n\n### 1. 做了一个宿舍电费查询的小项目\n\n优秀的苏瑞辅同学，上学期在跟我共事的时候，曾跟我提过他想要做一个电费查询的项目，具体就是识别用户输入，向学校电费查询官网模拟请求，然后把电费数据抠出来，返回给用户。因为了解自己宿舍的空调电费余量、防止夜间突然断电，也算是刚需。何况电费查询网站必须要校园内网环境，而且查询页面并不是很友好，所以，这样的项目能够给同学们带来便利，应该具有挺高的实用价值。\n\n但是，上学期由于种种原因，特别是查询网站的宿舍归类过于复杂，苏瑞辅并没有完成真正完成项目开发。我接过了他的想法，并在他提供的微信后端支持下，继续开发，目前完成了21-22栋、35-37栋的空调电费查询，并且后期将会跟据同学们的需求继续开发。\n\n在这一次的项目开发过程中，我收获颇丰：\n\n1. __了解__了后端开发的基本概念；\n2. __了解__了微信公众号开发的基本原理；\n3. __知晓__了python的正则表达式用法、requests库的简单应用；\n4. 给自己的微信公众号涨了一点粉。\n\n### 2. 制作了一个恋爱打卡的小站点\n\n优秀的苏瑞辅同学，在暑期喜得一女友。我受不了他成天在我耳边念叨他的女票，于是自己也想办法秀自己一把。我和我的玲玲以前都是用“情侣空间”APP天天打卡，但是这个APP事实上挺臃肿，我们只需要“打卡”“记录恋爱天数”这两个功能，所以，不如就自己做一个。\n\n我自学了前端的一些基本知识，欣赏了周围几个大佬的个人站点，强化了后端的一些概念，在10天左右的学习+实践后，我成功做了一个满足了以上两个需求的网页。玲玲也挺喜欢的，我们早就卸载了“情侣空间”APP，现在都在我做的页面上打卡。\n\n在本次项目开发过程中，我：\n\n1. __了解__了前端开发的基本概念；\n2. __学会了简单应用__bootstrap框架；\n\n### 3. 申请了很多云服务器\n\n我也许有被迫害妄想症，总怕自己与世界的联系会断开。所以，我在周围大佬们的推荐下，尝试了很多的云主机提供商的服务。很多都有一年的免费，就算收费也挺便宜，何况很多时候都有学生优惠。\n\n所以，我在阿里云、腾讯云、AWS、vultr等各大供应商，薅了一波羊毛，获得了屈指难数的云服务器和公网IP。总算给自己带来了一点安全感。\n\n当然，这样的行为还是被周围的大佬们嘲笑了，其实吧，也真的没这个必要。\n\n### 4. 搭建了自己的即时通讯平台和个人网盘\n\n同上，被迫害妄想症，总想什么都有自己的。\n\n所以，咨询了赵祯真学长，他推荐我使用RocketChat这一款开源的即时通讯平台；咨询了优秀的苏瑞辅同学，他推荐我使用NextCloud这一款开源网盘系统。\n\n我经过两三天的配置，基本完成了这两个系统的搭建，还好能用。我委屈了一下玲玲（毕竟我没有用户，只能找她），让我们每天互发日记的时候，都要在我搭建的通讯平台传输，她居然欣然同意了。我很感动，我唯一的用户。\n\n### 5. 又一次感受了扬州的美\n\n应该是我第三次去扬州了，扬州真的是个天堂。我去的地方不多，但是能让我真正感动的城市，只有扬州一个，每一次去都是一样的感觉。\n\n扬州没有地铁，但是公交的便利程度丝毫不亚于地铁，如履平地。\n\n瘦西湖景区是我见过的最舒心的景区，没有之一。\n\n扬州人，让我感觉，说话好像都带着瘦西湖的水，很温和。\n\n哎，回来之后就爱上了《扬州姑娘》这首歌。\n\n### 6. 接触了一个上市公司\n\n我在学生IT创新创业区里担任物联网区部长一职。这个暑假，老师让我们和一个校企合作的公司打打交道。我是秉着赚钱的目的去的，奈何自己的水平太菜，并不能给此公司带来价值，最终也就不了了之。\n\n跟他们的技术总监（荷兰人）有过两次接触，一次是他们要做一个小API，我当时正在学习后端PHP，就顺手练习了一下，帮他们做了；第二次他要帮忙做一个摄像头盲区计算及最优解确定的问题，我实在是算法不精，无法胜任。\n\n不过，至少也练习了英语口语。\n\n## 暑假里，那些人那些事\n\n__我的玲玲：__真名张玲，是我的女朋友。这一个暑假，我们没有吵过架。而且，度过了第一个在一起的七夕。\n\n__优秀的苏瑞辅同学：__谢谢他给我技术上和思维上的指导。以及，祝他和他的单单愉快！\n\n__父母：__衣食父母。他们每年要在我这里投资4w+，这是风险最高的天使投资。\n\n__张世博同学：__一位在暑假里参加电赛的大佬，他在的日子跟他玩得很愉快。以后如果我想赚钱的话，应该还是会找他的。\n\n__赵祯真学长：__在创新区里认识的一位大佬。暑假前期和后期，他就坐在我旁边，给了我很多技术上的指导。另外，谢谢他的显示器。\n\n__创新区的老师们：__假期的一切硬件资源都是学校提供的，老师们给了我很多的支持。\n\n__工程训练中心的葛旺老师：__刚放暑假的时候，我和张世博帮他搬迁工盟的实验室。另外，得老师厚爱，现在担任工盟的主负责人。\n\n__公寓管理中心的郑老师：__谢谢他给我查电费项目的支持，并帮我在公寓楼内宣传。\n\n__表弟朱国盛：__很久不见了，上次去无锡，也就一天时间。不过，他陪我吃鸡的几个小时，真的好刺激。\n\n__刘建廷老师、兄弟顾浩东、兄弟张子逸：__暑假里见过的高中哥们，也就他们仨了。听老刘讲了很久的人生经验，还被请去喝茶，妙。\n\n__暑假里，还接触过很多人，就不一一赘述了。所有人都在影响着我，也许我也会有自己的影响力吧。__\n\n## 今天是\n\n2018年9月8日。\n\n开学一周。\n\n> 也许我真的一分钱都没赚到，赔进去了很多，但是，我想我这个暑假学到的，见识到的，遇到的，也许不止1w+吧？","tags":["心得","暑假"],"categories":["LIVES"]},{"title":"近日浅尝网络开发的一点心得","url":"/2018/07/26/experience-gained-as-a-developer-these-day/","content":"\n\n\n> 我不是CS科班的学生，此次也并没有接触完整的、系统的网络编程开发。在题目中用“网络开发”显得有点大，但是我也很难用一个词概括我做了什么，就用这个词代替吧。\n\n## 我做了什么\n\n1. 写了一个抠网页的脚本。我用python模拟访问电费查询网站，把电费数据抠了出来。\n2. 做了一个微信公众号的后端。在[苏瑞辅大佬](https://www.suruifu.com/)的指导下，使用php完成了一个微信公众号后端的开发，可实现调用python脚本以及自动转发微信回复至个人邮箱。\n\n## 几点心得\n\n*CS大佬们就不要看了，我是讲给网络编程初学者以及非科班爱好者的[/滑稽]*\n\n### 1. 学会查找你想要的资料\n\n这是我觉得最重要的能力，没有之一。一个人所能记住的知识是有限的，哪怕只去学一种语言，也不可能放肆地说自己“精通”。但是，网络是无限的。比如，某个不常用函数的定义，我们完全没有必要记住。只要能用好各类搜索引擎，快速准确地找到它，就够了。另外，我觉得，能够自己获取的信息，就尽量不要问别人，这是礼仪。\n\n我从来没有接触过php，但是我经历了以下的步骤：\n\n1. 搜索“php快速入门”，花15分钟了解基本语法，例如，变量名前要加'$'\n2. 大佬给了我一个类库（此处向苏瑞辅致♂敬），我大体看了下语言结构\n3. 跟据自己的需求，在php官网查找相应函数调用方式\n4. Debug的时候遇到错误提示，Google一下，一般在StackOverflow上就能找到对应解决方案\n\n所以，我可能根本没有入门php，但是我已经可以完成一些简单的后端操作了。\n\n### 2. 英文水平很重要\n\n这是接着第1点的。\n\n毕竟，国内的计算机水平距离国际先进水平还有相当大的差距，汉化的资料总有不足。要想获取一手的开发资料，英文水平当然很重要。\n\n### 3. 万物皆I/O\n\n（此处再次向苏瑞辅致♂敬，就用原话了。）\n\n这是一种思维方式，只可意会不可言传。\n\n举些例子：\n\n1. 调用函数，都是按类型传参（Input），然后获取一个返回值（Output）\n2. 我们浏览网页，都是先使用HTTP GET或POST一个请求（Input），然后就可以看到服务器传回的网页（Output）\n3. 硬件开发中，假如我要使用一个频率-电压转换集成块，一定是输入一个频率（Input），然后获得一个电压值（Output）\n\n### 4. 有一个大佬带着能让你避开很多坑\n\n大佬一定是比你聪明的，或者比你起步早的，他能看到的，你不一定能看到。大佬也许会不停地嘲讽你，但是听着就好了，毕竟能学到东西，特别是能学到学习方法，这就够了。\n\n当然，有一个能互相学习的大佬，那更是万幸。\n\n此处又一次向苏瑞辅致♂敬。[/手动滑稽]\n\n## 总结\n\n好啦，没什么好总结的，这几天挺开心。","tags":["rvfu98","php","心得"],"categories":["TECHNOLOGY"]},{"title":"南京航空航天大学宿舍电费查询项目开发","url":"/2018/07/22/nuaa-ElectriFee-beta/","content":"\n\n\n## 背景\n\n感觉自己应该做点什么……顺便学点什么……\n\n于是，一边学习各种语言，一边想完成一个小项目：宿舍电费查询。\n\n我们学校查电费是个很坑爹的网站，只能在校内访问，而且是.NET aspx页面，各种分类极其复杂，毫无规律性。@苏瑞辅同之前尝试做过，但是放弃了。我这次也没想要完成全校的电费查询，暂时只是想完成怡园21栋宿舍空调电费查询。\n\n## 项目地址\n\n项目已上传至GitHub，望大家能一同开发。\n\n[项目地址](https://github.com/NUAA-Open-Source/nuaa-ElectriFee)\n\n## 开发要点\n\n- 由python开发的电费查询脚本，模拟访问学校页面，抠出电费输出\n- 由php开发的微信公众号后端，向查询脚本传递用户输入并获取电费回传至微信\n- 在校内设置代理，以保证以校园网访问\n\n## 项目现状\n\n已经推出beta版，部署在本人公众号内。\n\n扫描页面下方公众号二维码即可体验。\n\n## 特别鸣谢\n\n感谢[@苏瑞辅](https://www.rvfu98.com/)提供大量开发支持！","tags":["wechat","python"],"categories":["TECHNOLOGY"]},{"title":"Google Play出现DF-DFERH-01错误的分析与修复","url":"/2018/07/15/inspect-mix2s-google-play-error-DF-DFERH-01/","content":"\n\n`#define 纸飞机 不可描述之神器`\n\n## 背景\n\n换了陪伴了两年的MI5，换上了MIX2s。嗯……可是换机的数据迁移和初始化实在是工程量巨大。\n\n当然，没有Google全家桶的安卓机是不完美的。\n\n于是问题来了。\n\n## 错误描述\n\n与MI5不同的是，MIX2s自带谷歌框架。\n\n<img src=\"https://img.vvzero.com/blog/inspect-mix2s-google-play-error-DF-DFERH-01/1.png\" style=\"zoom: 25%;\" />\n\n但是出厂并不标配Google Play，需要在应用商店里安装。（当然，小米官方是没有的，需要拉到最下面“在百度中搜索”或“在豌豆荚中搜索”）。\n\n首次登陆的时候，并不会遇到什么问题（前提是配置好纸飞机）。但是，在重新启动Google Play，或者重启手机后，再次使用均会出现“DF-DFERH-01”的错误。\n\n<img src=\"https://img.vvzero.com/blog/inspect-mix2s-google-play-error-DF-DFERH-01/2.png\" style=\"zoom:25%;\" />\n\n只有清除Google Play应用数据后，才能恢复原状。但是，一旦重启应用或机器，错误就会重现。\n\n## 错误分析\n\n错误信息是`Error retrieving information from server`，即从服务器获取信息失败。但是，显然我的纸飞机没有问题啊（别问我怎么知道的）。依靠错误代码在网络上搜索了半天，并不能找到有效的解决方法，清数据、重新登陆谷歌账号，都没有用。但是谷歌的其他服务可以使用（账户同步等）。甚是奇怪。\n\n最终，还是本国的论坛更加了解国情。在MIUI论坛中，我找到了相关信息。\n\n在MI5中，由于系统并不自带谷歌框架，所以我安装的是原生的谷歌服务，连接谷歌服务的域名均为`.com`后缀。但是，小米自带的谷歌服务，域名存在`.cn`后缀，问题就在于此。\n\n使用抓包工具对Google Play的数据进行分析，发现了以下数据包：\n\n![](https://img.vvzero.com/blog/inspect-mix2s-google-play-error-DF-DFERH-01/6.jpg)\n\n小米自带的谷歌服务，在Google Play启动的时候，会向`services.googleapis.cn`获取数据，而正常情况下（国际版），应是`services.googleapis.com`。在国内，由于众所周知的原因，`services.googleapis.cn`并不会指向谷歌服务器，而是指向了北京某公司的服务器。\n\n以下是使用国内两台主机获取的host数据：\n\n```bash\n$ host services.googleapis.cn\nservices.googleapis.cn has address 203.208.39.239\nservices.googleapis.cn has address 203.208.39.247\nservices.googleapis.cn has address 203.208.39.255\nservices.googleapis.cn has address 203.208.39.248\nservices.googleapis.cn has IPv6 address 2401:3800:4002:805::100f\n```\n\n```bash\n$ host services.googleapis.cn\nservices.googleapis.cn has address 203.208.43.95\nservices.googleapis.cn has address 203.208.43.79\nservices.googleapis.cn has address 203.208.43.87\nservices.googleapis.cn has address 203.208.43.88\nservices.googleapis.cn has IPv6 address 2401:3800:4001:14::1018\n```\n\n查询这类ip地址的归属地，发现均归属于北京：\n\n<img src=\"https://img.vvzero.com/blog/inspect-mix2s-google-play-error-DF-DFERH-01/3.jpg\" style=\"zoom:67%;\" />\n\n> 数据来源：ip138.com\n\n而使用国外的主机获取host数据，就截然不同。以下是使用新加坡以及加州的服务器获取的数据：\n\n```bash\n$ host services.googleapis.cn\nservices.googleapis.cn has address 74.125.24.94\nservices.googleapis.cn has IPv6 address 2404:6800:4003:c03::5e\n```\n\n```bash\n$ host services.googleapis.cn\nservices.googleapis.cn has address 172.217.0.35\nservices.googleapis.cn has IPv6 address 2607:f8b0:4005:802::2003\n```\n\n查询ip归属，均属于谷歌公司：\n\n<img src=\"https://img.vvzero.com/blog/inspect-mix2s-google-play-error-DF-DFERH-01/4.jpg\" style=\"zoom:67%;\" />\n\n<img src=\"https://img.vvzero.com/blog/inspect-mix2s-google-play-error-DF-DFERH-01/5.jpg\" style=\"zoom:67%;\" />\n\n>  数据来源：ip138.com\n\n__由此，只要将`services.googleapis.cn`换成国外的DNS服务器进行解析，即可。__\n\n## 修复方案 \n\n最简单的方法就是在纸飞机中操作。\n\n- 如果想要省事，可以直接开启`DNS Forwarding`，即把所有的DNS请求发送到墙外进行处理。但是这样会导致访问国内的一些服务出现延迟。\n- 所以，最好的方法还是把路由方式改成自定义规则，先导入GFW List，再添加如下一条规则：`googleapis.cn`，并设定为“域名及其所有子域名”。\n\n\n\n__最后，祝大家在互联网中，学习愉快！__\n\n","tags":["小米","Google"],"categories":["TECHNOLOGY"]},{"title":"用Arduino制作示波器之初尝试","url":"/2018/06/21/oscilloscope-by-arduino-1st-trial/","content":"\n\n\n## 背景\n\n这学期快要结束了，要上交一个模拟电子技术基础的课程设计。调试的过程中需要用到示波器，但我又懒得去电工实验室借用示波器。在@张世博 的提醒下，尝试使用手头闲置已久的Arduino Uno做一个示波器。\n\n## 基本原理\n\n信号源 -> Arduino 电压模拟输入 -> 串口输出 -> PC端串口工具显示波形\n\n## 实验器材及软件\n\n- 恒压源\n\n- 自己做的信号发生器（待测试）\n\n  ![](https://img.vvzero.com/blog/oscilloscope-by-arduino-1st-trial/1.jpg)\n\n- Arduino Uno\n\n  ![](https://img.vvzero.com/blog/oscilloscope-by-arduino-1st-trial/2.jpg)\n\n- Serial Debug Assistant （串口调试助手。我在Windows应用商店下载的UWP版，一个国人开发的软件，如果需要绘制图形，必须购买pro版。也不是很贵，几十块钱的样子）\n\n## 测试视频\n\n<video src='https://img.vvzero.com/blog/oscilloscope-by-arduino-1st-trial/3.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n## 测试说明\n\n- 信号发生器理论上产生三角波信号\n\n- Arduino的主要代码如下：\n\n  ```c\n  while (1)\n  {\n      Serial.print(\"Valtage = \"); //此处配合Serial Debug Assistant的图形绘制接口\n      Serial.println(analogRead(PIN)*5.0/1024.0); //换算成伏特\n      delay(0.1);\n  }\n  ```\n\n- 由于可能产生超过5V或低于0V的电压，故我将Arduino的GND接至待测电路的-12V电源，并将信号输出使用4个100kΩ电阻分压，测量输出电压1/4的量。\n\n- 三角波的频率可调，实际上，只有在把调试软件的时间分度和三角波周期调整至同一数量级才可显示出清晰波形。\n\n## 后记\n\nemmm，怎么说呢，这个示波器其实没什么卵用，不能很方便地调幅调频，而且对于高频信号完全无法胜任（测试2000Hz已经很吃力了）。\n\n乖乖去实验室吧。","tags":["Arduino","serial"],"categories":["TECHNOLOGY"]},{"title":"My 20th birthday","url":"/2018/05/27/my-20th-birthday/","content":"\n\n\n\n\n这属于我的20岁生日。\n\nAll of these belong to my 20th birthday.\n\n他妈的都奔3了。\n\n![](https://img.vvzero.com/blog/my-20th-birthday/1.png)\n\n> 好久不写技术文章了，怕是要憋一个大招。","tags":["birthday"],"categories":["LIVES"]},{"title":"你还记得你的梦想吗？","url":"/2018/05/19/Channy-2018-5-19/","content":"\n\n\n> 那时我们有梦，关于文学，关于爱情，关于穿越世界的旅行，如今我们深夜饮酒，杯子碰到一起，都是梦破碎的声音。                    \n>\n> ——北岛\n\n第一次读到北岛的这首诗是在高三的时候，应该是在《青年文摘》或是《读者》的某个角落里，跟很多人一样，我被这短短的几句话触动了。\n\n记得从小学刚学着写作文的时候起，我们就会被要求写这样的作文——《我的梦想》。如果我没记错的话，我的第一个梦想应该是当一名宇航员，小学四年级的时候学到一篇课文，《神州五号》，那时候看着课文中描写的杨利伟从太空中回来的画面，非常向往，走在放学回家的路上，抬头看着天空，就开始想，等我长大以后，我也要做一名宇航员，然后从太空中地球是什么样，最好能驾驶着飞船停在我家门口。等上到五六年级的时候，我发现宇航员的身体素质要求太高了，而我的身体素质根本不行，宇航员的梦想就泡汤了。后来，看TVB的一些警匪片，剧中的Madam都很帅气，于是，我又想着去当刑警多好啊，惩恶扬善。但，还是身体素质的问题，刑警的梦又只是一个梦。再后来，读到高中的时候吧，就爱上了文字，想从事与文字相关的工作，大概是随着年龄的增长，想法都成熟了许多呢，不再那么天马行空。\n\n![](https://img.vvzero.com/blog/Channy-2018-5-19/1.jpg)\n\n高考选志愿时，综合考虑，选择了新闻学，当时家人是极力反对的，他们总觉得，女孩子做个老师多好，但，我不愿意。 \n\n![](https://img.vvzero.com/blog/Channy-2018-5-19/2.jpg)\n\n大一第一次开年级会时，辅导员问我们为什么选择这个专业，然后第一节课，几乎所有的老师都问了我们同样的问题。有一些同学是被调剂的，但大多数同学都是自愿选择这个专业的。\n\n现在已经是大二的第二个学期，不管是从老师口中听到的，还是我们自己所了解到的，我们都知道了新闻这个行业跟我们理想中的新闻业差距太大了，身在体制之中，有些时候，我们别无选择。寒暑假回去，遇到一些亲戚邻居，他们问我学的什么专业，我说是新闻，然后他们又问，毕业后做什么工作，记者吗？我语塞，不知道该说什么，是还是不是呢？只能笑一笑带过。对于未来，我真的不能，也不敢保证啊。\n\n![](https://img.vvzero.com/blog/Channy-2018-5-19/3.jpg)","tags":["长令记事"],"categories":["CHANNY"]},{"title":"记几点Windows 10家庭基础版和专业版的区别","url":"/2018/05/12/windows-difference-between-pro-and-home/","content":"\n\n\n## 背景\n\n把原来的游戏本卖了，换了一个小米笔记本air 13.3寸，兴奋的其中一点是用上了正版的系统和office套件。但是，问题很快就显现出来了，正版的系统是家庭基础版，好像并不是很适合我。\n\n## 记录几点区别\n\n我在此记录下严重影响到我使用的几点：\n\n1. 家庭版不能使用远程桌面。这一点就很致命，因为我的移动设备很多，常常需要使用远程桌面访问我的电脑。TeamViewer又不太好用，所以，没有远程桌面是不行的。\n2. 家庭版不能设置多个语言包。随机赠送的是中文家庭版，但是由于开发需要，我需要英文的环境，然而，由于默认是中文的语言包，所以就不能再安装英文的语言包了，也无法更改Windows默认显示语言。\n3. 家庭版的权限设置有限制。在共享文件的时候，设置比较麻烦。（我在的工作区经常使用局域网共享）\n4. 家庭版没有hyper-V，所以只能用VMware了……\n\n## 总结\n\n由于以上的问题……受不了……只能用不可描述的方式升级到专业版了。\n\n仅仅是记录一下……","tags":["Windows"],"categories":["TECHNOLOGY"]},{"title":"Windows 10 1803 自带OpenSSH简述","url":"/2018/05/10/about-openssh-on-windows/","content":"\n\n## 背景\n\n近期更新了Windows 10 1803，结果惊奇地发现，Windows居然自带OpenSSH，而且在这个版本里面默认启用了！于是尝试了一番，现在写点记录。\n\n## 可用功能\n\nOpenSSH可执行文件都在`C:\\Windows\\System32\\OpenSSH`中，如下图所示：\n\n![](https://img.vvzero.com/blog/about-openssh-on-windows/1.PNG)\n\n与Linux中的OpenSSH并无大异。但是，我找了很久也没看到它的配置文件在哪。然后找到了国外友人在MSDN博客上的介绍：[点此查看](https://blogs.msdn.microsoft.com/powershell/2017/12/15/using-the-openssh-beta-in-windows-10-fall-creators-update-and-windows-server-1709/)\n\n## 使用小记\n\n在cmder中正常使用没有问题，但是一开始我想加入自己的私钥，由于没有找到配置文件，只能依照上面的博客，进行如下操作：\n\n1. 打开PowerShell（管理员）\n2. 执行指令`Start-Service ssh-agent`\n3. 执行指令`Get-Service ssh-agent`\n4. 添加个人密钥，例如：`ssh-add \"C:\\Users\\name\\.ssh\\key`\n\n然后就可以使用这个密钥直接登陆了。\n\n但是，实际使用中发现，关闭这个PowerShell窗口后，刚添加的密钥就不起作用了，需要再次添加。不是很方便。我在查看了一点文档后也没有找到解决方法，所以，只能把密钥名称和路径改成默认的：\n\n`C:\\Users\\name\\.ssh\\id_rsa`\n\n就这样。","tags":["Windows","ssh"],"categories":["TECHNOLOGY"]},{"title":"使用Nginx服务器搭建CDN节点","url":"/2018/04/24/build-a-cdn-with-nginx/","content":"\n\n## 背景\n\n杞人忧天的我，总感觉自己的博客搭建在国内主机上，同时使用的是国内的CDN加速服务，如果有外国友人或者经常坐飞机出去的同志，可能访问会有点困难。（真的是杞人忧天）。于是，我想到了自己搭建一个境外的CDN服务器。\n\n## 工具准备\n\n- Nginx公网服务器一台\n- 域名一套\n\n## 具体操作\n\n### 配置域名解析\n\n我是用的是腾讯云的域名解析服务。在此，我想要搭建域名`www.vvzero.com`的CDN，根据我的需求，我设置了如下的解析：\n\n![](https://img.vvzero.com/blog/build-a-cdn-with-nginx/1.jpg)\n\n这里表示，如果访问者在国外，那么将会解析到我的国外的服务器上。否则，就解析到国内的CDN。\n\n### 配置服务器\n\n在Nginx配置文件库`conf.d/`下新增一个文件。我将它命名为`www.vvzero.com.conf`。文件内容如下：\n\n```bash\nproxy_cache_path /var/www/caches/www.vvzero.com levels=1:2 keys_zone=vvzero:128m inactive=2880m max_size=128m;\nserver {\n    listen 443 ssl;\n    server_name www.vvzero.com;\n    charset utf-8,gbk;\n\n    ssl on;\n    ssl_certificate /etc/ssl/certs/1_www.vvzero.com_bundle.crt;\n    ssl_certificate_key /etc/ssl/private/2_www.vvzero.com.key;\n\n    location / {\n        proxy_set_header Accept-Encoding \"\";\n           proxy_pass https://www.vvzero.com;\n           proxy_redirect off;\n           proxy_set_header X-Real-IP $remote_addr;\n           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n           proxy_cache vvzero;\n           proxy_cache_valid  200 304  30m;\n           proxy_cache_valid  301 24h;\n           proxy_cache_valid  500 502 503 504 0s;\n           proxy_cache_valid any 1s;\n           proxy_cache_min_uses 1;\n           expires 48h;\n    }\n}\n```\n\n__重要解释：__\n\n1. 如果不需要使用https，可以把SSL的配置语句删除，并只监听80端口。\n2. `/var/www/caches/www.vvzero.com`是缓存目录位置，这个需要手动创建，至于权限，默认sudo创建的即可。\n3. `keys_zone=vvzero:128m`相当于给你的缓存起了个名字，并设置最大可用的内存空间。这里，我起的`vvzero`名字必须要与下面的`proxy_cache`相同。\n4. `proxy_pass https://www.vvzero.com;`设置原站主机地址。为了不让它解析到自己的ip上，我们需要修改此CND服务器的`/etc/hosts`文件。在文件中添加一条记录，把域名解析到源站主机，比如：`0.0.0.0 www.vvzero.com`\n5. `expires 48h;`这里设置的是缓存过期时间。\n6. 其他参数可以自己了解。\n\n然后，就大功告成啦！\n\n## 效果展示\n\nhttp://www.17ce.com/site/http/201804_4c0d99b24986e887abd69addb9b25b9c.html\n\n挺可以了，可以看到国外都解析到了我刚刚部署的CDN节点上，国内不受影响。","tags":["Nginx","CDN"],"categories":["TECHNOLOGY"]},{"title":"物联网仿手动开关控制器","url":"/2018/04/17/hand-like-switch-controller/","content":"\n\n\n## 背景\n\n玲玲说想让我做个东西送给她，作为一个直男的思考方式当然是问她的需求，也就是生活中不方便的地方。她说感觉每天晚上要下床去关灯很不方便。我就决定做一个智能化的开关给她。如果直接更换开关盒，寝室里面肯定不现实，所以，只有无损改装的方案了。何况，无损改装的方案，并不会影响手动开关。\n\n## 准备\n\n- 3D打印机（打印外壳用）\n- 舵机\n- 电池盒\n- Arduino Nano\n- HC-05 蓝牙模块\n\n## 实现逻辑\n\n既然是无损改装，我能想到的也就只有用舵机模拟手触动开关。由于宿舍没有无线路由，所以暂且用蓝牙进行通讯控制。电源采用4节5号电池，6V满足舵机、Arduino、蓝牙的供电要求。\n\n逻辑相当简单，手机发送“开”或“关”的指令 -> 蓝牙模块接收 -> Arduino处理 -> 舵机转动。\n\n## 具体制作\n\n### 3D模型部分\n\n在预估好尺寸后，打印出这样的外壳以及摇臂：\n\n![](https://img.vvzero.com/blog/hand-like-switch-controller/1.jpg)\n\n![](https://img.vvzero.com/blog/hand-like-switch-controller/2.jpg)\n\n### Arduino 控制部分\n\n```c\n#include<Servo.h>\n\nServo arm;\n\nconst int posdeg[3]={50, 80, 110}; //选取三个角度，模拟手开、关、无动作\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  String pos=\"\";\n  while (Serial.available()) pos+=Serial.read();\n  if (pos!=\"\") \n  {\n    arm.attach(9);\n    Serial.println(posdeg[pos.toInt()-48]);\n    arm.write(posdeg[pos.toInt()-48]); \n    delay(200); \n    arm.write(posdeg[1]); //回到中间位置，不要一直摁着开关\n    delay(250);\n    arm.detach(); //断开舵机连接，防止发出声音\n  }\n  delay(15);\n}\n```\n\n关于防止舵机不停发声的问题，可以参见我的[上一篇博客](https://www.vvzero.com/2018/04/13/servo-without-ringing-by-software/)。\n\n### 安装成品图\n\n![](https://img.vvzero.com/blog/hand-like-switch-controller/3.jpg)\n\n### 手机控制部分\n\n暂时没有写APP的能力，于是就使用串口调试工具：\n\n![](https://img.vvzero.com/blog/hand-like-switch-controller/4.jpg)\n\n其中，0代表关灯，2代表开灯。1用于位置矫正。\n\n## 实际测试\n\n原理示意：\n\n<video src='https://img.vvzero.com/blog/hand-like-switch-controller/5.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n实际测试：\n\n<video src='https://img.vvzero.com/blog/hand-like-switch-controller/6.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n在测试过程中，4节半满的南孚电池可以支撑两天的使用。\n\n## 后期展望\n\n- 解决供电问题，确保在一次维护后可以支撑1个月左右的使用。或者直接使用市电。\n- 对于多个开关集成的面板，可以制作多个摇杆，或者设计可调整的摇臂，以适应不同的开关盒。","tags":["Arduino","IoT","servo"],"categories":["TECHNOLOGY"]},{"title":"解决舵机滋滋响的简单软件方法","url":"/2018/04/13/servo-without-ringing-by-software/","content":"\n\n## 背景\n\n在使用舵机完成相关物联设备制作的时候，经常会遇到，舵机已经到达指定位置，但是仍然会有响声。不胜其烦，基友@张世博想出了一个方法就是在舵机供电线路上串一个继电器，在不需要转动的情况下，Arduino控制继电器断电。但是这个方法会增加硬件成本，而且增加代码复杂度。\n\n## 解决方案\n\n很简单，以Arduino为例，只要在需要舵机工作时，使用attach()函数，在舵机工作完毕后，使用detach()函数。\n如下例：\n\n```c\n{                                                                                      \n    arm.attach(9);                                                                                                                      \n    arm.write(posdeg);                               \n    delay(250);\n    arm.detach(); //断开舵机连接，防止发出声音                                            \n}\n```","tags":["Arduino","servo"],"categories":["TECHNOLOGY"]},{"title":"做串口通讯时踩过的坑","url":"/2018/04/12/issues-with-serial-communication/","content":"\n\n\n## 背景\n\n心情烦躁，不写点文章感觉无法冷静。于是就稍稍总结了一下我自己在做串口通讯时踩过的坑。大部分都很基础，也许适合刚刚接触的新人。\n\n## 实例\n\n### Windows驱动问题\n\n目前市面上能买到的USB转TTL串口模块，其芯片多采用PL2302或CP2102。Windows官方提供的串口驱动不适用于这两种芯片，所以需要手动安装。\n\n就给下驱动的链接，点击下载：\n\n[PL2303](https://source.vvzero.com/share/PL2303_Prolific_DriverInstaller_v1190.zip)\n\n[CP2102](https://source.vvzero.com/share/pololu-cp2102-windows-121204.zip)\n\n### Arduino上传代码的问题\n\nArduino是可以直接使用标准串口上传代码的，不一定要使用USB接口。只要将USB转TTL串口模块连接至Arduino的标准串口即可。\n\n但是！大部分Arduino都要冷启动以上传代码！也就是说，在上传之前，你要按住Arduino上的重置按钮，当Arduino IDE提示正在上传的时候，松开重置按钮，即可完成上传。\n\n当然，不成功就多试几次。\n\n### USB转TTL模块的功率问题\n\n有些模块的功率并不是很足，所以，像蓝牙模块、Wi-Fi模块，不一定能带得动。\n\n### 软串口问题\n\nArduino单片机支持软串口，即虚拟两个数字引脚用于串口传输。\n\n但是！软串口很鸡肋！实测9600的波特率就会出现大量传输错误，至于需要使用115200波特率的ESP8266模块，软串口根本无法胜任！曾在此纠结很久。\n\nArduino Mega倒是提供了4个硬件串口。\n\n### 蓝牙串口模块供电问题\n\nHC-05或HC-06模块的工作电压是3.3V，但是，这并不意味着你必须以3.3V供电。事实上，用3.3V供电很可能还会让蓝牙模块功率不足，甚至频繁断开连接的问题。\n\n","tags":["Arduino","serial"],"categories":["TECHNOLOGY"]},{"title":"震惊！用脸蹭开宿舍大门！树莓派人脸解锁打开宿舍门！","url":"/2018/04/12/zhangshibo-open-door-with-face/","content":"\n\n\n> 本文作者张世博。\n>\n> 本文最先发表在微信公众号“奔波儿灞的水帘洞”。\n>\n> 本站转载已获得授权。\n\n\n\n__震惊！用脸蹭开宿舍大门！树莓派人脸解锁打开宿舍门！__\n\n在上一篇文章中（我竟然给南航全体大二学生的颜值做了一个大排名？点进来查看结果！（附[源码](https://mp.weixin.qq.com/s/tQTK619MZsenlnTf13KhOw)），我发现了百度开发者提供的API还有人脸对比的功能，只需在使用之前，将要添加的人脸照片上传到人脸库之中即可。加上之前在知乎看到了一篇使用手机蓝牙解锁宿舍门的文章，这次便萌生了人脸解锁打开门的想法。\n\n这次本项目由两个部分构成\n\n1. 树莓派人脸识别\n2. arduino舵机开门\n\n这两个部分之间的通讯使用树莓派自带的蓝牙，arduino加上hc06蓝牙模块。设备外壳使用3D打印构造。\n\n## 树莓派人脸识别\n\n在这个部分，将写好的Python文件设置为开机启动，同时在Python文件内设置定时重启以防内存溢出。\n\n 代码逻辑为：\n\n- 系统初始化\n- 循环\n\n\n- 拍摄一张照片并通过base64编码\n\n\n- 上传到百度API，获得返回数据\n\n\n- 比较人脸对比相似度（百分比）\n\n\n- 若相似度大于预期，则通过蓝牙发送相应指令给Arduino\n- 循环\n\n大约就是这个样子，代码逻辑并不是很难理解，代码内容在后面会附上。\n\n## Arduino舵机开门\n\n这边代码也不是很难理解。\n\n代码逻辑为：\n\n- 循环\n\n\n- 检查蓝牙串口是否有值，如果有则下一步，没有则循环\n- 有输入值，监测是否为对应值，如果是，打开继电器和舵机5s\n\n\n- 5s后关闭舵机\n- 循环\n\nArduino部分主要困难的是硬件部分。为了达到节省电源电量，同时保持系统长时间运行的目的，在没有信号输入的时候，通过继电器来关闭舵机的电源输入；在有输入的时候才打开继电器，连接舵机电源进行操作。\n\n舵机开门部分的电路逻辑为：\n\n​            18650两节（7.4v）→稳压变压（5v）→Arduino→继电器信号\n\n​                                                        ↓                        ↑\n\n​                                                        →→→→→蓝牙模块\n\n​                                                        ↓\n\n​                                                        →→→→→继电器供电→→→→→舵机\n\n​            其中舵机受到Arduino信号控制，图中没有标明。\n\n## 3D打印部分\n\n主要是打印树莓派和舵机部分的支撑支架。\n\n​            \n\n![img](https://img.vvzero.com/blog/zhangshibo-open-door-with-face/1.jpg)\n\n舵机部分，略\n\n实物图片\n\n![img](https://img.vvzero.com/blog/zhangshibo-open-door-with-face/2.jpg)\n\n![img](https://img.vvzero.com/blog/zhangshibo-open-door-with-face/3.jpg)\n\n![img](https://img.vvzero.com/blog/zhangshibo-open-door-with-face/4.jpg)\n\n\n\n## 使用视频\n\n感谢舍友的亲情出演\n\n[点击查看完整视频]( https://www.bilibili.com/video/av21996791)\n\n## 代码部分\n\n### 树莓派Python\n\n```python\nfrom picamera import PiCamera\n\nimport time\n\nimport requests\n\nimport base64\n\nimport RPi.GPIO\n\nimport serial\n\nimport sys\n\nimport os\n\n #获得百度API的access_token\n\n def getaccess_token():\n\nhost='https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=t7NNK8h4xGoAHuTpbwyo9qYC&client_secret=MBg0AK0PhiOhytA35rSQbSa4boIQsdz3'\n\nheader_1 = {'Content-Type':'application/json; charset=UTF-8'}\n\nrequest=requests.post(host,headers =header_1)\n\naccess_token=request.json()['access_token']\n\n     return access_token\n\n #拍摄当前图片\n\n def take_picture():\n\n     camera.start_preview()\n\n     time.sleep(0.5)\n\n     camera.capture('image.jpg')\n\n     camera.stop_preview()\n\n #打开工程拍摄的图片并转换成字符串\n\n def open_pic():\n\n     f = open('image.jpg', 'rb')\n\n     img = base64.b64encode(f.read())\n\n     return img\n\n #上传到百度API进行人脸检验\n\n def go_api(img,access_token):\n\n     data_1 = {\"image\":img,'group_id':'asd'}\n\n     params_1 = {'access_token':access_token}\n\n     header_2 = {'Content-Type':'application/x-www-form-urlencoded'}\n\n     pic_re=requests.post('https://aip.baidubce.com/rest/2.0/face/v2/identify',params=params_1,headers=header_2,data=data_1)\n\n     print(len(pic_re.text))\n\n     if len(pic_re.text)>130:\n\n         if pic_re.json()'result''scores'>66:\n\n             print(pic_re.json()'result'['scores'])\n\n             return ('yes')\n\n         else :\n\n             return ('no')\n\n     else:\n\n         print('error')\n\n         return ('no')\n\n     #return(pic_re.json()'result'['scores'])\n\n #点亮指示LED等\n\n def led():\n\n     RPi.GPIO.output(18, True)\n\n #通过蓝牙对Arduino发出开门指令\n\n def send():\n\n     serial.write(bytes(2, 'UTF-8'))\n\n     print('发出指令成功')\n\n     serial.flushInput()\n\n #调用相关函数进行整个程序过程\n\n def try_api(img,access_token):\n\n     try:\n\n         a=go_api(img,access_token)\n\n         if a=='yes':\n\n             led()\n\n             send()\n\n             time.sleep(10)\n\n             RPi.GPIO.output(18, False)\n\n         if a=='no':\n\n             pass\n\n     except:\n\n         pass\n\n if name == 'main':\n\n     #程序运行配置命令---------------------------------\n\n     os.system('sudo rfcomm bind 0 00:21:13:01:8E:1A')\n\n     RPi.GPIO.setmode(RPi.GPIO.BCM)\n\n     RPi.GPIO.setup(18, RPi.GPIO.OUT)\n\n     port = \"/dev/rfcomm0\"\n\n     serial = serial.Serial(port,9600)\n\n     count=0\n\n     #程序运行配置命令--------------------------------\n\n     camera = PiCamera()\n\n     access_token=getaccess_token()\n\n     while True :\n\n         take_picture()\n\n         img=open_pic()\n\n         try_api(img,access_token)\n\n         count=count+1\n\n         print(count)\n\n         #加入自动重启命令，防止程序运行时间过长死机\n\n         if count == 2000 :\n\n             os.system('sudo reboot')\n\n             count = 0\n\n```\n\n\n\n### Arduino\n\n```c\n#include<Servo.h>\n\nServo myservo;\n\nvoid setup()  \n\n{  \n\n Serial.begin(9600);  \n\n myservo.attach(9); \n\n myservo.write(10);\n\n pinMode(4,OUTPUT);\n\n digitalWrite(4, HIGH); \n\n myservo.write(0);\n\n delay(10000);\n\n}  \n\nvoid loop()  \n\n{   digitalWrite(4, LOW); \n\n   while(Serial.available())  \n\n   {  char c;\n\n      c=Serial.read();\n\n      Serial.println (c);\n\n      if (c = 2)\n\n        { digitalWrite(4, HIGH); \n\n          myservo.write(180);\n\n         delay(40000);\n\n         myservo.write(0);\n\n         delay(10000);\n\n         digitalWrite(4, LOW); \n\n        }\n\n   }\n\n}\n\n```\n\n\n\nSTL打印文件下载链接:https://github.com/h1997l1997/Face-recognition-door-lock-in-raspberry-pie/tree/master/STL\n\nEnd\n","tags":["Arduino","RaspberryPi","IoT"],"categories":["TECHNOLOGY"]},{"title":"长令时评 2018.4.10","url":"/2018/04/10/Channicomment-2018-4-10/","content":"\n\n> 作者： 长歌如令\n## 新闻源\n前几天，微博出现了一条这样的热搜——张木易、张千巽结婚，随后，微博上便形成两队，一个说张木易是恋童癖，另一个说他们这是真爱。\n张木易在张千巽八岁时成为她的音乐老师，两人在张千巽12岁时公开恋情，现在宣称不久将会结婚，很多网友叫好，表示祝福。但祝福声中也夹杂着很多谩骂声。\n\n\n## 长令时评\n不知道大家对他们知道多少，我最初知道他们应该还是在初中的时候，因为那首《勇敢爱》的歌，这是张木易和张千巽合作的歌，那时，张千巽叫miki，她是加拿大裔，据说改名张千巽也是因为张木易的关系，后来就没怎么听说过他们，近期在微博上才又看到他们的消息。\n不谈张木易是不是恋童癖，他现在在微博上的发文，多多少少有炒作之嫌，而且他多次发文更新张千巽的照片，被新浪禁言也是情理之中。对于网友提出的恋童癖，我想也是有一定根据的，抛开那些前缀，他们俩就是一个20岁的男人，喜欢一个8岁的小女孩，这种事情不管发生在哪个家庭都会被家长抵制的。但是很奇怪的是，张千巽的父母似乎并没有阻止。这几年出现的忘年恋并不少，但是，那些事件中，男女双方都是成年人，具备完整的三观，有独立思考的能力。而张千巽当时才八岁，就算对张木易有好感，那也只是好感而已。\n当然，我只是个局外人，并不清楚其中的经过，以上仅代表个人观点，不喜勿喷。","tags":["长令时评"],"categories":["CHANNY"]},{"title":"批量修改多文件内容的暴力方法","url":"/2018/04/10/batch-modify-file-content/","content":"\n\n\n## 背景\n\n想整理一下自己的博客，将所有的Tags换成Categories。但是我现在有一百多篇博客，一个个手动修改太麻烦，使用sed什么的学习成本又太高，于是，就想了一个暴力的方法。\n\n## 准备\n\n- Notepad++（可以在本站downloads栏下载）\n- Window系统\n\n## 操作\n\n__关键在于，Notepad++可以流畅地打开大量文件，并且可以批量替换所有文件的所有内容__\n\n首先，打开存放文件的目录。\n\n![img001](https://img.vvzero.com/blog/batch-modify-file-content/1.JPG)\n\n然后，将所有文件打开方式选为Notepad++。\n\n选中所有文件，按回车键。\n\n但是，Windows好像不让我一下子打开这么多文件，所以，只好分批拖动选择打开。\n\n然后，在Notepad++内，Ctrl+H打开替换窗口，看见下图中红圈里的按钮了吗？懂了吧！\n\n![img002](https://img.vvzero.com/blog/batch-modify-file-content/2.JPG)\n\n全部替换即可。","tags":["Notepad++","Batch"],"categories":["TECHNOLOGY"]},{"title":"最新版Android Studio设置国内镜像代理","url":"/2018/04/08/set-proxy-for-newest-android-studio/","content":"\n\n\n## 背景\n\n由于众所周知的原因，Android SDK官方镜像在国内无法访问。在前几个Android Studio版本中，可以在Android SDK Manager面板里面设置代理，并强制将https转换为http，使用国内的镜像源。\n\n但是由于最新版（3.1）已经取消了Android SDK Manager面板，也没有强制转换https选项，所以无法使用以前的方法来设置（否则会报400错误）。\n\n## 解决方案\n\n![img001](https://img.vvzero.com/blog/set-proxy-for-newest-android-studio/1.JPG)\n\n点击主面板右下角的Configure --> settings --> Appearance & Behavior --> System Settings --> HTTP Proxy，选中Auto-detect proxy settings，勾选下方Automatic proxy configuration URL，填入国内的某个镜像站。这里，我选择的是`mirrors.neusoft.edu.cn:80`。\n\n![img002](https://img.vvzero.com/blog/set-proxy-for-newest-android-studio/2.JPG)\n\n完成后，就可以使用了。\n\n## 总结\n\n某些时候，不得已简单的事情复杂化。 ","tags":["Android Studio"],"categories":["TECHNOLOGY"]},{"title":"MATLAB学生套件-购买记","url":"/2018/04/07/buy-a-matlab-student-suite/","content":"\n\n## 背景\n\n为了好好学习自动控制原理及其实验（大雾），加上我觊觎MATLAB很久了，再加上我这人的正版强迫症，我决定购买正版的MATLAB学生套件。\n\n## 购买之旅\n\n谷歌搜索MATLAB，很容易就找到官网。注册账户，然后并不是十分意外地发现南航并没有购买校园许可证。\n\n![img001](https://img.vvzero.com/blog/buy-a-matlab-student-suite/1.JPG)\n\n![img002](https://img.vvzero.com/blog/buy-a-matlab-student-suite/2.png)\n\n看来必须自己掏钱了。\n\n![img003](https://img.vvzero.com/blog/buy-a-matlab-student-suite/3.JPG)\n\n在此我要先说一句话，__省钱就是花钱的开始__。\n\n### 第一次购买\n\n一开始以为，只要MATLAB主体就足够我用了，所以没有管上面的55美元套餐，也没有管下面6美元的附加功能优惠，而是直接选择了29美元的单独MATLAB主体。\n\n还好，在经济承受范围内。相比于商业标准版的15000美元，学生价已经是顶级良心了。\n\n不支持支付宝、银联，幸亏自己有一张visa信用卡，付款一切顺利，安装一切顺利。\n\n![img004](https://img.vvzero.com/blog/buy-a-matlab-student-suite/4.JPG)\n\n基础功能体验一切顺利。\n\n### 第二次购买\n\n很不幸，晚上回去，发现自控实验要使用的Simulink在MATLAB里面并没有原生附带，一开始想了想，附加功能只要6美元就可以购得，于是睡了。\n\n第二天，心痛地发现，6美元的优惠价，只有在第！一！次！购！买！才！可！使！用！\n\n![img005](https://img.vvzero.com/blog/buy-a-matlab-student-suite/5.JPG)\n\n无奈之下，不得不支付了16美元。\n\n### 第三次购买\n\n在学习过程中，发现一个函数tf()无法使用，原来我又少购买了一个包，导致控制理论的常用工具无法使用。又一次滴血中，我又付了16美元。\n\n![img006](https://img.vvzero.com/blog/buy-a-matlab-student-suite/6.JPG)\n\n不觉懊恼。\n\n## 总结\n\n__省钱就是花钱的开始__\n\n从头到尾，我花费了29+16+16=61美元，我完全可以在一开始就购买55美元的套餐，还比我分三次购买的要多很多工具包。或者，我在一开始就该详细阅读6美元优惠的内容，这样，我只要41美元就可以完成我的需求。\n\n20美元，我光吃饭就能吃一个星期多。\n\n最终的价格还是超出了我的经济承受范围。\n\n我是来哭穷的。","tags":["shopping","MATLAB"],"categories":["LIVES"]},{"title":"小米路由器存储文件数量限制-概述","url":"/2018/04/05/mi-router-file-limit/","content":"\n\n\n## 背景\n\n本人一直在用小米路由器3G加1T硬盘作为NAS。昨天晚上使用Windows往路由器中复制很多照片的时候，突然报了一个错：\n\n```\nAn unexpected error is keeping you from copying the file. If you continue to receive this error, you can use the error code to search for help with this problem.\n\nError 0x80070032: The request is not supported.\n```\n## 故障排查\n\n重试无效、重启电脑无效、重启路由器无效、换电脑换手机均无效。反正就是不能写文件，硬盘读取没有任何问题，局域网中的其他数据传输也没有问题。\n\n根据错误代号谷歌，并没有找到有价值的解决方案。\n\n后来，还是[小米自家的论坛](http://www.miui.com/thread-5546435-1-1.html)给了一点启示。\n\n## 故障原因\n\n简而言之，就是小米路由器的文件系统自身的问题，它所能存储的文件数目是有限制的，与大小无关。所以，即使磁盘空间足够，你的文件数目太多，依然无法继续增加文件。而此时读取、修改、删除文件都是可以的。\n\n也怪我一直都把这块硬盘当作垃圾桶，所有不用的文件，包括很多应用的安装目录都扔进了这块硬盘，所以，小米路由器无法支撑数以百万计的文件，自然不让我继续增加文件了。\n\n## 解决方案\n\n对我来说最简单的，就是把那些不用的安装目录都删掉。\n\n或者，按照论坛大神的解法即可。\n\n## 一点思考\n\n或许，小米路由器的设计母的就是让你存一点电影、照片什么的，并没有让我放一大堆工程和安装目录这种包含了很多小文件的东西。所以呢，无可厚非？","tags":["小米","Router"],"categories":["TECHNOLOGY"]},{"title":"长令记事 2018.3.29","url":"/2018/03/29/Channy-2018-3-29/","content":"\n\n> 作者：长歌如令\n- 不知道大家有没有过这样的经历，你和朋友一起去看电影，其实你想看一部文艺片，但是有两个人或者更多的人想看的是喜剧片，那么你会如何选择？我会将就，会跟着她们一起去看喜剧片，喜剧片也挺好的啊，至少看的时候很开心啊。\n- 一直以来，我几乎都是这样将就着的。我也不知道我为何会这样，也许是从小就被灌输这样的概念，少数服从多数；也许是我怎样都可以，没差啊，有些想做的事留着以后再去做好了，我一个人去做。尽管如此，有的时候我也会厌倦，为什么我偏偏要让自己将就呢？我一个人又不是不可以，为什么偏偏要跟着大家一起坐着自己不想做的事情呢？而当我遵从我的内心的时候，我又变成了别人眼中那个破坏气氛，不合群的人了。\n- 高三的时候，无意中看到这样的说法，在现在这个时代，你一旦从心，就怂了。不从心便是将就，在《何以笙箫默》大火时，人们最常说的是我不愿将就。今天跟舍友从食堂吃完饭回来的路上，她们两个想走一条路，而我又想走另一条路，那个时候我就突然不愿意将就了，说了一句，你们要走那就走吧，我自己走这边，然后就走了，我猜她们两个的内心一定是在想我为什么要为这种小事而搞得大家不愉快，但在我看来，当时就是不想再绕路了。可能我将就的次数太多了，有时在一些小事上反而更想从心。\n- 在我看来从心不是怂，也不是不合群，更不是孤独，是自由！","tags":["长令记事"],"categories":["CHANNY"]},{"title":"长令记事 2018.3.28","url":"/2018/03/28/Channy-2018-3-28/","content":"\n\n\n## 写在前面\n\n前几天一直在更新的新闻评论，其实也就四天，可能要断了，不是说我想偷懒，不做了，只是我今天看了很多新闻，却发现没有几个可写的，一方面是自己的见识太少，能力不足以去写一些专业的评论，另一方面就是最近的新闻都让我无从下笔。但我还是会每天都写点东西出来的，哪怕是分享一些我读过的好句。\n\n## 句子分享\n\n1. 有时我想，所有人都是一样的。在各自粉饰的外表下都有千疮百孔的人生和一个暗黑的深渊。如果了知这些，不会觉得自己特别，也不会觉得自己无辜。\n\n   > 这段句子让我觉得有感触是因为有同学跟我说过，她会羡慕我。要知道我可是一直都会羡慕别人的，从来没有想过会有人羡慕我，但，谁的人生是完美的呢，我们认为自己微不足道的一点也许在别人眼中就是十分了不起的，所有人都是一样的，总会有不满之处，也总会被另一个人羡慕着。\n\n2. 他们为了个人利益，有时毫不顾忌给这些徘徊在生活十字路口的人当头一棒，使他们对生活更加悲观；有时，还是出于个人目的，他们又一下子把这些人推到生活的顺风船上。转眼间时来运转，使得这些人在高兴的同时，也感到自己顺利得有些茫然。\n\n   > 这段话是摘自路遥的《人生》，那本书是大一的时候读的，现在大概剧情已经不记得了，但仍然记得看完之后的悲痛，高加林的人生不能由自己主宰，可是否意味着就要去追逐权力？我不想那样，只是不知道会不会也是身不由己。","tags":["长令记事"],"categories":["CHANNY"]},{"title":"搭建Git服务器的脚本","url":"/2018/03/27/shell-script-for-git-server/","content":"\n\n\n## 背景\n\n没什么，就是老师让搭建一个git服务器，然后想到以后可能会经常用，就留个脚本方便点。\n\n## 流程\n\n1. 建立一个新的git用户\n2. 建立git仓库\n3. 配置好git的登陆权限\n4. 配置好文件读取权限\n\n## 脚本\n\n```shell\n# SetGit.sh\n\napt install git\nuseradd -d /home/git -m -s /bin/bash git\ngit init --bare /home/git/example.git\nchown -R git:git /home/git/example.git\nmkdir /home/git/.ssh\ntouch /home/git/.ssh/authorized_keys\nchown -R git:git /home/git/.ssh\nchmod -R 600 /home/git/.ssh\nvim /home/git/.ssh/authorized_keys\n```\n\n在最后，贴入所需要使用git的人的公钥即可。\n\n使用git仓库\n\n`$git clone git@hostname:example.git .`\n\n","tags":["shell","Git"],"categories":["TECHNOLOGY"]},{"title":"长令时评 2018.3.26","url":"/2018/03/26/Channicomment-2018-3-26/","content":"\n\n\n> 作者：长歌如令\n>\n> 今天是两条新闻，我想让这两条新闻进行一个对比。\n\n## 新闻源\n\n【澎湃新闻】男子因为90岁老母将家里弄脏而殴打老母，被警方刑事拘留。\n\n【澎湃新闻】90岁老兵跳河救落水童，称：自己死了也没关系。\n\n## 长令时评\n\n第一条新闻是真的挺让人痛心的，母亲被儿子殴打，因为智障的母亲将家里弄的脏乱又不听劝阻。我不想灌输什么鸡汤，但是无论从哪个角度出发，那位男子的行为都是错误的。人老了，就没用了，身体的各个器官都在退化，手脚也不听使唤，处处遭人嫌弃。那么，看第二条新闻，90岁的老人听到呼救，跳河将孩子救起，他老了，也觉得自己没用了，只要孩子活着就好。老人想着年轻的一辈，若年轻的一辈都像第一条新闻中那样对待老人，那样是不是太不对等了？我的观念一直都是谁对我好，我便加倍地回报，这种事情一直都是对等的，我也认为应该对等。","tags":["长令时评"],"categories":["CHANNY"]},{"title":"长令时评 2018.3.25","url":"/2018/03/25/Channicomment-2018-3-25/","content":"\n\n> 作者：长歌如令\n> 赏樱季，也是游客素质体现季\n## 新闻源\n3月24日，武汉大学。一名男子跨过樱花护栏摇动树干，樱花撒落一地，路人却拍手叫好。\n\n## 长令时评\n看到这条新闻，第一反应便是痛心，不仅是因为那位男子，更是因为那些围观者，看到那位男子猛摇樱花树，不是劝阻，而是拍手叫好。3.23日我和同学出去看樱花时，也遇到这样类似的情况，游客为了跟樱花合影，把高处的樱花往下拽，甚至是折断。其实在那里是有人在维护秩序的，但是游客太多，根本看管不过来。因为中国游客素质低而被国外抵制的事已经发生过好几起，可近年来，似乎并没有好转，有些人依旧是我行我素。就算拍得一张清晰的与樱花的合影，又能如何？朋友圈多几个点赞又如何？丢失的，再也挽回不了。","tags":["长令时评"],"categories":["CHANNY"]},{"title":"长令时评 2018.3.24","url":"/2018/03/24/Channicomment-2018-3-24/","content":"\n\n> 作者： 长歌如令\n## 新闻源\n今天新闻的主体是太平洋垃圾。\n【央视新闻】近日，海洋清理基金会研究人员表示，太平洋垃圾带的面积近160平方公里，漂浮着约8万吨垃圾。大量垃圾会被海洋生物误食，最终通过食物链进入人体。\n\n## 长令时评\n从来没想过，海上垃圾会如此多。8万吨垃圾，相当于500架喷气客机的重量。在2007年12月31日，我国就发布了《国务院办公厅关于限制生产销售使用塑料购物袋的通知》，目的就是为了限制和减少塑料袋的使用，但现在看来，似乎收效甚微。如何合理处理垃圾，将污染降低到最低，一直是全世界的国家都面临的问题，而塑料又是垃圾中最难处理的之一。目前出去购物，依旧是用塑料袋包装较多，我想，如果全都改成纸袋，应该会好一些。除了政策问题，人们的随手乱丢垃圾也是问题所在，新闻中也提到了，大量微塑料会被鱼虾等动物误食 ，最后还是会进入人的体内。不随便乱丢垃圾，不仅是道德问题，有时，也是关乎性命的大事。","tags":["长令时评"],"categories":["CHANNY"]},{"title":"长令时评 2018.3.23","url":"/2018/03/23/Channicomment-2018-3-23/","content":"\n\n\n## 新闻源\n\n今天的新闻跟共享单车有关。3月18日，浙江温州，一位女子骑着共享单车在高架隧道行驶，车篮里坐着一名小男孩。据悉，该女子为给孩子看病，骑共享单车去医院，却被导航引至高架隧道。\n\n\n\n## 长令时评\n\n这则消息里，有两个重要的信息点，一是女子让自己的儿子坐在车篮里，二是这位女子是跟着导航上了高架。对于第一点，因违规使用共享单车而发生的意外事件已经有很多了，现在几乎所有的共享单车的车篮上都会贴有标识，车篮的最大承重为xx千克，在车身上也会贴“十二岁以下儿童禁止骑行”。但这名女子也许是出于救子心切，也许是别的什么原因，她依旧选择让儿子坐在车篮里，若是出了意外，责任在谁？我记得在2017年的七八月份，就发生过类似这样的事故，一名十二岁以下的小男孩骑共享单车，发生意外，身亡，他的父母将共享单车的公司告上法庭。最终判决还未知。明知这是错的，却依然去做，该怪谁？\n第二点是被手机导航带上高架，这一点，不知道是导航发生错误，还是那位女子搞错了呢。\n以上仅属个人观点。","tags":["长令时评"],"categories":["CHANNY"]},{"title":"搭建具有记录功能的物联云（原型）","url":"/2018/03/23/build-an-IoT-cloud-with-record/","content":"\n\n## 点击下方查看效果\n\n[Click Here](https://iot.vvzero.com)\n\n## 背景\n\n不满足于在页面上显示单独的温湿度数据，我决定添加光线感应以及——每15分钟添加一次实时数据并更新页面。\n\n## 资源准备\n\n- 我的[上一篇文章](https://www.vvzero.com/2018/03/21/build-a-simple-IoT-cloud/)所阐述的所有软硬件\n\n- 光敏模块\n\n  ![img](https://img.vvzero.com/blog/build-an-IoT-cloud-with-record/1.JPG)\n\n## 实现原理\n\n服务端某进程每隔一段时间获取一次本地数据，并将数据添加到`index.html`。\n\n## 具体操作\n\n### 本地端\n\n首先，修改Arduino的部分代码，这个时候，我们就不需要返回一个html页面了，只需要一串表明物理量的数字即可。另外，顺便加上光敏数据，光敏模块使用3号数字引脚。\n\n```c\n#include <SPI.h>\n#include <Ethernet.h> //网络模块头文件\n#include <dht11.h> //温湿度模块库文件\n\n#define SENSORPIN 2 //定义传感器引脚\n#define LIGHTSENSORPIN 3\n\n//定义本机MAC地址和IP，IP子网必须与局域网一致\nbyte mac[] = { 0xDE, 0xAD, 0xBE, 0xE8, 0xDE, 0xED };\nIPAddress ip(192, 168, 1, 30);\n\ndht11 sensor;\n\nEthernetServer server(80);\n\nvoid setup() {\n  Serial.begin(115200); //串口用于监控\n  Ethernet.begin(mac, ip);\n  server.begin();\n}\n\nvoid loop() {\n  EthernetClient client = server.available();\n\n  //当有连接传入，即开始传递数据\n  if (client) {\n    Serial.println(\"Incoming...\\n\");\n    if (client.connected()) {\n\n      //等待传入数据\n      int count = 0;\n      while (!client.available()) {\n        count++;\n        delay(100);\n        if (count >= 10) {\n          count = 0;\n          break;\n        }\n      }\n\n      //等待客户端请求结束\n      while (client.available()) {\n        char charget = client.read();\n        Serial.write(charget);\n      }\n\n      sensor.read(SENSORPIN); //读取温湿度数据\n      //这里就直接返回数值即可\n      client.println((float)sensor.humidity, 2);\n      client.println(sensor.temperature);\n      client.println(digitalRead(LIGHTSENSORPIN));\n    }\n    delay(1);\n\n    if (client.connected()) {\n      client.stop();\n      Serial.println(\"client disonnected\");\n    }\n  }\n}\n```\n\nfrp客户端几乎不用动。\n\n### 云端\n\n我使用C++和shell，利用curl命令获取数据，然后把数据加到`index.html`头部。\n\n比较懒，没注释。\n\n```cpp\n//get_data.cpp\n\n#include <iostream>\n#include <fstream>\n#include <unistd.h>\n#include <ctime>\n#include <string>\n\nusing namespace std;\n\nstring nowtime();\nvoid getdata();\nvoid work();\nvoid deploy();\n\nint main()\n{\n        while (1)\n        {\n                work();\n                sleep(900);\n        }\n\n        return 0;\n}\n\nvoid getdata()\n{\n        system(\"curl frp.vvzero.com:21321 > newdata.dat\");\n}\n\nstring nowtime()\n{\n        string value(\"\");\n\n        time_t now = time(0);\n        tm *ltm = localtime(&now);\n\n        value = to_string(ltm->tm_hour) + ':' + to_string(ltm->tm_min);\n        if (value.length()==4)\n        {\n                if (value[1] == ':') value.insert(0,1,'0');\n                else if (value[2] == ':') value.insert(3,1,'0');\n        }\n        else if (value.length()==3)\n        {\n                value.insert(0,1,'0');\n                value.insert(3,1,'0');\n        }\n        return value;\n}\n\nvoid work()\n{\n        ofstream output;\n        ifstream index, data;\n\n        getdata();\n\n        output.open(\"tmp_data.dat\",ios::out);\n        index.open(\"index.html\",ios::in);\n        data.open(\"newdata.dat\",ios::in);\n\n        string row;\n        for (int i=0;i<10;i++)\n        {\n                getline(index, row);\n                output << row << endl;\n        }\n        float humidity=0.0;\n        int temperature=0;\n        int light=0;\n        data >> humidity;\n        data >> temperature;\n        data >> light;\n\n        output << nowtime() << \"   \" << (int)humidity << \"             \" << temperature << \"                \" << (light == 0 ? \"Yes\" : \"No\") << endl;\n\n        int count=0;\n        getline(index, row);\n        while (row[0]!='<' && count<99)\n        {\n                output << row << endl;\n                getline(index, row);\n                count++;\n        }\n\n        while (row[0]!='<') getline(index, row);\n        output << row << endl;\n        while (!index.eof())\n        {\n                getline(index, row);\n                if (row.length() >= 5) output << row << endl;\n        }\n\n        output.close();\n        index.close();\n        data.close();\n\n        deploy();\n}\n\nvoid deploy()\n{\n        system(\"rm index.html\");\n        system(\"rm newdata.dat\");\n        system(\"mv tmp_data.dat index.html\");\n}\n```\n\n这里实现了每隔15分钟获取一次数据。\n\n然后`$g++ -o GET get_data.cpp -std=c++11`\n\n注意这里使用的是C++11标准，所以需要加上`-std=c++11`。\n\n 在Nginx的根目录下，先新建一个如下格式的`index.html`\n\n```html\n<html>\n<head>\n<title>VVIOT</title>\n</head>\n<body>\nHere is Villivateur Von's laboratory!</br>\n<a href=\"https://www.vvzero.com\">Click to enter my blog</a>\n<pre>\nTime    Humidity(%)    Temperature(C)    Light_Detected\n------------------------------------------------------------\n</pre>\n</body>\n</html>\n```\n\n然后配置好合适的权限，在该目录下运行`$sudo nohup ./GET &`。\n\n大功告成！","tags":["Arduino","Web","IoT"],"categories":["TECHNOLOGY"]},{"title":"长令时评 2018.3.22","url":"/2018/03/22/Channicomment-2018-3-22/","content":"\n\n> 作者： 长歌如令\n> 经身边人提议，决定每天都选一则新闻，写一点的看法，有很多还不成熟，欢迎交流。\n\n## 新闻源\n【奥迪跑车停车忘关窗 老太贴胶带封窗守护】一位老太见奥迪跑车的车窗未关，怕遭偷窃，苦苦等候未果，只好用胶带纸封住车窗。\n\n## 长令时评\n这样的新闻应该是属于正能量的新闻了，这则新闻的重点就是老太怕遭偷窃而用胶带封住车窗，这种行为是善良的，友好的。记得在上学期的新闻写作课上，有讨论过像类似这种情况的正能量新闻需不需要报道，当时有同学说不需要，有同学说需要，我的立场是这种新闻需要报道，尽管这样的小事并不会引起大的轰动，但是在现在这种多数人都是“事不关己高高挂起”的情况下，那些好人好事还是会让心寒的人感到一丝温暖。久而久之，会有越来越多的人去做一些让人温暖的事。况且一些主流媒体的官微都很乐意去报道正能量的新闻。\n其实，每天都有人在做着善良的事。\n","tags":["长令时评"],"categories":["CHANNY"]},{"title":"简易物联云平台搭建原理","url":"/2018/03/21/build-a-simple-IoT-cloud/","content":"\n\n\n## 背景\n\n没什么背景，纯粹想玩。\n\n## 需求分析\n\n能够在指定web页面上查看我实验室的温湿度。\n\n## 软硬件资源准备\n\n- Arduino Uno （用于处理传感器数据并控制网络扩展板）\n\n  <img src=\"https://img.vvzero.com/blog/build-a-simple-IoT-cloud/1.JPG\" alt=\"img\" style=\"zoom:67%;\" />\n\n- W5100网络扩展板（实际上任何兼容Arduino的网络模块均可）\n\n  <img src=\"https://img.vvzero.com/blog/build-a-simple-IoT-cloud/2.JPG\" alt=\"img\" style=\"zoom:67%;\" />\n\n- 同一局域网的frp client主机一台（用于内网穿透）\n\n- DHT11温湿度模块（或者其他传感器）\n\n  <img src=\"https://img.vvzero.com/blog/build-a-simple-IoT-cloud/3.JPG\" alt=\"img\" style=\"zoom:50%;\" />\n\n- 公网frp主机（用于搭建物联云及内网穿透）\n\n- 公网Nginx主机（可与frp共用）\n\n- 路由器（网关）\n\n## 具体操作\n\n### 传感器端搭建\n\n将W5100网络扩展板插在Arduino Uno上，然后将DHT11模块连接至Arduino，信号线接至数字2号口。\n\n以下是本人的成品图。\n\n<img src=\"https://img.vvzero.com/blog/build-a-simple-IoT-cloud/4.JPG\" alt=\"img\" style=\"zoom:50%;\" />\n\n将网络模块连接至路由器。\n\n刷入以下代码。\n\n```c\n#include <SPI.h>\n#include <Ethernet.h> //网络模块头文件\n#include <dht11.h> //温湿度模块库文件\n\n#define SENSORPIN 2 //定义传感器引脚\n\n//定义本机MAC地址和IP，IP子网必须与局域网一致\nbyte mac[] = { 0xDE, 0xAD, 0xBE, 0xE8, 0xFE, 0xED };\nIPAddress ip(192, 168, 1, 30);\n\ndht11 sensor;\n\nEthernetServer server(80); //开启80端口\n\nvoid setup() {\n  Serial.begin(115200); //串口用于监控\n  Ethernet.begin(mac, ip);\n  server.begin();\n}\n\nvoid loop() {\n  EthernetClient client = server.available();\n  \n  //当有连接传入，即开始传递数据\n  if (client) {\n    Serial.println(\"Incoming...\\n\");\n    if (client.connected()) {\n\n      //等待客户端请求结束\n      while (client.available()) {\n        char charget = client.read();\n        Serial.write(charget);\n      }\n      \n      sensor.read(SENSORPIN); //读取温湿度数据\n\n      //返回html页面\n      client.println(\"HTTP/1.1 200 OK\");\n      client.println(\"Content-Type: text/html\");\n      client.println(\"Connection: close\");\n      client.println();\n      client.println(\"<!DOCTYPE HTML>\");\n      client.println(\"<html>\");\n      client.println(\"Here is Villivateur Von's laboratory!\");\n      client.println(\"<br />\");\n      client.println(\"<br />\");\n      client.println(\"<br />\");\n      client.println(\"Humidity (%): \");\n      client.println(\"<br />\");\n      client.println((float)sensor.humidity, 2);\n      client.println(\"<br />\");\n      client.println(\"<br />\");\n      client.println(\"Temperature (C): \");\n      client.println(\"<br />\");\n      client.println((float)sensor.temperature, 2);\n      client.println(\"<br />\");\n      client.println(\"</html>\");\n    }\n    delay(1);\n    client.stop();\n    Serial.println(\"client disonnected\");\n  }\n}\n```\n\n部分库文件可能不属于Arduino标准库，可能需要手动下载。（淘宝卖家会提供）\n\n同一局域网访问`http://192.168.1.30`，即可看到如下页面：\n\n![img](https://img.vvzero.com/blog/build-a-simple-IoT-cloud/5.JPG)\n\n### frp客户端设置\n\n在同一内网内启动一个frp客户端，连接至已有的frp服务器：\n\n添加以下配置：\n\n```bash\n#frpc.ini\n\n[ardu_uno]\ntype = tcp\nlocal_port = 80\nlocal_ip = 192.168.1.30\nremote_port = 22222\n```\n\n`$nohup ./frpc &`\n\n此时，已经可以通过`<公网ip>:22222`访问。\n\n### 更多：配置专有域名（云平台）\n\n在公网服务器Nginx中添加如下配置：\n\n```bash\nserver {\n       listen 80;\n\n       server_name iot.vvzero.com;\n\n       location / {\n            proxy_pass http://frp.vvzero.com:22222;\n       }\n}\n```\n\n即可。\n\n","tags":["Arduino","Web","IoT"],"categories":["TECHNOLOGY"]},{"title":"没有任何前后端、APP开发经验，如何管理密码","url":"/2018/03/18/How-I-organize-my-passwords/","content":"\n\n\n## 背景\n\n最近由于种种原因，我在各大站点注册了相当多的账号和密码，加上以前的账号，大概有百十来个。为了防止被撞库，我几乎不会在不同站点使用相同的密码，这样一来，想让我记住上百个账号密码是不可能的。我以前是记在手机的便签里，但是这样一来不安全，二来不能搜索指定密码，很不方便。市面上有很多优秀的密码管理软件，但由于我目前的密码记录已经有了自己的格式，无法直接导入，更何况我不愿意把密码记录在其他人的软件里，所以想找个方法来管理账号密码。\n\n苦逼的是，我没有任何前后端开发经验，也不会做手机APP，真的很难想自己该怎么处理几百条账号密码，直到某次我上完厕所……\n\n## 需求分析\n\n1. 能够直接导入或使用现有的记录的账号密码；\n\n2. 能够随时随地很方便地查看自己的账号密码；\n\n3. 自己的密码库需要认证才能访问；\n\n4. 能够查找到自己需要的账号密码；\n\n5. 能够方便地添加新密码。\n\n   ​\n\n## 资源准备\n\n- Nginx公网服务器一台\n\n- 现有的密码库\n\n  ​\n\n## 具体思路\n\n把账号密码放在自己的服务器上，使用https连接，并且使用Nginx设置访问认证，在web页面上查看自己的账号密码。使用浏览器的页内查找功能查找指定的密码。最后，使用一个小脚本，登陆服务器添加新密码。\n\n## 实际操作\n\n### 建立新的Nginx站点\n\n在`/etc/nginx/sites-enabled/`下添加新的配置文件`example`：\n\n```\nserver {\n       listen 443 ssl;\n\n       server_name example.example.com;\n       charset utf-8,gbk;\n\n       ssl on;\n       ssl_certificate /etc/ssl/private/example.example.com_bundle.crt;\n       ssl_certificate_key /etc/ssl/private/example.example.com.key;\n\n       location / {\n              root /var/www/example;\n              index example.txt;\n              auth_basic \"Please input the password:\";\n              auth_basic_user_file /var/www/example/auth.db;\n       }\n}\n```\n\n当然，你得有个ssl证书，如果没有的话，使用http……也无可厚非。\n\n记得加上`charset utf-8,gbk;`不然中文的支持不好。\n\n这里的`example.txt`即我自己以前记录的密码库。\n\n然后配合Nginx的认证参数，使用`sudo htpasswd -bc /var/www/example/auth.db test 123456`生成Nginx的认证用户名和密码。\n\n### 设置权限\n\n切换至`/var/www/example/`下，我要确保我自己的密码不能让其他用户读取。\n\n`sudo chmod 660 example.txt`\n\n`sudo chmod 660 auth.db`\n\n然后，为了能让自己修改密码库文件，把自己加入到root组。\n\n`sudo usermod -G root username`\n\n重新登陆。\n\n### 制作添加密码的小程序\n\n我用C++撸了一小段，凑合着用：\n\n```cpp\n//adk.cpp\n#include<iostream>\n#include<fstream>\n#include<cstdlib>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n        ofstream tmpFile;\n        string data;\n\n        tmpFile.open(\"tmp.txt\");\n\n        cout << \"Name: \";\n        getline(cin,data);\n        tmpFile << data << endl;\n        cout << \"Account: \";\n        getline(cin,data);\n        tmpFile << data << endl;\n        cout << \"Password: \";\n        getline(cin,data);\n        tmpFile << data << endl << endl;\n\n        tmpFile.close();\n\n        system(\"cat tmp.txt >> /var/www/example/example.txt\");\n        system(\"rm tmp.txt\");\n\n        return 0;\n}\n```\n\n运行的效果是这样的：\n\n```bash\nusername@server:~$ ./adk\nName: testname\nAccount: testaccount\nPassword: 123456\nusername@server:~$\n```\n\n此时，这一段信息已经附加到密码库后面。\n\n\n\n### 页面效果\n\n![效果](https://img.vvzero.com/blog/How-I-organize-my-passwords/1.JPG)\n\n## 后记\n\n还是觉得，太蠢太蠢。","tags":["Web","password"],"categories":["TECHNOLOGY"]},{"title":"Ubuntu下为postfix配置DKIM","url":"/2018/03/14/posfix-with-opendkim/","content":"\n\n## 背景\n受困于outlook把我的邮箱地址认为是垃圾邮件，我在经过查阅资料后，发现我现在最大的问题是没有反向DNS解析以及缺少DKIM验证。反向DNS解析，由于主机商不给力，所以不可能完成配置。这里先记录下配置DKIM的过程。\n\n## 资源准备\n- 已经按照[上一篇文章](https://www.vvzero.com/2018/03/10/build-an-email-server-tutorial/)配置完一台ubuntu服务器\n\n## 配置步骤\n### 安装opendkim\n`sudo apt install opendkim opendkim-tools`\n\n### 修改opendkim配置文件\n修改`/etc/opendkim.conf`\n添加以下代码\n```bash\nDomain                  example.com                                                       \nKeyFile         /etc/dkimkeys/dkim.key                                                   \nSelector                dkim                                                             \nSOCKET                  inet:8891@localhost\n```\n这里配置的意义是，告诉opendkim你的邮箱域名，设置私钥地址，以及配置dkim服务端口，可以根据自己的需求修改成其他值。\n\n然后修改`/etc/default/opendkim`\n添加这一条语句：\n`SOCKET=\"inet:8891@localhost\"`\n该句意为配置opendkim的服务地址，应与上一个配置文件一致。\n\n### 生成DKIM密钥对\n在某个目录内执行下面的语句：\nˋsudo opendkim-genkey -t -s dkim -d example.com`\n生成你的域名的密钥对，然后会有两个文件\nˋdkim.key`以及`dkim.txt`\n移动`dkim.key`\n`sudo mv dkim.key /etc/dkimkeys/`\n配置所有者权限\n`sudo chown opendkim:opendkim dkim.key`\n\n### 配置postfix\n编辑`/etc/postfix/main.cf`\n添加或修改以下配置项\n```bash\n#DKIM                                                                                   \nsmtpd_milters = inet:localhost:8891                                                      \nnon_smtpd_milters = inet:localhost:8891                                                  \nmilter_protocol = 2                                                                      \nmilter_default_action = accept\n```\n与opendkim一致即可。\n\n编辑`/etc/postfix/master.cf`\n添加配置项\n`-o receive_override_options=no_header_body_checks,no_unknown_recipient_checks,no_milters`\n\n### 重启服务\n`sudo service opendkim restart`\n`sudo service postfix restart`\n\n### 添加DKIM记录\n首先找到生成DKIM密钥对那一步，同时生成的一个`dkim.txt`文件，格式为\n```bash\ndkim._domainkey IN      TXT     ( \"v=DKIM1; k=rsa; t=y; \"\n          \"p=MIGfMA0GCSqGSIb3DQEBAQUAXXXXXXBiQKBgQC/eeMNBhzr+guknXXXXciiY/Wc7HJYNKdxVi+/qlA+6TgleaJY7CC/clWvRAtuXlAzjccsI1V/ICaHSzn9fhZZMKURmy2gsXXXXXXXYw7VZhFNBpTCqRALwsxOryW2BcX8eiwu1oY9krxbUQXXXXXXXXXXI4CLiXXXXXXXXeMK0wIDAQAB\" )  ; ----- DKIM key dkim for example.com\n```\n在DNS解析里添加如下记录\n\n| 主机记录 | 记录类型 | 记录值 |\n|----------|----------|--------|\n| dkim._domainkey | TXT | `\"v=DKIM1; p=MIGfMA0GCSqGSIb3DQEBAQUAXXXXXXBiQKBgQC/eeMNBhzr+guknXXXXciiY/Wc7HJYNKdxVi+/qlA+6TgleaJY7CC/clWvRAtuXlAzjccsI1V/ICaHSzn9fhZZMKURmy2gsXXXXXXXYw7VZhFNBpTCqRALwsxOryW2BcX8eiwu1oY9krxbUQXXXXXXXXXXI4CLiXXXXXXXXeMK0wIDAQAB\"` |\n根据自己的实际数据填写。\n\n## 测试有效性\n贴出两个测试网站：\n[dkimvalidator](http://dkimvalidator.com)\n[Spamtest](http://www.mail-tester.com)","tags":["postfix","email","dkim"],"categories":["TECHNOLOGY"]},{"title":"Ubuntu个人邮箱搭建教程","url":"/2018/03/10/build-an-email-server-tutorial/","content":"\n\n## 背景\n为了某些不可告人的秘密，我决定搭建一个自己的邮箱服务器。\n当然，被人要你的邮箱的时候，你拿出自己域名的邮箱，也挺有场（zhuang）子（bi）的。\n\n## 资源准备\n1. ubuntu公网服务器一台（其他linux系统同理）\n2. 有效一级域名一个，假设是`example.com`\n3. 若干邮件客户端、其他邮箱账户，供测试用\n\n## 配置步骤\n\n### 配置DNS解析\n配置DNS是为了告诉其他人，你的域名收发件服务器是哪一个；以及防止自己的邮件被其他站点认为是垃圾邮件（这一点折腾了我很久，所以先写）\n配置一下几条记录\n\n| 主机记录 | 记录类型 | 记录值 | 备注 |\n|----------|----------|--------|------|\n| @ | A | `<server ip>` | 这一点其实容易忽略，但是如果不把你的一级域名直接指向你的邮箱服务器，gmail很可能把你的邮件扔到垃圾邮件里面。 |\n| mail | A | `<server ip>` | 这里的“mail”其实可以为任意值，通常为“mail” |\n| @ | MX | `mail.example.com` | 指定你的域名的收发件服务器是哪个 |\n| @ | TXT | `v=spf1 a mx -all` | 配置SPF记录，用于反垃圾邮件，想进一步了解可以查阅相关资料 |\n| _dmarc | TXT | `v=DMARC1;p=none;rua=yourname@example.com` | 配置DMARC记录，用于反垃圾邮件，想进一步了解可以查阅相关资料 |\n| smtp | CNAME | `mail.example.com` |  |\n| pop3 | CNAME | `mail.example.com` |  |\n| imap | CNAME | `mail.example.com` | 以上为常用地址 |\n\n### 配置主机名hostname\n执行命令`sudo hostnamectl set-hostname mail.example.com`\n重启机器。\n\n### 安装postfix\npostfix是用来做“对外”任务的，就是与其他站点进行收发件交互。\n\n执行命令`sudo apt install postfix`\n一路确定，除了第二步，输入`example.com`。\n\n然后执行命令`sudo vim /etc/postfix/main.cf`修改配置文件。\n这里先上我的配置文件。\n```shell\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\nbiff = no\n\nappend_dot_mydomain = no\n\nreadme_directory = no\n\n#此处隐藏了部分tls的配置\n\nsmtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination\nmyhostname = mail.example.com\nalias_maps = hash:/etc/aliases\nalias_database = hash:/etc/aliases\nmyorigin = /etc/mailname\nmydestination = $myhostname, example.com, localhost, localhost.localdomain, localhost\nrelayhost =\n\n#此处需要添加你的公网ip地址或子网\nmynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 \nmailbox_size_limit = 0\nrecipient_delimiter = +\ninet_interfaces = all\ninet_protocols = all\n\nhome_mailbox = .Mail/\n\nqueue_directory = /var/spool/postfix\nbroken_sasl_auth_clients = yes\n\n#这里是为了与接下来要用到的dovecot配合\nsmtpd_sasl_type = dovecot\nsmtpd_sasl_auth_enable = yes\nsmtpd_sasl_path = private/auth\nsmtpd_sasl_local_domain = example.com\nsmtpd_sasl_authenticated_header = yes\nsmtpd_sasl_security_options = noanonymous\ncompatibility_level = 2\nsmtpd_milters = local:/var/run/dkim-milter/dkim.sock\nnon_smtpd_milters = local:/var/run/dkim-milter/dkim.sock\nmilter_protocol = 2\nmilter_default_action = accept\n```\n\n### 安装dovecot\ndovecot是用来做“对内”任务的，就是与各个邮箱客户端进行同步（毕竟我们不能每次都登陆这台主机来收发邮件）\n执行命令`sudo apt install dovecot-common dovecot-imapd dovecot-pop3d`\ndovecot完整的配置文件比较复杂。\n先进入`/etc/dovecot/conf.d/`\n\n打开`10-master.conf`，找到第95行，修改为如下：\n```shell\nunix_listener /var/spool/postfix/private/auth {\n    mode = 0666\n    user = postfix\n    group = postfix\n}\n```\n\n打开`10-auth.conf`，找到第100行，修改为：\n`auth_mechanisms = plain login`\n\n打开`10-mail.conf`，找到第30行，修改为：\n`mail_location = maildir:~/.Mail`   注：此处与postfix配置文件中的`home_mailbox`一项配置相同即可。\n\n打开`20-pop3.conf`，找到第50行，去除注释：\n`pop3_uidl_format = %08Xu%08Xv`\n\n### 重启\n`sudo service postfix restart`\n`sudo service dovecot restart`\n\n此时，使用邮箱客户端即可连接使用。\n服务器内所有都可以登陆。\nsmtp: smtp.example.com port: 25\nimap: imap.example.com port: 143\npop3: pop3.example.com port: 110\n\n## 后续\n下一篇文章将会讲解如何配置postfix及dovecot的SSL证书。","tags":["postfix","spf","dovecot","email"],"categories":["TECHNOLOGY"]},{"title":"使用hexo手工制作带有一级目录的网络相册","url":"/2018/03/05/hexo-gallery-with-one-directory-structure/","content":"\n\n\n## 背景\n我积累了很多照片，按事件分放在大量的目录中，同时每个目录下面均含有大量照片。现在，我想把这些照片发布到hexo博客中，同时保留原有的目录结构。具体的目标是，在主页面上展示多个超链接，超链接名同目录名，超链接指向各相应子页面，直接展示目录下的照片。\n\n## 难点\n- 目录亮和照片量均极大，无法手动完成。\n- 含有目录结构，暂时找不到相应工具。\n\n## 关键思路\n__把所有目录下的文件名写至对应文件内__\n\n## 准备\n### 平台\n- Windows 10\n或者类似平台\n\n### 工具\n- 腾讯云COS客户端\n- Excel 2016\n- Windows Subsystem for Linux\n- hexo框架\n\n## 操作步骤\n### Step 1 上传所有照片至腾讯云COS\n使用腾讯云COS客户端的文件夹上传很容易完成，而且可以保留目录结构（这一点很重要）。\n\n### Step 2 获取所有目录名\n使用powershell直接完成，并保留目录名以便接下来使用。\n`ls -name > name.txt`\n这一文件很重要，保存好，接下来会不断用到。\n\n### Step 3 建立index.md\n为了便于操作，新建一个目录，这里，我建立一个`/gallery`目录。\n在此目录内，新建一个`/md/index.md`，即上述主页面。\n文件头按照hexo标准，写好文件头。\n```\n---\ntitle: Gallery\ndate: xxxx-xx-xx xx:xx:xx\n---\n```\n然后，操起神器Excel，原理同[这篇文章](https://www.vvzero.com/2018/01/21/hexo-next-%E8%85%BE%E8%AE%AF%E4%BA%91cos%E5%88%B6%E4%BD%9C%E5%9B%BE%E7%89%87%E9%A1%B5%E9%9D%A2%EF%BC%88%E7%9B%B8%E5%86%8C%EF%BC%89/)，制作好命令组，这里就会用到`name.txt`。\n这里及下面所有sh脚本的命令都在Windows Subsystem for Linux中运行。\n格式：`<center>[name](https://www.vvzero.com/Gallery/<name>.html)</center>`\n![建立index.md](https://img.vvzero.com/blog/hexo-gallery-with-one-directory-structure/1.JPG)\n将生成的最后一列复制进`index.md`即可。使用`<center> </center>`只是为了美观。\n\n### Step 4 将各照片目录中的文件名写入对应文件（关键）\n首先在`/gallery`中新建一个`/tmp`目录，用于暂存处理文件。\n同样使用Excel和`name.txt`,生成命令组。这里需要使用ls命令，思路就是根据`name.txt`，一对一写入。\n![将各照片目录中的文件名写入对应文件](https://img.vvzero.com/blog/hexo-gallery-with-one-directory-structure/2.JPG)\n格式：`ls -l \"./<name>\" |awk '{print $9}' > \"./tmp/<name>.md\"`\n解释：`ls -l |awk '{print $9}'`可以直接提取文件名，并且一列显示。\n然后我们就可以在`/gallery/tmp`下获得含有对应目录下照片名的md文件。\n\n### Step 5 在`/tmp`里各文件每行加上指定字符\n因为markdown语法中，`![]()`表示添加图片，故我们需要在每一行的文件前后加上这类标识符以及url的前半部分（毕竟保存在COS中）。这里，我使用了`sed`命令，具体用法参见[sed在行首或者行尾添加内容](http://blog.csdn.net/helei001/article/details/49475255)。下图表示在每一行末尾加上')'。\n格式：`sed 's/$/&)/g' \"<name>.md\"`\n![每行加上指定字符](https://img.vvzero.com/blog/hexo-gallery-with-one-directory-structure/3.JPG)\n\n### Step 6 建立`/md/<name>.md`\n同样使用Excel和`name.txt`。\n格式：`echo \"---\\ntitle: <name>\\ndate: 2018-03-05 11:00:00\\n---\\n\" > \"<name>.md\"`\n![建立md](https://img.vvzero.com/blog/hexo-gallery-with-one-directory-structure/4.JPG)\n\n### Step 7 把/tmp/中所有文件附加至/md/对应文件中\n同理\n格式：`cat \"./tmp/<name>.md\" >> \"./md/<name>.md\"`\n![文件附加](https://img.vvzero.com/blog/hexo-gallery-with-one-directory-structure/5.JPG)\n\n### Step 8 整理文件至hexo目录\n依照hexo目录结构，整理刚刚`/md`中所有文件至hexo的`/source/Gallery`中。\n并执行`hexo d -g`。\n\n至此，全部工作完成！\n\n## 总结\n用好批处理和Excel。\n\n## 页面展示\n![展示](https://img.vvzero.com/blog/hexo-gallery-with-one-directory-structure/6.JPG)\n![展示](https://img.vvzero.com/blog/hexo-gallery-with-one-directory-structure/7.JPG)","tags":["Hexo","Batch","Gallery","Excel"],"categories":["TECHNOLOGY"]},{"title":"玲玲：写在离家之前","url":"/2018/03/01/lingling-departure-from-home/","content":"\n\n## 写在离家之前\n\n> 本文作者：长歌如令\n\n明天早上九点的车，去南京。心慌，总觉得有点不安稳。我好像从小就有开学焦虑症，在新学期开始前总会紧张，就像我每次数学课前都会紧张一样。新学期，我不知道会是哪些老师教我，不知道那些老师会是什么样的性格，不知道我能不能适应老师的教学风格……总之，就是会担心很多。今天跟老张说我有点紧张，有点慌，老张说这很正常，她也会有点这样，毕竟离家很远。可我一直认为我不是一个恋家的人，从小就习惯一个人跟奶奶在家，要说舍不得，那也是从很久以前就开始了，渐渐麻木。近几年，跟爸妈的交流更是少之又少，偶尔几次交谈，也是不欢而散。他们有他们的想法，我又有我的打算，也不知道从什么时候开始，我记忆中一直很温和的爸爸变得暴躁起来。所以，交谈的机会就更少了。\n![1](https://img.vvzero.com/blog/lingling-departure-from-home/1.jpg)\n贾樟柯说，中国人在骨子里对苦难有一种“崇拜”，并且把喜欢把自己的经历诗化，只有他们经历过的才叫苦难。爸妈老是说我们这代人怕吃苦，但我们这代人也有我们所必须经历的苦难。时代不同，两者不能相提并论。我是个理想主义者，虽涉世未深，但也多多少少体会到一些现实的残酷。一直以经济独立来要求自己，有时甚至还想离开这个家，或许我侥幸，能够如我所愿，潇洒于江湖；又或许，我被现实打得鲜血淋漓，不得不低头，回到父母身边，过着我曾经最不喜欢的日子。\n![2](https://img.vvzero.com/blog/lingling-departure-from-home/2.jpg)\n前几天，看到老张说自己不想继续考六级，而是想去学日语，其实看到老张对日语的热情，我不禁反思，我的热情应该寄托在哪里？似乎对什么事情都提不起兴趣，列了很多计划，可就是缺乏动力。老张说可能是我也确实没有遇到什么困难吧，如果有困难了，也是一定会努力去完成的。想想也是，高三那么拼命，到了大学就变成了无所事事，除了在期末考试周，才会去努力。知道这样不好，也想去改变，无奈总是缺乏动力。这世上最可悲的大概就是想而不能了吧。时常处于一种无力感之中，不知道是从什么时候开始，我喜欢出去走走，一个人也好，两个人也行。若是一人，就抬头看看天，看看树，若是两人，则更好，有个人能够听我絮叨，排解忧思。以前我没觉得一个人出去走走是件难事，直到一位朋友跟我说，她很佩服我可以一个人出去散步。那时我才意识到，每个人都会被别人仰望。某些自己已经习以为常的事，在别人眼里或许就是一件非常了不起的事。\n![3](https://img.vvzero.com/blog/lingling-departure-from-home/3.jpg)\n想太多，但我还是会去想，毕竟谁都不能控制我的思维。为什么我会如此的感性，我想可能是因为小学三年级的班主任吧。三年级最后一次考试，班主任对我的成绩不满意，便从他家里拿了好些书给我，那个暑假，我就在家里看书，脑海中总有这样的画面，下雨天，我窝在沙发上看书，看着看着就睡着了，醒来后继续看。当然了，现在早已记不清那些书上的内容，但那些书对我的影响却是久远的。我喜欢用文字表达情感，记录心情，也许跟曾经的一切经历都脱不了干系，有时，我也会讨厌这样的自己，开朗点不好吗？为什么总要让自己去想那么多，一副郁郁寡欢的模样。有时，又会觉得这样没什么不好，至少说明我在思考。现在看来，不管怎么样，这些都是最真实的我啊。\n![4](https://img.vvzero.com/blog/lingling-departure-from-home/4.jpg)\n2018.3.1 20：41","tags":["Photography","lingling"],"categories":["LIVES"]},{"title":"小米路由器3G开启SSH","url":"/2018/02/24/mi-router-3g-ssh/","content":"\n\n## 背景\n由于前一个小米路由器寿终正寝，考虑换一个高性能的路由器，于是，我选择了小米路由器3G。着手使用后，感觉调试速度和稳定性有了很大的提升。但我的要求远不止此，我觉得它256M的内存能干更多的事。而开启SSH是“瞎搞”的必由之路。\n\n## 可行性\n- 小米路由器固件是根据OpenWrt深度定制的系统\n- 小米官方支持大众开发小米路由器\n\n## 具体操作\n\n### 升级开发版固件\n小米路由器3G出厂是稳定版固件，我们需要刷成开发版才能进行下面的操作。\n打开[小米路由器官方固件下载地址](http://www1.miwifi.com/miwifi_download.html)，下载小米路由器开发版固件。保存到本地备用。\n![download](https://img.vvzero.com/blog/mi-router-3g-ssh/1.JPG)\n登录管理后台，右上角选择“系统升级”，并在下一个界面选择“手动升级”，上传刚刚下载的固件。\n![update](https://img.vvzero.com/blog/mi-router-3g-ssh/2.JPG)\n![update](https://img.vvzero.com/blog/mi-router-3g-ssh/3.JPG)\n按提示等待升级完成即可。\n\n### 绑定小米账户\n手机下载小米WiFi客户端，用你的小米帐号登录，绑定路由器。\n如果无法绑定，可以尝试把小米路由器恢复出厂设置一下（用卡针长按reset键至黄灯亮），重新绑定。\n\n### 获取开发者工具\n[点击此处](https://d.miwifi.com/rom/ssh)打开开发工具下载地址，记下root密码，并下载工具包，保存到一个U盘根目录下，插到路由器后面的USB接口上。\n![getssh](https://img.vvzero.com/blog/mi-router-3g-ssh/4.JPG)\n按照官方提示的1、2、4条做。\n但是！\n__记住！不要理会官网提示的第3条！当你断开电源、按住reset键、插上电源后，一定不要松开reset键，一定要等待黄灯闪烁的时候（大概十几秒），才能松开reset键！__\n\n### SSH登录路由器\n然后，在命令行里面`ssh root@<路由器地址>`输入root密码就大功告成了！\n__ARE YOU OK?__\n![ok](https://img.vvzero.com/blog/mi-router-3g-ssh/5.JPG)","tags":["小米","Router"],"categories":["TECHNOLOGY"]},{"title":"happy chinese new year 2018","url":"/2018/02/15/happy-chinese-new-year-2018/","content":"\n\n\n<center>话不多说</center>\n<center>该博客建立以来第一个新年</center>\n<center>新年快乐!</center>\n\n![新年快乐](https://img.vvzero.com/blog/happy-chinese-new-year-2018/1.jpg)","tags":["wishes"],"categories":["LIVES"]},{"title":"中国电信http劫持陈述","url":"/2018/02/11/ChinaNet-http-hijack/","content":"\n\n## 情形陈述\n放假回家，家里有一条电信宽带。在我连接电信宽带的WiFi时，如果使用的是http连接，有一定几率会出现以下界面：\n![1](https://img.vvzero.com/blog/ChinaNet-http-hijack/1.jpg)\n![2](https://img.vvzero.com/blog/ChinaNet-http-hijack/2.jpg)\n借口为“业务需要查看”，实际上是推送广告，还都是今日头条的震惊体，吃相实在难看。如果直接使用https就不会出现这类情况。所以很显然，我的http被强奸了。\n就算用http访问我自己的网页，右下角也有一定几率出现广告。当然，我怎么可能给自己加广告呢？显然，又被强奸了一次……\n![3](https://img.vvzero.com/blog/ChinaNet-http-hijack/3.jpg)\n唉，这就是中国电信！","categories":["TECHNOLOGY"]},{"title":"我为什么经常不关电脑","url":"/2018/02/10/Why-I-not-shutdown-computer/","content":"\n\n## 我的关机频率\n这学期在学校的时候，平均一个半月才会出现一次8小时以上的关机状态，除了安装驱动、系统更新需要重启等特殊情况外，一般我的电脑都是运行状态（非睡眠），包括夜间，也在工作。假期里面，我电脑一直保持运行或睡眠状态，除了一次拆机装内存条。\n\n## 我为什么经常不关电脑？\n### 1.能够保留我的工作状态\n每次展开工作需要打开一大堆的应用，而且很多应用打开后需要进行一大堆的配置，关机后重新打开很麻烦，所以干脆不关机。\n\n### 2.能够高效利用内存缓存\nWindows10的内存管理很特别，有很大一部分空闲内存会被用于存放`cache data`，也就是应用缓存，比如说你刚刚打开了Photoshop，然后把它关掉了，这个时候，如果内存够用，Windows就会把这一部分应用数据保留在内存里。过一会，如果你又想使用Photoshop，当你再次打开它时，速度就会快很多，这是因为现在是直接从内存缓存中读取数据，当然比从硬盘加载快很多。\n这一特性在使用大内存计算机时尤为明显。\n![内存缓存](https://img.vvzero.com/blog/Why-I-not-shutdown-computer/1.jpg)\n\n### 3.给系统处理自动任务的时间\nWindows会选择在用户使用电脑不频繁的时段进行更新、磁盘清理、碎片整理等工作，这些工作对我们来说是有益的，能够提高工作效率。所以每天夜间，我的电脑都会自动进行这些工作，保证电脑整洁新鲜，而不需要我自己手动操作。\n\n### 4.没有了开关机的等待时间\n这是当然~\n\n### 5.学校的电费不要自己掏钱\n嘿嘿，所以，在家，我会选择睡眠。睡眠相较于保持运行来说，少了第3项优势，但是相当省电！","tags":["Windows","Computer"],"categories":["TECHNOLOGY"]},{"title":"道听途说 学生斗嘴高中校长","url":"/2018/02/08/back-talk-to-Gu-Xiaobin/","content":"\n\n\n今日有幸听高思维型学者讲述，某中学两位智商情商超群的学生，文斗其以河东狮吼闻名的校长。在此，本后生添油加醋地再讲一遍。\n\n## 不屑讽刺型\n校长：【怒吼】混帐东西，天天剩在这打架，我晓得你这怂，块块全有你！\n学生A：我没有！（其实真没有）\n校长：【怒吼】还有脸皮子顶嘴！\n学生A：【轻蔑】你吼什么怂啊，声音大有个什么屌用啊！\n校长：你……\n学生A：学校也有校规，我要是违反了哪条，大不了你把我开除就好了，你吼神尼啊！吼能解决什么问题啊？没有任何意义好不好！（此处省略一堆大道理）\n校长：【左右晃脑，气得发抖，但一言不发】\n\n## 调戏调侃型\n校长：【板着脸走过】\n学生B：我看你天天板着脸多难看啊，笑一个^_^\n（以后每次见到都会这么说）\n（校长自此避之唯恐不及）\n\n![呵](https://img.vvzero.com/blog/back-talk-to-Gu-Xiaobin/1.jpg)","tags":["顾晓斌","高中生活"],"categories":["LIVES"]},{"title":"Android Studio 学习笔记1 - 说一声 Hello World","url":"/2018/02/05/Android-Studio-Learning-1-Build-a-Hello-World-Project/","content":"\n\n## 背景\n\n反正寒假在家，什么东西也没带回来，就一个电脑和手机，总要干点什么……\n正好，想做个记录密码的App……\n\n## 安装和简单配置\n\n安装，就是从[官网](https://developer.android.com/studio/index.html)下载安装包之后，个人认为，默认安装即可。注意，安装路径最好不要带有空格，否则NDK工具会出现问题。\n__我不知道GFW为什么要墙这个网站，但是，如果没有梯子或飞机，就另寻下载地址吧__\n然后，打开应用。\n![打开应用](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/1.JPG)\n首次运行会提醒选择SDK路径，并会下载依赖包（其实挺人性化的，在国内，因为受阻，它会很快让你输入proxy地址）。\n\n## 建立一个新项目\n\n首页点击建立一个新项目，输入项目名、路径（不能含有空格）、包名，其他默认。\n![新建](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/2.JPG)\n选择适用设备，这里我就选择手机，安卓4.4（可以兼容绝大多数设备）。\n![选择设备](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/3.JPG)\n选择项目类型，就选个空项目吧。\n![项目类型](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/4.JPG)\n设置Activity名称，我这里默认。然后完成。\n![Activity](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/5.JPG)\n嘿嘿\n![嘿嘿](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/6.JPG)\n然后等待他完成，可能会再下载一部分依赖文件和SDK。\n项目建立完成\n![建立完成](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/7.JPG)\n这里，先不忙分析。毕竟，我还没学java。我就知道`MainActivity.java`是一个主对象。打开`activity_main.xml`可以看到应用预览和拖控件。\n![xml](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/8.JPG)\n\n## 部署到手机\n\n我不用模拟器，直接上手机。\n以我的小米5,MIUI 9为例，通过USB连接电脑，打开开发者选项，打开USB调试、USB安装。\n![USB DEBUG](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/9.JPG)\n在Android Studio 里，点击run，或shift+F10，选择自己的手机，部署即可，记得在手机上选择允许。\n![run](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/10.JPG)\n![phone](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/11.JPG)\n稍等一会后，即可在手机上运行HelloWorld。\n![效果](https://img.vvzero.com/blog/Android-Studio-Learning-1-Build-a-Hello-World-Project/12.JPG)","tags":["Android"],"categories":["TECHNOLOGY"]},{"title":"我如何使用 Windows 10","url":"/2018/01/29/How-I-use-Windows-10/","content":"\n\n## 前言\n闲来无聊，就是想分享一下自己使用windows 10的方法和体验。\n身份：本人南航本科生，喜欢IT技术、对物联网感兴趣。\nwindows 10，个人认为，是微软历史上最伟大的系统，没有之一。最明显的特点就是流畅，第二就是兼容性极强，几乎可以自动安装所有主流硬件驱动；第三是稳定，除非自己作死，否则几乎不可能死机、蓝屏等。\n与OS X、Ubuntu等其他桌面系统相比，由于windows的普及度较大，所以资源也更多。同时，如果不是开发iOS应用等特殊需求，windows 10可以借助很多优雅的第三方工具完成正常的开发任务。\n\n## 概览\n放几张自己电脑的截屏\n![电脑截屏1](https://img.vvzero.com/blog/How-I-use-Windows-10/1.jpg)\n![电脑截屏2](https://img.vvzero.com/blog/How-I-use-Windows-10/2.jpg)\n![电脑截屏3](https://img.vvzero.com/blog/How-I-use-Windows-10/3.jpg)\n\n## 应用安装篇\n\n__写在前面，我所用的软件，除Adobe系列外（/滑稽），均源自官方网站__\n\n先放一张应用列表\n![应用列表1](https://img.vvzero.com/blog/How-I-use-Windows-10/4.JPG)\n![应用列表2](https://img.vvzero.com/blog/How-I-use-Windows-10/5.JPG)\n下面基本以名称顺序，讲一点我自己安装的常用软件\n\n#### 7-Zip\n反正我推荐windows用这一款压缩软件，体积超小（安装包1M左右），支持所有主流压缩格式，压缩效率也很高。更重要的是，没有任何广告、插件，无污染的绿色产品，不知道比什么好压快压速压360压缩高到哪里去了。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/6.JPG)\n\n#### Adobe Lightroom / Photoshop\n没钱……唯二的破解软件。因为自己对拍照和图片处理挺感兴趣的，所以，必然会装上这两款居家旅行必备良品。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/7.JPG)\n\n#### Arduino IDE\n自己喜欢玩一些硬件开发，Arduino是个很好的选择。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/8.JPG)\n\n#### cosbrowser\n腾讯COS对象存储的图形化工具，写博客插图就靠它了，挺方便的。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/9.JPG)\n\n#### CPUID系列\n偶尔看看电脑硬件配置用的，毕竟自己喜欢折腾电脑。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/10.JPG)\n\n#### Etcher\n树莓派官方推荐的磁盘镜像刷写工具，方便程度和兼容性、可靠性高得让人发指。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/11.JPG)\n\n#### FileZilla\n很优雅的ftp管理工具，虽然有很多替代品，但我这款用熟了，也挺好。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/12.JPG)\n\n#### 格式工厂 FormatFactory\n良心之作，是我用过的最强大的格式转换工具。爱看片的人不要错过。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/13.JPG)\n\n#### FDM(Free Download Manager)\n去他妈的迅雷，给非会员限速。这是一款免费的，效率不亚于迅雷充会员的下载软件，更关键的是，它很简洁，没有什么乱七八糟的广告、影评什么的。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/14.JPG)\n\n#### GitHub Desktop\nGitHub官方出品的代码管理工具，跟source tree差不多。但是它对于非Github的库管理不是很友好。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/15.JPG)\n\n#### Chrome\n个人最喜欢的浏览器，同时也是世界上最有影响力的浏览器，除了内存占用有点多，但是，白璧微瑕，真的没什么其他缺点了。而且什么QQ浏览器、360浏览器等，都以它为内核。相当简洁，没有任何干扰。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/16.JPG)\n\n#### Microsoft Office 2016\n很多人还在用Office 2007甚至2003，但是，他们永远不会知道最新的office给我们的办公可以带来多大的便利。我最大的感受就是，排版相当方便，能够自动定位。其中的onedrive也能随时同步文档。当然，感谢我的学校南京航空航天大学，让我可以企业激活，用上正版的应用。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/17.JPG)\n\n#### Notepad++\n跟它比起来，windows自带的记事本真的是naive。写代码什么的全靠它。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/18.JPG)\n\n#### PTC Creo 4.0\n一款3D模型制作软件，选择它是因为它有教育版，免费！平时为3D打印做一点小物件，足够了。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/19.JPG)\n\n#### 一些串口调试工具\n个人开发需要，经常要进行串口调试。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/20.JPG)\n\n#### Steam\n嘿嘿嘿，怎么能没有这一款神器呢？Steam的游戏水平确实高。作为一个喜欢创造的人，我安装了两款游戏：\n1. 坎巴拉太空计划\n2. 城市天际线\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/21.JPG)\n\n#### TIM\n其实就是精简版QQ，但没有QQ的广告、弹窗，非常简洁，非常高效。腾讯的良心。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/22.JPG)\n\n#### ubuntu子系统\n谁说windows不能有优雅的命令行环境？windows可以安装Linux的子系统，而且共用资源，Windows Subsystem for Linux (WSL)可以直接访问windows目录，可以直接使用windows端口！配合cmder这一款命令行神器，简直无敌！\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/23.JPG)\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/24.JPG)\n\n#### UltraISO\n自己花了30块钱买的正版，一款经典的磁盘镜像管理工具。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/25.JPG)\n\n#### Visual Studio Community 2017\n全宇宙最强的IDE，我只能在它的强大面前跪舔。以前写C++常用，现在倒用得少了。但依旧掩盖不了它的强大！\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/26.JPG)\n\n#### 微信UWP版\n虽然被喷很多，但是我用着感觉很好，基本功能够了。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/27.JPG)\n\n#### Xmind 8\n一款强大的思维导图软件，免费版的功能，我觉得已经够用了。有机会买付费的。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/28.JPG)\n\n#### 小米云服务\n作为一个米粉，必不可少。它很优雅，同步文件很给力，备份很方便，某 度云有多远走多远吧！\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/29.JPG)\n\n#### 有道云笔记\n虽然不是经常用，但是，它给人一种清新的感觉，写笔记很方便，而且可以跟手机端同步。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/30.JPG)\n\n#### 百度输入法\n我感觉这是百度不多的良心之作，用它六年，从来没有给我推荐乱七八糟的东西，也没有广告。个人字库同步也很方便，手机电脑同步。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/31.JPG)\n\n#### 网易云音乐\n不多说，暖心的音乐软件。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/32.JPG)\n\n#### 阿里巴巴\nemmm……要不是常在电脑上跟商家交流，我早就卸了。\n![应用](https://img.vvzero.com/blog/How-I-use-Windows-10/33.JPG)\n\n\n\n## 系统管理篇\n### 1.不用任何第三方杀毒软件、管家类\nWindows自带的Windows Defender已经很强大了，根本不需要第三方杀毒软件。如果自己的使用习惯更好，连Windows Defender都不需要，因为Windows 10 的权限控制相当完善。\n同时，我们也知道，国产的大部分管家、杀毒，都是毒瘤，稍不留神就会把你的电脑强奸。\n![windows defender](https://img.vvzero.com/blog/How-I-use-Windows-10/34.JPG)\n\n### 2.使用英文系统\n完全不是为了装B，在开发过程中，你如果有一个常用目录是中文，会相当头疼。\n\n### 3.硬盘不分区\n我有两块硬盘，我的电脑里面也就是两个分区。为什么不分区？没有必要！有人说可以在D盘放文档，在E盘放游戏之类的，但是，windows自身就给你一个分类的空间。不知道？打开“此电脑”，就能看到了。把文件归类到自己的家目录（也就是`C:/Users/[你的用户名]`），管理起来是很方便的。\n![explorer](https://img.vvzero.com/blog/How-I-use-Windows-10/35.JPG)\n\n### 4.所有常用软件装系统盘\n现在的win10已经远不像过去需要经常重装，对于机械硬盘来说，软件装系统盘可以减少磁头定位时间，提高速度；对于固态盘来说……恐怕“系统盘”就是“固态盘”吧……装系统盘当然能极大提速。\n\n### 5.桌面日常只留一个回收站\n我很喜欢收拾，宿舍的桌子也是干干净净的，所以电脑桌面也是干干净净的。如果有什么文件要处理，可以暂时放在桌面上，用完后整理到其他文件夹里面，或者拖到回收站。\n\n### 6.正常不关机\n反正用的是学校的电嘛……嘿嘿嘿，而且电脑耗电也不多。主要是一次任务如果没有完成，晚上关闭后下一次又要打开一大堆软件，很慢。如果你不关机，常用软件都是贮存在内存里面，打开速度相当快。\n\n### 7.定期把回收站的东西移到移动硬盘里面\n我的移动硬盘很大，而且我觉得我删掉的东西，以后万一有用呢？所以我从来不清空回收站，而是把所有文件移到移动硬盘里面，移动硬盘也就成了我的“垃圾堆”。\n\n### 8.使用windows搜索打开应用\n因为桌面上没有快捷方式，我一般都是靠开始菜单里面输入应用名称打开应用。其实很快的，而且windows搜索已经比过去强大多了。\n\n\n\n## 使用小技巧\n就说我常用的几个快捷键吧\n\n- win + E 打开资源管理器。很方便，毕竟我的桌面和任务栏都空荡荡的。\n- win + 【数字键】 打开任务栏上对应的应用。我主要打开chrome。\n- win + D 显示桌面。嘿嘿嘿。\n- win + L 锁定电脑。虽然不关机，但是要锁定的，万一有人半夜跑来拷走我的私钥呢？【滑稽】\n- win + 【方向上键】/【方向下键】/【方向左键】/【方向右键】 窗口最大化/最小化/左贴边/右贴边\n- win + tab 打开任务视图。还可以添加多个桌面哦，互不干扰，win10新特性。\n- ctrl + win + 【方向左右键】 切换桌面。\n- ctrl + z/s/x/c/v/f 撤销保存剪切复制粘贴查找。不多说。\n- alt + tab 切换窗口。\n- alt + 鼠标双击 打开文件属性。\n- F2 重命名。\n- F5 刷新。\n\n## 回去洗洗睡了^_^\n","tags":["Windows","Computer"],"categories":["TECHNOLOGY"]},{"title":"远程一键关闭服务器web服务","url":"/2018/01/28/Remote-service-shutdown/","content":"\n\n## 背景\n昨天完成了手机客户端远程控制树莓派上LED亮灭的实验（[点击回顾](https://www.vvzero.com/2018/01/27/Control-RaspberryPi-via-4G/)，今天来做一些拓展，从客户端远程一键控制与树莓派处于同一内网的服务器的服务开关。\n\n## 目标要求\n在任意联网的客户端点击“关闭”链接，指定服务器的nginx服务关闭。\n\n## 制作思路\n只要把“开关LED”这一操作，转换成“执行开关服务”即可。而“开关服务”可以直接使用ssh命令。\n\n## 软件配置\n云端的配置与原来相同，只需要修改树莓派的配置。\n\n### 树莓派配置\n接收串口数据并执行shell脚本\n```cpp\n//to-shutdown.cpp\n\n#include<iostream>\n#include<wiringPi.h>\n#include<wiringSerial.h>\n\n#define LED 1\n\nusing namespace std;\n\nint main()\n{\n\tint MySerial;\n\tint flag=0;\n\n\tpinMode(LED, OUTPUT);\n\tif (wiringPiSetup()<0)\n\t{\n\t\tcout << \"Setup Failed!\\n\";\n\t\texit(0);\n\t}\n\n\tif ((MySerial=serialOpen(\"/dev/ttyS0\", 115200))<0)\n\t{\n\t\tcout << \"Serial Failed!\\n\";\n\t\texit(0);\n\t}\n\n\twhile (1)\n\t{\n\t\tif (serialDataAvail(MySerial)>0)\n\t\t{\n\t\t\tchar ch=serialGetchar(MySerial);\n\t\t\tcout << ch << endl;\n\t\t\tint val=ch-48;\n\t\t\tif (flag != val)\n\t\t\t{\n\t\t\t\tflag=val;\n\t\t\t\tif (val==0)\n\t\t\t\t\tsystem(\"sh turn-off.sh\");\n\t\t\t\tif (val==1)\n\t\t\t\t\tsystem(\"sh turn-on.sh\");\n\t\t\t\tdigitalWrite(LED, val);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tserialClose(MySerial);\n\n\treturn 0;\n}\n```\n\n这里，如果接收到0，则关闭服务，如果接收到1，则开启服务。为了避免多次重复开关，设置了一个`flag`变量用于判断。\n\n至于ssh控制服务器的脚本，本人查阅资料后决定采用`sshpass`，这个插件可以在ssh命令中携带密码。当然，如果有密钥对的话，就更加简单了。\n\n```sh\n#!/bin/bash\n#turn-off.sh\n\nsshpass -p '<password>' ssh -p 22 root@192.168.27.20 service nginx stop\n```\n\n```sh\n#!/bin/bash\n#turn-on.sh\n\nsshpass -p '<password>' ssh -p 22 root@192.168.27.20 service nginx start\n```\n\n## 实际测试\n将编译后的`to-shutdown.cpp`和`turn-off.sh`、`turn-on.sh`放在同一目录内，运行。\n\n实际效果如图，这里为了便于演示，用PC端模拟手机操作。\n![效果动画](https://img.vvzero.com/blog/Remote-service-shutdown/1.gif)\n\n可以看到，关闭命令发送后几秒内，web服务即停止。开启命令发送后，web服务也迅速恢复。","tags":["RaspberryPi","4G","有人物联网"],"categories":["TECHNOLOGY"]},{"title":"树莓派经由4G通道接受用户控制","url":"/2018/01/27/Control-RaspberryPi-via-4G/","content":"\n\n## 背景\n经过前一段时间的学习，我已经大致了解了树莓派的串口数据传输以及有人USR-LTE-7S4这一4G模块的使用方法。详情请查看以往的博客。现在我对这两个模块进行整合，构成一个系统一完成特定任务。\n\n## 目标要求\n任何地点的联网用户在手机上操作，可以控制特定树莓派上的LED亮灭。\n\n## 实现方式\n![拓扑图](https://img.vvzero.com/blog/Control-RaspberryPi-via-4G/1.PNG)\n客户端（手机）发送开或关的命令到云端服务器，由于4G模块不断向服务器发送心跳包（一秒一次），服务器将会根据客户端提供的数据回复给4G模块“1”或“0”，以示开关。4G模块再通过串口将数据发送给树莓派，进而达到控制LED的目的。\n\n## 硬件配置\n### 硬件准备\n- 树莓派*1\n- 有人USR-LTE-7S4模块*1\n- LED*1\n- 杜邦线若干\n\n### 硬件连接\n![硬件连接图](https://img.vvzero.com/blog/Control-RaspberryPi-via-4G/2.jpg)\n将树莓派和4G模块的串口、地线对应连好即可\n\n## 软件配置\n### 云端\n云端将会运行两个进程，`response.py`用于回复4G模块的心跳包（即发送指令），`server.py`用于接收客户端发送的指令。这两个进程操作同一个文件`ctrl.in`以完成数据传输。\n\n接收客户端指令：\n```python\n#server.py\n\nimport socket\nimport re\n\nHOST, PORT = '', 10082\n\nlisten_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nlisten_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nlisten_socket.bind((HOST, PORT))\nlisten_socket.listen(1)\nwhile True:\n    client_connection, client_address = listen_socket.accept()\n    request = client_connection.recv(1024)\n    request = request.decode()\n    action = re.findall(\"GET /(.+) \", request)\n    action = action[0]\n    if action==\"1\" or action==\"0\":\n        f = open(\"ctrl.in\", 'w')\n        f.write(action)\n        f.close()\n\n    http_response = \"\"\"\nHTTP/1.1 200 OK\n\n<a href=\"/1\">ON</a><br/><a href=\"/0\">OFF</a>\n\"\"\"\n    client_connection.sendall(http_response.encode())\n    client_connection.close()\n```\n这段代码在前端生成了两个链接，客户端点击链接即可控制文件中数值为1或0，以供`response.py`回复。\n\n向4G模块回复（发送）指令：\n```python\n#response.py\n\nimport socket\n\nHOST, PORT = '', 10081\nlisten_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nlisten_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nlisten_socket.bind((HOST, PORT))\nlisten_socket.listen(1)\n\nwhile True:\n    client_connection, client_address = listen_socket.accept()\n    while True:\n        req = client_connection.recv(1024)\n        print req\n        if req == '+++':\n            resp = 'a'\n        else:\n            f = open(\"ctrl.in\",'r')\n            resp = f.read()\n            f.close()\n        client_connection.sendall(str(resp))\n    client_connection.close()\n```\n这段代码读取`ctrl.in`并回复给4G模块。\n\n### 被控端\n#### 4G模块配置\n在官方配置工具中配置好服务器和心跳包，点击“设置并保存所有参数”\n![4G模块配置1](https://img.vvzero.com/blog/Control-RaspberryPi-via-4G/3.JPG)\n![4G模块配置2](https://img.vvzero.com/blog/Control-RaspberryPi-via-4G/4.JPG)\n\n#### 树莓派配置\n树莓派的职责就是接受4G模块的数据并控制LED。\n```cpp\n//serial.cpp\n\n#include<iostream>\n#include<wiringPi.h>\n#include<wiringSerial.h>\n\n#define LED 1\n\nusing namespace std;\n\nint main()\n{\n        int MySerial;\n\n        pinMode(LED, OUTPUT);\n        if (wiringPiSetup()<0)\n        {\n                cout << \"Setup Failed!\\n\";\n                exit(0);\n        }\n\n        if ((MySerial=serialOpen(\"/dev/ttyS0\", 115200))<0)\n        {\n                cout << \"Serial Failed!\\n\";\n                exit(0);\n        }\n\n        while (1)\n        {\n                if (serialDataAvail(MySerial)>0)\n                {\n                        char ch=serialGetchar(MySerial);\n                        cout << ch << endl;\n                        int val=ch-48;\n                        digitalWrite(LED, val);\n                }\n        }\n\n        serialClose(MySerial);\n\n        return 0;\n}\n```\n此代码的作用是，从串口读取数据，并据此数据控制LED引脚电平高低。\n\n## 运行测试\n云端服务器执行\n`$ python2 server.py &`\n`$ python2 response.py`\n\n被控端通电，树莓派执行\n`& sudo ./SERIAL-RECEIVE` （编译后的可执行文件）\n\n手机访问http://[域名]:10082/0，即可操作。\n\n各终端情况如动画所示\n![终端示意](https://img.vvzero.com/blog/Control-RaspberryPi-via-4G/5.gif)\n\n实物测试如动画所示\n![实物测试](https://img.vvzero.com/blog/Control-RaspberryPi-via-4G/6.gif)\n\n## 展望\n既然可以点亮一盏LED，任何更加复杂的工作均可同理完成。\n","tags":["RaspberryPi","4G","有人物联网","WiringPi"],"categories":["TECHNOLOGY"]},{"title":"树莓派GPIO学习笔记3-使用WiringPi进行串口通讯","url":"/2018/01/26/Study-notes-on-GPIO-of-RaspberryPi-3-Serial-programming-with-WiringPi/","content":"\n\n## 背景\n我们已经初步了解了C++中调用WiringPi库函数的基本方法，现在，浅谈一下树莓派3如何使用WiringPi进行串口通讯。\n\n## 硬件准备\n- 树莓派3\n- USB转TTL编码器\n- 杜邦线若干\n\n## 接线图\n![wiringPi-readall](https://img.vvzero.com/blog/Study-notes-on-GPIO-of-RaspberryPi-3-Serial-programming-with-WiringPi/1.jpg)\nshell键入`$ gpio readall`，按照图示，将编码器和树莓派的TX、RX插口互反接好。理论上Vcc不必连接，只要连接TX、RX和GND即可。\n\n## 通过串口发送数据\n```cpp\n//serial.cpp\n\n#include<iostream>\n#include<wiringPi.h>\n#include<wiringSerial.h>\n\nusing namespace std;\n\nint main()\n{\n        int MySerial;\n\n        if (wiringPiSetup()<0)\n        {\n                cout << \"Setup Failed!\\n\";\n                exit(0);\n        }\n\n        if ((MySerial=serialOpen(\"/dev/ttyS0\", 115200))<0)\n        {\n                cout << \"Serial Failed!\\n\";\n                exit(0);\n        }\n\n        while (1)\n        {\n                serialPrintf(MySerial,\"Hello World!\\n\");\n                delay(1000);\n        }\n\n        serialClose(MySerial);\n\n        return 0;\n}\n```\n这个程序完成的功能是通过 串口每1s发送一个`Hello World!`。\n要使用串口的话，必须再包含一个头文件`wiringSerial.h`。这里的变量`MySerial`只是一个代号，它就类似C++中的文件类型变量，以后操作串口都要通过这个变量。\n`serialOpen(<dev>,<rate>)`这一函数用于打开一个串口设备，类似于打开一个文件（而事实上Linux里硬件就是抽象为文件的）。树莓派3的标准串口是`/dev/ttyS0`，串口波特率暂设为115200。\n在PC端打开串口调试软件，确保波特率一致，打开对应串口，树莓派`$ g++ -o SERIAL serial.cpp -lwiringPi`编译、`$ sudo ./SERIAL`运行（这里好像必须要用管理员权限，否则会报错，具体原因未知），在PC端就可以看到效果了。\n![串口发送数据](https://img.vvzero.com/blog/Study-notes-on-GPIO-of-RaspberryPi-3-Serial-programming-with-WiringPi/3.gif)\n\n## 通过串口接收数据\n```cpp\n//serial-receive.cpp\n\n#include<iostream>\n#include<wiringPi.h>\n#include<wiringSerial.h>\n\n#define LED 1\n\nusing namespace std;\n\nint main()\n{\n        int MySerial;\n\n        pinMode(LED, OUTPUT);\n        if (wiringPiSetup()<0)\n        {\n                cout << \"Setup Failed!\\n\";\n                exit(0);\n        }\n\n        if ((MySerial=serialOpen(\"/dev/ttyS0\", 115200))<0)\n        {\n                cout << \"Serial Failed!\\n\";\n                exit(0);\n        }\n\n        while (1)\n        {\n                if (serialDataAvail(MySerial)>0)\n                {\n                        char ch=serialGetchar(MySerial);\n                        cout << ch << endl;\n                        int val=ch-48;\n                        digitalWrite(LED, val);\n                }\n        }\n\n        serialClose(MySerial);\n\n        return 0;\n}\n```\n此段代码的作用是从上位机接收数据以控制LED的亮灭。`1`代表开，`0`代表关。\n`serialDataAvail(<fd>)`用于判断串口缓冲区有没有数据，有数据即返回数据的字节量，出错返回-1。`serialGetchar(<fd>)`用于从缓冲区读取一个字节的数据。\n![接收数据](https://img.vvzero.com/blog/Study-notes-on-GPIO-of-RaspberryPi-3-Serial-programming-with-WiringPi/3.gif)","tags":["RaspberryPi","WiringPi"],"categories":["TECHNOLOGY"]},{"title":"树莓派GPIO学习笔记2-初步使用WiringPi库进行C++编程","url":"/2018/01/26/Study-notes-on-GPIO-of-RaspberryPi-2-Programming-in-CPP-with-WiringPi/","content":"\n\n## 背景\n现在，我已经安装好了WiringPi依赖包，我的最终目的是实现树莓派与4G模块之间的通讯。简单的shell脚本还是不够的，还好WiringPi提供了大量完善的c++库。借这篇博客记录下相关简单的函数使用过程。\n\n## 让一个LED闪烁的C++实现\n先在前面说一句话，WiringPi的库函数与Arduino很类似，所以如果有过Arduino开发经验，接受起来会快一点。\n```cpp\n//blink.cpp\n\n#include<wiringPi.h>\n\nint main()\n{\n        wiringPiSetup();\n        pinMode(1,OUTPUT);\n\n        while (1)\n        {\n                digitalWrite(1,1);\n                delay(500);\n                digitalWrite(1,0);\n                delay(500);\n        }\n}\n```\n这是一个最简单的LED闪烁的C++代码。首先，如果想使用WiringPi库函数，必须包含头文件`wiringPi.h`。在正式操作引脚之前，必须进行初始化，`wiringPiSetup();`。然后，`pinMode`函数顾名思义，设定某引脚（不是引脚的硬件编号，而是使用`gpio readall`后得到的`wPi`编号）的工作状态。`digitalWrite(<pin>,<value>)`，用于控制引脚电平。`delay`函数用于延时，这里的数值单位是毫秒ms。\n当然，初始化有多种方式，引脚工作模式也有很多种，具体参见[WiringPi官方文档](http://wiringpi.com/reference/)。\n\n然后`$ g++ -o BLINK blink.cpp -lwiringPi`，生成可执行文件。`-lwiringPi`是必须的，表示需要链接到wiringPi库。\n`$ ./BLINK`就可以看到LED闪烁了。\n\n## 下一步\n使用C++实现串口通讯。","tags":["RaspberryPi","WiringPi"],"categories":["TECHNOLOGY"]},{"title":"2018南航的第二场雪","url":"/2018/01/26/2018-sencond-snowy-day-in-NUAA/","content":"\n\n## 早上后期整理了昨天拍的雪景\n\n全是用手机拍的啊\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/1.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/2.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/3.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/4.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/5.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/6.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/7.jpg)\n\n## 当然……嘿嘿\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/8.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/9.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/10.jpg)\n![雪景](https://img.vvzero.com/blog/2018-sencond-snowy-day-in-NUAA/11.jpg)\n","tags":["Photography"],"categories":["LIVES"]},{"title":"notes-of-learning-raspberrypi-GPIO-1","url":"/2018/01/25/notes-of-learning-raspberrypi-GPIO-1/","content":"\n\n## 背景\n最近的项目需要使用树莓派的硬件开发。在多方面考虑后，决定使用树莓派自带串口与有人USR-LTE-7S4进行通讯。首先得学习树莓派GPIO操作。\n\n## 硬件准备\n- 树莓派3\n- LED*1\n- 220Ω电阻\n- 杜邦线若干\n\n## 安装依赖库\n理论上直接操纵树莓派的相关文件就可以直接控制GPIO引脚电平（Linux系统中所有硬件都被虚拟成文件），但是我们没有必要去造这个轮子。\n本人熟悉C++，所以决定使用wiringPi这一开源库。\n[WiringPi官方网站](http://wiringpi.com)\n[WiringPi官方手册](http://wiringpi.com/reference/)\n首先输入shell指令`$ gpio -v`确定树莓派没有安装WiringPi（如果安装了会显示版本号）。\n然后安装Git`$ sudo apt-get install git-core`\n更新系统`$ sudo apt-get update` `$ sudo apt-get upgrade`\n新建一个目录用于存放WiringPi临时文件，然后在此目录内`$ git clone git://git.drogon.net/wiringPi .`\n然后`./build`\n无需root权限就可以进行安装。\n\n## 初步了解WiringPi\n安装好后，使用命令`$ gpio readall`查看引脚信息。\n![引脚信息](https://img.vvzero.com/blog/notes-of-learning-raspberrypi-GPIO-1/2.PNG)\n![引脚图](https://img.vvzero.com/blog/notes-of-learning-raspberrypi-GPIO-1/1.jpg)\n很形象地展示了树莓派的引脚状况。`BCM`这一列暂时不去考虑，`V`代表电平，`Mode`表示工作模式，`Name`就不解释了，`wPi`是WiringPi的接口编号，GPIO编程就使用此编号。\n如果使用过单片机，就很容易理解了。\n暂时先学两个命令`gpio write `，`gpio mode `。\n```shell\n$ gpio write <pin> <value>\n$ gpio mode <pin> <mode>\n```\n例如\n```shell\n$ gpio write 1 1\n$ gpio mode 1 OUT\n```\n\n## 使用shell脚本让一个LED闪烁\n### 代码部分\n直接上代码\n```shell\ngpio mode 1 OUT\nwhile /bin/true\ndo\n\tgpio write 1 1\n\tsleep 0.5\n\tgpio write 1 0\n\tsleep 0.5\ndone\n```\n\n### 硬件连接\n![硬件连接](https://img.vvzero.com/blog/notes-of-learning-raspberrypi-GPIO-1/3.jpg)\n\n然后终端使用命令`$ sh blink.sh`，LED便可以闪烁。\n","tags":["RaspberryPi","WiringPi"],"categories":["TECHNOLOGY"]},{"title":"youren-USR-LTE-7S4-send-and-receive-data","url":"/2018/01/24/youren-USR-LTE-7S4-send-and-receive-data/","content":"\n\n## 背景\n先前了解了有人USR-LTE-7S4的基本命令操作，但是对于我的项目来讲，最重要的还是网络透传功能。于是，我暂时跳过了HTTPD和串口的操作部分，直接学习网络AT指令和短信部分。\n\n## 指令学习\n首先要把工作模式切换为NET网络透传模式。\n![切换模式](https://img.vvzero.com/blog/youren-USR-LTE-7S4-send-and-receive-data/1.PNG)\n\n### 心跳包\n官方提供的串口工具左侧便可以直接启动心跳包，如果要用指令的话，使用`AT+HEARTEN=ON`开启心跳包，使用`AT+HEARTDT=<data>`设置心跳包数据（16进制），`AT+HEARTSND=NET/COM`设置心跳包发往服务器或串口，使用`AT+HEARTTM=<time>`设置心跳包发送间隔。\n![心跳包设置](https://img.vvzero.com/blog/youren-USR-LTE-7S4-send-and-receive-data/2.PNG)\n\n### 传输TCP数据\n官方工具可以直接设定服务器\n![设置服务器](https://img.vvzero.com/blog/youren-USR-LTE-7S4-send-and-receive-data/3.jpg)\n然后我们在自己的公网服务器上开启一个服务监听相应端口就行了。\n这里贴出python源码\n```python\nimport socket\n\nHOST, PORT = '', 10081\nlisten_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nlisten_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nlisten_socket.bind((HOST, PORT))\nlisten_socket.listen(1)\n\nwhile True:\n    client_connection, client_address = listen_socket.accept()\n    while True:\n        req = client_connection.recv(1024)\n        print req\n        resp = \"1\"\n        client_connection.sendall(str(resp))\n    client_connection.close()\n```\n\n服务端启动后，就可以与服务器进行通讯了。\n__一定要把模块切换为通讯状态__\n\n附上测试的效果图\n![TCP通讯测试](https://img.vvzero.com/blog/youren-USR-LTE-7S4-send-and-receive-data/4.PNG)\n\n### 短信发送\n按照官方文档，串口发送命令`AT+SMSEND=number,data`或`AT+CISMSSEND=number,type`就可以发送短信。但是严格按照官方文档操作后，目标手机没有任何反应。本人已经提交工单。\n_也许是自己还很naive吧_","tags":["4G","有人物联网"],"categories":["TECHNOLOGY"]},{"title":"Hexo+Next主题在首页隐藏特定博客","url":"/2018/01/23/Hexo-Next-hide-specific-blog/","content":"\n\n\n## 背景\n在搭好博客之后，想把每天的日记，主要是短小的随想写到博客里。但是，我又不想让这些日记出现在首页，毕竟首页要放一些更加有价值的东西。于是，我就想把日记在首页隐藏起来，并且可以在另一个菜单内打开。我在知乎及github里搜索到了为数不多的方法，自己理解并整合了一下，暂且写在这里。\n\n## 准备\n- 已经初步配置好的Hexo框架\n- Next主题\n\n## 个人理解及思路\nNext主题在处理博客时，会调用`\\themes\\next\\layout\\index.swig`作为其首页的框架。在未进行配置时，此文件内会有以下语句：\n```python\n<section id=\"posts\" class=\"posts-expand\">\n  {% for post in page.posts %}\n    {{ post_template.render(post, true) }}\n  {% endfor %}\n</section>\n```\n其中for循环的意思是，把`_posts`下的所有文件都在首页进行展示。那么，如果不想让某些博客在首页被展示，只要加一个判断语句，把含有某关键字（比如说，标签）的博客屏蔽就可以了。而且这样做，博客仍然能在Archives/Tags等里面找到。\n\n## 具体操作\n我这里选择的关键字是标签Tags，把Tags为DIARY的博客过滤掉。\n修改以上代码如下：\n```python\n<section id=\"posts\" class=\"posts-expand\">\n{% for post in page.posts %}\n  {% for tag in post.tags %}\n\t{% if tag.name !== 'DIARY' %}\n\t  {{ post_template.render(post, true) }}\n\t{% endif %}\n  {% endfor %}\n{% endfor %}\n</section>\n```\n注意，这里要再嵌套一个for循环用于检索tag。个人理解是，Tags是一个集合，包含了多个元素，故不能直接`if post.tags !== 'DIARY'`。\n\n然后，把你的日记的Tags改成DIARY，就不会在首页显示了。\n\n## 把所有日记整合到一个菜单中\n这里有知乎大神的现成的教程，[点击传送门](https://www.zhihu.com/question/33324071/answer/58775540?group_id=654307162210365440#comment-106092511)\n\n## 弊端\n如果某博客有多个标签，那么可能会导致其在首页多次显示。（本人未测试）","tags":["Hexo","Next"],"categories":["TECHNOLOGY"]},{"title":"youren-USR-LTE-7S4-simple-AT-command","url":"/2018/01/22/youren-USR-LTE-7S4-simple-AT-command/","content":"\n\n\n## 硬件图\n\n![硬件图](https://img.vvzero.com/blog/youren-USR-LTE-7S4-simple-AT-command/1.jpg)\n\n## 资料准备\n我在有人物联网官网上搜集了以下的资料和工具\n[链接：有人物联网-串口转4G模块](http://www.usr.cn/Product/179.html)\n\n![资料图](https://img.vvzero.com/blog/youren-USR-LTE-7S4-simple-AT-command/2.PNG)\n\n## 硬件参数\n我整理了此模块一部分重要的参数\n\n### 传输速率\n1. TDD-LTE 3GPP R9 CAT4下行150 Mbps，上行50 Mbps\n2. FDD-LTE 3GPP R9 CAT4下行150 Mbps，上行50 Mbps\n3. WCDMA HSPA+ 下行速率 21 Mbps 上行速率 5.76 Mbps\n4. TD-SCDMA 3GPP R9 下行速率 2.8 Mbps 上行速率 2.2 Mbps\n\n### 串口波特率\nTTL(3.3V/5V) 300~230400bps\n\n### 工作电压\nDC5~16V/3.8V 二选一供电，不可同时使用\n\n### 引脚定义\n引脚编号从右下网左下U形编号1~23\n![引脚定义1](https://img.vvzero.com/blog/youren-USR-LTE-7S4-simple-AT-command/4.PNG)\n![引脚定义2](https://img.vvzero.com/blog/youren-USR-LTE-7S4-simple-AT-command/5.PNG)\n个人认为重要的是\n- 6引脚 串口TX\n- 7引脚 串口RX\n- 9引脚 正常工作指示\n- 11、12引脚 GND\n- 13、14引脚 VIN\n- 15引脚 网络状态\n\n## 基本指令\n0. AT 测试状态是否正常\n0. AT+Z 软件重启\n0. AT+REBOOT 设备重启\n1. AT+WKMOD 查询/设置工作模式\n2. AT+E 查询/设置是否开启指令回显\n\n__所有查询都是AT+某指令，设置的话，在后面加=__\n\n## 后续\n由于项目需要，本人决定首先学习socket网络指令。","tags":["4G","有人物联网"],"categories":["TECHNOLOGY"]},{"title":"hexo+next+腾讯云cos制作图片页面（相册）","url":"/2018/01/21/hexo-next-create-gallery-with-tencent-cloud-COS/","content":"\n\n\n## 背景\n我花了两天时间搭建好了一个hexo博客平台，也学会了如何post一篇博客。但是，我总是想在hexo上放一点自己喜欢的照片。无奈使用的next主题并没有原生支持相册，网上找的各种方法又太复杂，于是，决定自己用点小聪明，做个简单的能看的图片页面（不敢称之为相册，毕竟几乎没有功能）。\n\n## 工具准备\n1. Excel 2016  （这个大家应该都有，其他版本也行）\n2. hexo平台   （具体布置就不谈了）\n3. 腾讯云COS   （这个是免费的，每月50G）\n\n## 操作步骤\n在正式操作之前，请使用命令`hexo new page \"gallery\"` 新建一个页面用于显示照片。\n\n### 准备图片\n先把所有照片存到某个目录内。而后上传到腾讯云COS，这里我使用的是COS客户端，其他方法同理。为什么要上传到COS而不放在服务器里？一方面国内服务器带宽太小，使用CDN成本太高而且存在延迟，另一方面也是为了方便防盗链。\n\n__注意！文件名中不能含有空格，否则会读取失败！__\n![准备照片](https://img.vvzero.com/blog/hexo-next-create-gallery-with-tencent-cloud-COS/1.PNG) \n\n### 初始化Excel\nMarkDown中图片链接格式是`![]()`，按照此格式初始化Excel。第一列放`![`，第二列放编号（如果自己想给图片取名也可以），第三列是`](`，第四列放你的COS储存筒的根目录链接，第五列暂时留空，准备放图片文件名，第六列是`)`。\n\n### 获取文件名\n由于图片可能很多，不可能手动添加，故在此目录内打开powershell，使用命令`ls -name`获取当前目录的所有照片文件名。\n![获取文件名](http://img.vvzero.com/hexo-next-create-gallery-with-tencent-cloud-COS/2.PNG)\n而后将文件名拷贝到Excel中的第五列。\n![3](https://img.vvzero.com/blog/hexo-next-create-gallery-with-tencent-cloud-COS/3.PNG)\n\n### Excel填充\n而后使用Excel自动填充，完成每一列。并在最后加上一列，生成完整的图片格式：`=A1&B1&C1&D1&E1&F1`，同样自动填充。\n![自动填充](https://img.vvzero.com/blog/hexo-next-create-gallery-with-tencent-cloud-COS/4.PNG)\n\n### 复制到md文件中\n然后，把最后一列复制到gallery目录下的index.md中，就大功告成啦！\n![复制](https://img.vvzero.com/blog/hexo-next-create-gallery-with-tencent-cloud-COS/5.PNG)\n\n## 后记\n成品图：\n![成品图](https://img.vvzero.com/blog/hexo-next-create-gallery-with-tencent-cloud-COS/6.PNG)\n没什么好说的啦，还是希望自己能做出一个更像样一点的相册！","tags":["腾讯云","COS"],"categories":["TECHNOLOGY"]},{"title":"A Bet with Su Ruifu","url":"/2018/01/21/A-Bet-with-Su-Ruifu/","content":"\n\n\n## 这是一场与苏瑞辅为期一年的赌博\n\n```c\n#include\"get_villivateur_behav.h\"\n\nint count=0;\n\nvoid loop()\n{\n\tif (Villivateur.WriteBlog()) count++;\n\t\n\tif ((count>=365)&&(time()<=154699200)) GetMoneyFromSuruifu(500);\n}\n```\n","tags":["Bet","rvfu98"],"categories":["LIVES"]},{"title":"所谓的年味儿","url":"/2018/01/21/such-the-new-year-feeling/","content":"\n\n\n> 【回忆去年】\n> Written by @长歌如令\n\n好像是几年之前，就在跟我爸说，感觉现在过年已经失去了年味儿，当时我爸说可能就是没有播放一些喜庆的歌曲吧，但是我不这么认为。尽管如此，我还是说不清什么叫年味儿。\n\n记得小时候，到了年末，总是会跟邻居家的小孩一起玩，那时候还很流行去邻居家拜年，几家之后，口袋里便会塞满各种各样的糖果。提到这个，就会想起我掉的第一颗牙齿就是被奶糖粘下来的。可是早在我五六年级的时候，就不这样做了。现在的我不会跟邻居家的孩子说话，总感觉没有什么共同语言了，毕竟这么多年过去了，她们变了很多，我也变了很多。初中的时候还会去找几个同学聊聊，高中的时候就没有了，去年由于机缘巧合，年初二的时候跟几个老同学斗地主。除此之外，大概就是沉迷网络……\n\n这几天，一直在催我弟写作业，其实想想我自己，我也是一个不想写作业 的人啊。小时候，到了假期最后几天，被我爸看着完成作业，后来，依旧是尽可能地拖。即便是高三的时候，我也是拖到最后几天，在家人都入睡之后，我还在挑灯夜战。 可能现在没有了作业的压迫，反而有点不习惯。对于如今的我而言，大概过年就意味着我妈开始不停的叨叨，开始每天七点多就喊我和我弟起床，开始每天都去买东西……噢，对了，还有我妈做包子。似乎从初中开始的吧， 老妈每年过年都会自己做包子，本着自己动手，丰衣足食的精神，当然，几乎是全家动员，比如我今天就洗了好多好多的青菜，尽管那包子的味道真的不咋样，可是我妈还是会做包子，乐此不疲。过年意味着忙碌，很多人家都移居城里，老家开始变得冷清，原先是家家户户都在叮叮当当地忙活着，现在是只有几家，那些子女已经迁走的老人，都失去了忙活的热情。\n\n城市有城市的繁华，但是 我更偏爱乡村的宁静。包括空气也会更清新，还有那夜晚在空中闪烁的星星。虽然那已经是几亿万年前发出的光芒，但是每次看到 星星，心情都会很好。可能我已经过了那种蹦跶的年纪，但谁说我就不能蹦跶了呢。遇到很开心的事情，我的内心就是想飞上天，和太阳肩并肩，非常想蹦跶。此刻外面鞭炮声不断，令人抓狂。可我并不能阻止，谁让这是风俗呢……\n","tags":["lingling"],"categories":["LIVES"]},{"title":"Remote Control Client via ESP8266 Arduino","url":"/2018/01/20/Remote-Control-Client-via-ESP8266-Arduino/","content":"\n\n\n> Author: Villivateur Von from CAE, NUAA.\n> First published by 苏瑞辅的网络日志.\n> All rights reserved. Please contact the Author for reposting.\n\n## Background\nI am now learning something about socket programming and hardware development. And then it occurs to me that an IoT device controled by smart phone could be exciting. This passage only show one of the smallest steps of the project, yet, the most important one. Now I can control the LED via Arduino, but the same can be applied to the remote control of any smart device.\n\nI used to use a cloud platform called BigIoT. Powerful this platform is, but for my project it is too bloated. And I am also want to try my own development capabilities, so this time I do this by myself.\n\n## Principle\n如果服务器与客户端处于同一子网内，数据传输相对容易一点，但是，当前的IPv4地址不够用，很多的客户端都是通过NAT转换连接到公网的，这就使得服务器不能直接向内网客户端发送数据。方法总是有的，由于客户端可以直接向公网服务器发送数据，而服务器在接收到数据之后，是可以向客户端回复一个数据的，这样一来，“回复”，便可以理解为服务器向内网客户端发送了数据。\n\n## Hardware Needed\n1. Arduino Nano\n2. ESP8266 Wi-Fi Module\n\n## Control Process\n首先，Arduino向ESP8266发送请求连接远程服务器（TCP），在200ms延时内得到回复后，继续请求发送TCP数据包，而后传输数据（我这里只发送了一个“6”）。如果上面任意一步出现错误，错误指示灯将亮起，并且自动重新连接。如果连接无误，Arduino将会收到服务器回复的信息，“1”或“0”。这里我用“1”代表亮起被控制的LED，“0”代表熄灭它。\n\n配合服务端的Socket程序，便可以实现简单的远程通讯。\n\n## Pictures\n![Real Products](https://img.vvzero.com/blog/Remote-Control-Client-via-ESP8266-Arduino/1.png)\n<center>Real Products</center>\n\n![The Server Terminal](https://img.vvzero.com/blog/Remote-Control-Client-via-ESP8266-Arduino/2.png)\n<center>The Server Terminal</center>\n\n## Source Code\n\nThe Arduino Client:\n```c\n/*\n   2018/1/5\n   @Villivateur Von\n   基于ESP8266和Arduino的Socket内网穿透控制客户端\n*/\n#include <Servo.h>\n\n#define ErrorLED 12 //错误指示灯\nServo myservo;//控制舵机\n\nvoid setup() {\n  Serial.begin(115200);\n\n  myservo.attach(9);\n\n  pinMode(ErrorLED, OUTPUT);\n\n  digitalWrite(ErrorLED, 0);//错误指示灯置0\n  delay(6000);//ESP8266启动预留时间\n\n  Serial.print(\"ATE0\\r\\n\");//关闭回显\n  delay(300);\n}\n\nchar msg[64];//用于存放ESP8266回传信息\n\nvoid loop() {\n  int msglen = 0;//用于存放回传信息长度\n\n  Serial.print(\"AT+CIPCLOSE\\r\\n\");//为防止前一个TCP连接仍存在而导致错误，先清空链连接\n  delay(100);\n  recvmsg();//清空缓冲区\n\n  Serial.print(\"AT+CIPSTART=\\\"TCP\\\",\\\"192.168.27.2\\\",10081\\r\\n\");//建立TCP连接\n  delay(300);\n  msglen = recvmsg();\n  if (msg[0] == 'C' && msg[4] == 'E' && msg[msglen - 3] == 'K') {//比较回传信息（基于ESP8266回传信息特性），是否已经成功建立连接，若否，错误指示灯亮\n    digitalWrite(ErrorLED, 0);\n    while (1) {\n      Serial.print(\"AT+CIPSEND=1\\r\\n\");//发送数据\n      delay(100);\n      msglen = recvmsg();\n      if (msg[2] == 'O' && msg[3] == 'K') {//同上比较\n        digitalWrite(ErrorLED, 0);\n        Serial.print(\"6\");//发送一个“6”（测试用）\n        delay(300);\n        msglen = recvmsg();\n\n        if (msg[2] == 'R' && msg[7] == '1' && msg[18] == 'S' && msg[23] == 'O' && msg[34] == '1') {//同上比较\n          digitalWrite(ErrorLED, 0);\n          if (msg[msglen - 1] == '1') myservo.write(0);\n          if (msg[msglen - 1] == '0') myservo.write(140); //根据回传数据控制\n        }\n        else {\n          digitalWrite(ErrorLED, 1);\n          break;\n        }\n\n      }\n      else {\n        digitalWrite(ErrorLED, 1);\n        break;\n      }\n    }\n  }\n  else digitalWrite(ErrorLED, 1);\n}\n\n//接收ESP8266数据的函数，返回值为数据长度\nint recvmsg() {\n  int i = 0;\n  while (Serial.available()) {\n    msg[i] = (char)Serial.read();\n    i++;\n  }\n  return i;\n}\n```\n\nThe Server:\n```c\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <stdio.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n#include <string.h>\n#include <stdlib.h>\n#include <fcntl.h>\n#include <sys/shm.h>\n\n#define MYPORT  10081\n#define QUEUE   20\n#define BUFFER_SIZE 1024\n\nint main()\n{\n\twhile (1)\n\t{\n\t\tint server_sockfd = socket(AF_INET,SOCK_STREAM, 0);\n\n\n\t\tstruct sockaddr_in server_sockaddr;\n\t\tserver_sockaddr.sin_family = AF_INET;\n\t\tserver_sockaddr.sin_port = htons(MYPORT);\n\t\tserver_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n\n\t\tif(bind(server_sockfd,(struct sockaddr *)&server_sockaddr,sizeof(server_sockaddr))==-1)\n\t\t{\n\t\t\tperror(\"bind\");\n\t\t}\n\n\t\t///listen，成功返回0，出错返回-1\n\t\tif(listen(server_sockfd,QUEUE) == -1)\n\t\t{\n\t\t\tperror(\"listen\");\n\t\t}\n\n\t\t///客户端套接字\n\t\tchar buffer[BUFFER_SIZE];\n\t\tstruct sockaddr_in client_addr;\n\t\tsocklen_t length = sizeof(client_addr);\n\n\t\t///成功返回非负描述字，出错返回-1\n\t\tint conn = accept(server_sockfd, (struct sockaddr*)&client_addr, &length);\n\t\tif(conn<0)\n\t\t{\n\t\t\tperror(\"connect\");\n\t\t}\n\n\t\twhile(1)\n\t\t{\n\t\t\tmemset(buffer,0,sizeof(buffer));\n\t\t\tint len = recv(conn, buffer, sizeof(buffer),0);\t  \n\t\t\t//printf(\"recive message from client:\\n\");\n\t\t\t//fputs(buffer,stdout);\n\t\t\tif (buffer[0]!='6') break;\n\t\t\t//printf(\"\\n\");\n\t\t\tFILE *ctrl=fopen(\"ctrl.in\",\"r\");\n\t\t\tbuffer[0]=fgetc(ctrl);\n\t\t\tfclose(ctrl);\n\t\t\t//buffer[0]='1';\n\t\t\t//printf(\"Send messsge to client:\\n\");\n\t\t\t//fputs(buffer,stdout);\n\t\t\t//printf(\"\\n\"); \n\t\t\tsend(conn, buffer, len, 0);\n\t\t}\n\t\tclose(conn);\n\t\tclose(server_sockfd);\n\t}\n\treturn 0;\n}\n```\n\n## P.S.\n\n1. 如果服务端回复的数据由另一个客户端提供（比如手机），那么就可以实现手机控制Arduino的行为了。\n2. 本人学识短浅，所采用的方法必定不是最优，还望各位大佬批评指正。","tags":["Arduino","ESP8266"],"categories":["TECHNOLOGY"]}]